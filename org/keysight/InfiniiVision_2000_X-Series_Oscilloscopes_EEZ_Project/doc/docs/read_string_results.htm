<html><head>
      <meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
   <title>Reading Query Results into String Variables</title><link rel="stylesheet" href="docbook_xsl_dds.css" type="text/css"><meta name="generator" content="DocBook XSL Stylesheets V1.70.1"><link rel="start" href="index.htm" title="Agilent InfiniiVision 2000&nbsp;X-Series Oscilloscopes"><link rel="up" href="programming.htm" title="Programming the Oscilloscope"><link rel="prev" href="read_query_responses.htm" title="Reading Query Responses from the Oscilloscope"><link rel="next" href="read_numeric_results.htm" title="Reading Query Results into Numeric Variables"><link rel="copyright" href="ln-warranty.htm" title="Warranty"></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><p align="right"><a href="programming.htm" style="text-decoration: none"><font size="1" color="#0099CC"><b>Programming the Oscilloscope </b></font></a><br><hr noshade="true" color="#0099CC"></p><div class="section" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="read_string_results"></a>Reading Query Results into String Variables<a name="d0e2192"></a><a name="d0e2195"></a></h3></div></div></div><p>The output of the instrument may be numeric or character data
    depending on what is queried. Refer to the specific command descriptions
    for the formats and types of data returned from queries.</p><div class="note"><table border="0" summary="Note: Express String Variables Using Exact Syntax"><tr><td rowspan="2" align="center" valign="top" width="25"><img alt="[Note]" src="images/note.gif"></td><th align="left">Express String Variables Using Exact Syntax</th></tr><tr><td align="left" valign="top"><p>In Visual Basic, string variables are case sensitive and must be
      expressed exactly the same each time they are used.</p></td></tr></table></div><p>The following example shows numeric data being returned to a string
    variable:</p><pre class="programlisting">myScope.WriteString ":CHANnel1:RANGe?"
Dim strQueryResult As String
strQueryResult = myScope.ReadString
MsgBox "Range (string):" + strQueryResult</pre><p>After running this program, the controller displays:</p><p><code class="computeroutput">Range (string): +40.0E+00</code></p></div></body></html>