<html><head>
      <meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
   <title>:OVLenable (Overload Event Enable Register)</title><link rel="stylesheet" href="docbook_xsl_dds.css" type="text/css"><meta name="generator" content="DocBook XSL Stylesheets V1.70.1"><link rel="start" href="index.htm" title="Agilent InfiniiVision 2000&nbsp;X-Series Oscilloscopes"><link rel="up" href="root_commands.htm" title="Root (:) Commands"><link rel="prev" href="_operegister_event.htm" title=":OPERegister[:EVENt] (Operation Status Event Register)"><link rel="next" href="_ovlregister.htm" title=":OVLRegister (Overload Event Register)"><link rel="copyright" href="ln-warranty.htm" title="Warranty"></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><p align="right"><a href="root_commands.htm" style="text-decoration: none"><font size="1" color="#0099CC"><b>Root (:) Commands </b></font></a><br><hr noshade="true" color="#0099CC"></p><div class="refentry" lang="en"><a name="_ovlenable"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>:OVLenable (Overload Event Enable Register) — <a href="core_commands.htm" title="Core Commands"><img src="images/../images/core.gif"></a></p></div><div class="refsection" lang="en"><a name="_ovlenable_command"></a><h2>Command Syntax</h2><pre class="synopsis">:OVLenable &lt;enable_mask&gt;</pre><pre class="synopsis">&lt;enable_mask&gt; ::= 16-bit integer</pre><p><a name="d0e13746"></a><a name="d0e13749"></a><a name="d0e13752"></a><a name="d0e13755"></a>The overload enable mask is an integer representing an input
    as described in the following table.</p><p>The :OVLenable command sets the mask in the Overload Event Enable
    Register and enables the reporting of the Overload Event Register. If an
    overvoltage is sensed on a 50&#937; input, the input will automatically
    switch to 1 M&#937; input impedance. If enabled, such an event will set
    bit 11 in the Operation Status Register.<a name="d0e13761"></a><a name="d0e13764"></a></p><div class="note"><table border="0" summary="Note"><tr><td rowspan="2" align="center" valign="top" width="25"><img alt="[Note]" src="images/note.gif"></td><th align="left"></th></tr><tr><td align="left" valign="top"><p>You can set analog channel input impedance to 50&#937; on the
      300&nbsp;MHz, 500&nbsp;MHz, and 1&nbsp;GHz bandwidth oscilloscope
      models. On these same bandwidth models, if there are only two analog
      channels, you can also set external trigger input impedance to
      50&#937;.</p></td></tr></table></div><div class="mediaobject"><img src="images/../images/ovlr_ovl.png"></div><div class="table"><a name="overload_event_enable_register"></a><p class="title"><b>Overload Event Enable Register (OVL):</b></p><div class="table-contents"><table summary="Overload Event Enable Register (OVL)" cellspacing="0" cellpadding="5" border="1"><colgroup><col><col><col></colgroup><thead valign="bottom"><tr><th align="left">Bit</th><th align="left">Description</th><th align="left">When Set (1 = High = True), Enables:</th></tr></thead><tbody valign="top"><tr><td>15-10</td><td>---</td><td>(Not used.)</td></tr><tr><td>9</td><td>Channel 4 Fault</td><td>Event when fault occurs on Channel 4 input.</td></tr><tr><td>8</td><td>Channel 3 Fault</td><td>Event when fault occurs on Channel 3 input.</td></tr><tr><td>7</td><td>Channel 2 Fault</td><td>Event when fault occurs on Channel 2 input.</td></tr><tr><td>6</td><td>Channel 1 Fault</td><td>Event when fault occurs on Channel 1 input.</td></tr><tr><td>5-4</td><td>---</td><td>(Not used.)</td></tr><tr><td>3</td><td>Channel 4 OVL</td><td>Event when overload occurs on Channel 4 input.</td></tr><tr><td>2</td><td>Channel 3 OVL</td><td>Event when overload occurs on Channel 3 input.</td></tr><tr><td>1</td><td>Channel 2 OVL</td><td>Event when overload occurs on Channel 2 input.</td></tr><tr><td>0</td><td>Channel 1 OVL</td><td>Event when overload occurs on Channel 1 input.</td></tr></tbody></table></div></div><br class="table-break"></div><div class="refsection" lang="en"><a name="_ovlenable_query"></a><h2>Query Syntax</h2><pre class="synopsis">:OVLenable?</pre><p>The :OVLenable query returns the current enable mask value contained
    in the Overload Event Enable Register.</p></div><div class="refsection" lang="en"><a name="d0e13868"></a><h2>Return Format</h2><pre class="synopsis">&lt;enable_mask&gt;&lt;NL&gt;</pre><pre class="synopsis">&lt;enable_mask&gt; ::= integer in NR1 format.</pre></div><div class="refsection" lang="en"><a name="d0e13875"></a><h2>See Also</h2><div class="itemizedlist"><ul type="disc"><li><p><a href="root_commands.htm#root_commands_overview">Introduction to Root (:)
  Commands</a></p></li><li><p><a href="_channel_n_protection.htm" title=":CHANnel<n&gt;:PROTection">:CHANnel&lt;n&gt;:PROTection</a></p></li><li><p><a href="_opee.htm" title=":OPEE (Operation Status Enable Register)">:OPEE (Operation Status Enable Register)</a></p></li><li><p><a href="_operegister_condition.htm" title=":OPERegister:CONDition (Operation Status Condition&#xA;    Register)">:OPERegister:CONDition (Operation Status Condition
    Register)</a></p></li><li><p><a href="_operegister_event.htm" title=":OPERegister[:EVENt] (Operation Status Event Register)">:OPERegister[:EVENt] (Operation Status Event Register)</a></p></li><li><p><a href="_ovlregister.htm" title=":OVLRegister (Overload Event Register)">:OVLRegister (Overload Event Register)</a></p></li><li><p><a href="_stb.htm" title="*STB (Read Status Byte)">*STB (Read Status Byte)</a></p></li><li><p><a href="_sre.htm" title="*SRE (Service Request Enable)">*SRE (Service Request Enable)</a></p></li></ul></div></div></div></body></html>