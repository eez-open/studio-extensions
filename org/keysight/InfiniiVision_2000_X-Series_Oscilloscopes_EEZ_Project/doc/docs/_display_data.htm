<html><head>
      <meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
   <title>:DISPlay:DATA</title><link rel="stylesheet" href="docbook_xsl_dds.css" type="text/css"><meta name="generator" content="DocBook XSL Stylesheets V1.70.1"><link rel="start" href="index.htm" title="Agilent InfiniiVision 2000&nbsp;X-Series Oscilloscopes"><link rel="up" href="display_commands.htm" title=":DISPlay Commands"><link rel="prev" href="_display_clear.htm" title=":DISPlay:CLEar"><link rel="next" href="_display_label.htm" title=":DISPlay:LABel"><link rel="copyright" href="ln-warranty.htm" title="Warranty"></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><p align="right"><a href="display_commands.htm" style="text-decoration: none"><font size="1" color="#0099CC"><b>:DISPlay Commands </b></font></a><br><hr noshade="true" color="#0099CC"></p><div class="refentry" lang="en"><a name="_display_data"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>:DISPlay:DATA — <a href="non-core_commands.htm" title="Non-Core&#xA;    Commands"><img src="images/../images/non_core.gif"></a></p></div><div class="refsection" lang="en"><a name="_display_data_query"></a><h2>Query Syntax<a name="d0e19271"></a><a name="d0e19274"></a><a name="d0e19277"></a><a name="d0e19280"></a><a name="d0e19283"></a></h2><pre class="synopsis">:DISPlay:DATA? [&lt;format&gt;][,][&lt;palette&gt;]</pre><pre class="synopsis">&lt;format&gt; ::= {BMP | BMP8bit | PNG}</pre><pre class="synopsis">&lt;palette&gt; ::= {COLor | GRAYscale}</pre><p>The :DISPlay:DATA? query reads screen image data. You can choose
    24-bit BMP, 8-bit BMP8bit, or 24-bit PNG formats in color or
    grayscale.</p><p>If no format or palette option is specified, the screen image is
    returned in BMP, COLor format.</p><p>Screen image data is returned in the IEEE-488.2 # binary block data
    format.</p></div><div class="refsection" lang="en"><a name="d0e19298"></a><h2>Return Format</h2><pre class="synopsis">&lt;display data&gt;&lt;NL&gt;</pre><pre class="synopsis">&lt;display data&gt; ::= binary block data in IEEE-488.2 # format.</pre></div><div class="refsection" lang="en"><a name="d0e19305"></a><h2>See Also</h2><div class="itemizedlist"><ul type="disc"><li><p><a href="display_commands.htm#display_commands_overview">Introduction to :DISPlay
  Commands</a></p></li><li><p><a href="_hardcopy_inksaver.htm" title=":HARDcopy:INKSaver">:HARDcopy:INKSaver</a></p></li><li><p><a href="_print.htm" title=":PRINt">:PRINt</a></p></li><li><p><a href="_rcl.htm" title="*RCL (Recall)">*RCL (Recall)</a></p></li><li><p><a href="_sav.htm" title="*SAV (Save)">*SAV (Save)</a></p></li><li><p><a href="_view.htm" title=":VIEW">:VIEW</a></p></li></ul></div></div><div class="refsection" lang="en"><a name="d0e19327"></a><h2>Example Code<a name="d0e19330"></a><a name="d0e19333"></a></h2><pre class="programlisting">   ' IMAGE_TRANSFER - In this example, we will query for the image data
   ' with ":DISPlay:DATA?", read the data, and then save it to a file.
   Dim byteData() As Byte
   myScope.IO.Timeout = 15000
   myScope.WriteString ":DISPlay:DATA? BMP, COLOR"
   byteData = myScope.ReadIEEEBlock(BinaryType_UI1)
   ' Output display data to a file:
   strPath = "c:\scope\data\screen.bmp"
   ' Remove file if it exists.
   If Len(Dir(strPath)) Then
     Kill strPath
   End If
   Close #1   ' If #1 is open, close it.
   Open strPath For Binary Access Write Lock Write As #1   ' Open file for output.
   Put #1, , byteData   ' Write data.
   Close #1   ' Close file.
   myScope.IO.Timeout = 5000</pre><p>See complete example programs at: <a href="Examples.htm" title="Programming Examples"><i>Programming Examples</i></a></p></div></div></body></html>