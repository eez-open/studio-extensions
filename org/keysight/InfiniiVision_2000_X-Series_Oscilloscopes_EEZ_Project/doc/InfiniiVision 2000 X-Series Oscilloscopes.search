<?xml version="1.0" encoding="utf-8"?><HierarchySearchSerializer xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><a name="SCPI"><d><e /><e /></d><d><e>ACQuire</e><e>ACQuire</e></d><d><e>ACQuire:COMPlete</e><e>COMPlete</e></d><d><e>ACQuire:COUNt</e><e>COUNt</e></d><d><e>ACQuire:MODE</e><e>MODE</e></d><d><e>ACQuire:POINts</e><e>POINts</e></d><d><e>ACQuire:SEGMented</e><e>SEGMented</e></d><d><e>ACQuire:SEGMented:ANALyze</e><e>ANALyze</e></d><d><e>ACQuire:SEGMented:COUNt</e><e>COUNt</e></d><d><e>ACQuire:SEGMented:INDex</e><e>INDex</e></d><d><e>ACQuire:SRATe</e><e>SRATe</e></d><d><e>ACQuire:TYPE</e><e>TYPE</e></d><d><e>ACTivity</e><e>ACTivity</e></d><d><e>AER</e><e>AER</e></d><d><e>AUToscale</e><e>AUToscale</e></d><d><e>AUToscale:AMODE</e><e>AMODE</e></d><d><e>AUToscale:CHANnels</e><e>CHANnels</e></d><d><e>AUToscale:FDEBug</e><e>FDEBug</e></d><d><e>BLANk</e><e>BLANk</e></d><d><e>BUS</e><e>BUS</e></d><d><e>BUS:BIT</e><e>BIT</e></d><d><e>BUS:BITS</e><e>BITS</e></d><d><e>BUS:CLEar</e><e>CLEar</e></d><d><e>BUS:DISPlay</e><e>DISPlay</e></d><d><e>BUS:LABel</e><e>LABel</e></d><d><e>BUS:MASK</e><e>MASK</e></d><d><e>CALibrate</e><e>CALibrate</e></d><d><e>CALibrate:DATE</e><e>DATE</e></d><d><e>CALibrate:LABel</e><e>LABel</e></d><d><e>CALibrate:OUTPut</e><e>OUTPut</e></d><d><e>CALibrate:PROTected</e><e>PROTected</e></d><d><e>CALibrate:STARt</e><e>STARt</e></d><d><e>CALibrate:STATus</e><e>STATus</e></d><d><e>CALibrate:TEMPerature</e><e>TEMPerature</e></d><d><e>CALibrate:TIME</e><e>TIME</e></d><d><e>CHANnel</e><e>CHANnel</e></d><d><e>CHANnel:BWLimit</e><e>BWLimit</e></d><d><e>CHANnel:COUPling</e><e>COUPling</e></d><d><e>CHANnel:DISPlay</e><e>DISPlay</e></d><d><e>CHANnel:IMPedance</e><e>IMPedance</e></d><d><e>CHANnel:INVert</e><e>INVert</e></d><d><e>CHANnel:LABel</e><e>LABel</e></d><d><e>CHANnel:OFFSet</e><e>OFFSet</e></d><d><e>CHANnel:PROBe</e><e>PROBe</e></d><d><e>CHANnel:PROBe:HEAD</e><e>HEAD</e></d><d><e>CHANnel:PROBe:HEAD:TYPE</e><e>TYPE</e></d><d><e>CHANnel:PROBe:ID</e><e>ID</e></d><d><e>CHANnel:PROBe:SKEW</e><e>SKEW</e></d><d><e>CHANnel:PROBe:STYPe</e><e>STYPe</e></d><d><e>CHANnel:PROTection</e><e>PROTection</e></d><d><e>CHANnel:PROTection:CLEar</e><e>CLEar</e></d><d><e>CHANnel:RANGe</e><e>RANGe</e></d><d><e>CHANnel:SCALe</e><e>SCALe</e></d><d><e>CHANnel:UNITs</e><e>UNITs</e></d><d><e>CHANnel:VERNier</e><e>VERNier</e></d><d><e>DEMO</e><e>DEMO</e></d><d><e>DEMO:FUNCtion</e><e>FUNCtion</e></d><d><e>DEMO:FUNCtion:PHASe</e><e>PHASe</e></d><d><e>DEMO:FUNCtion:PHASe:PHASe</e><e>PHASe</e></d><d><e>DEMO:OUTPut</e><e>OUTPut</e></d><d><e>DIGital</e><e>DIGital</e></d><d><e>DIGital:DISPlay</e><e>DISPlay</e></d><d><e>DIGital:LABel</e><e>LABel</e></d><d><e>DIGital:POSition</e><e>POSition</e></d><d><e>DIGital:SIZE</e><e>SIZE</e></d><d><e>DIGital:THReshold</e><e>THReshold</e></d><d><e>DIGitize</e><e>DIGitize</e></d><d><e>DISPlay</e><e>DISPlay</e></d><d><e>DISPlay:ANNotation</e><e>ANNotation</e></d><d><e>DISPlay:ANNotation:BACKground</e><e>BACKground</e></d><d><e>DISPlay:ANNotation:COLor</e><e>COLor</e></d><d><e>DISPlay:ANNotation:TEXT</e><e>TEXT</e></d><d><e>DISPlay:CLEar</e><e>CLEar</e></d><d><e>DISPlay:DATA</e><e>DATA</e></d><d><e>DISPlay:LABList</e><e>LABList</e></d><d><e>DISPlay:LABel</e><e>LABel</e></d><d><e>DISPlay:PERSistence</e><e>PERSistence</e></d><d><e>DISPlay:VECTors</e><e>VECTors</e></d><d><e>DVM</e><e>DVM</e></d><d><e>DVM:ARANge</e><e>ARANge</e></d><d><e>DVM:ENABle</e><e>ENABle</e></d><d><e>DVM:FREQuency</e><e>FREQuency</e></d><d><e>DVM:CURRent</e><e>CURRent</e></d><d><e>DVM:MODE</e><e>MODE</e></d><d><e>DVM:SOURce</e><e>SOURce</e></d><d><e>EXTernal</e><e>EXTernal</e></d><d><e>EXTernal:BWLimit</e><e>BWLimit</e></d><d><e>EXTernal:PROBe</e><e>PROBe</e></d><d><e>EXTernal:RANGe</e><e>RANGe</e></d><d><e>EXTernal:UNITs</e><e>UNITs</e></d><d><e>FUNCtion</e><e>FUNCtion</e></d><d><e>FUNCtion:DISPlay</e><e>DISPlay</e></d><d><e>FUNCtion:FFT</e><e>FFT</e></d><d><e>FUNCtion:FFT:CENTer</e><e>CENTer</e></d><d><e>FUNCtion:FFT:SPAN</e><e>SPAN</e></d><d><e>FUNCtion:FFT:VTYPe</e><e>VTYPe</e></d><d><e>FUNCtion:FFT:WINDow</e><e>WINDow</e></d><d><e>FUNCtion:GOFT</e><e>GOFT</e></d><d><e>FUNCtion:GOFT:OPERation</e><e>OPERation</e></d><d><e>FUNCtion:GOFT:SOURce1</e><e>SOURce1</e></d><d><e>FUNCtion:GOFT:SOURce2</e><e>SOURce2</e></d><d><e>FUNCtion:SOURce1</e><e>SOURce1</e></d><d><e>FUNCtion:OFFSet</e><e>OFFSet</e></d><d><e>FUNCtion:OPERation</e><e>OPERation</e></d><d><e>FUNCtion:RANGe</e><e>RANGe</e></d><d><e>FUNCtion:SCALe</e><e>SCALe</e></d><d><e>FUNCtion:SOURce2</e><e>SOURce2</e></d><d><e>FUNCtion:REFerence</e><e>REFerence</e></d><d><e>HARDcopy</e><e>HARDcopy</e></d><d><e>HARDcopy:APRinter</e><e>APRinter</e></d><d><e>HARDcopy:AREA</e><e>AREA</e></d><d><e>HARDcopy:FACTors</e><e>FACTors</e></d><d><e>HARDcopy:FFEed</e><e>FFEed</e></d><d><e>HARDcopy:INKSaver</e><e>INKSaver</e></d><d><e>HARDcopy:LAYout</e><e>LAYout</e></d><d><e>HARDcopy:NETWork</e><e>NETWork</e></d><d><e>HARDcopy:NETWork:ADDRess</e><e>ADDRess</e></d><d><e>HARDcopy:NETWork:APPLy</e><e>APPLy</e></d><d><e>HARDcopy:NETWork:DOMain</e><e>DOMain</e></d><d><e>HARDcopy:NETWork:PASSword</e><e>PASSword</e></d><d><e>HARDcopy:NETWork:SLOT</e><e>SLOT</e></d><d><e>HARDcopy:NETWork:USERname</e><e>USERname</e></d><d><e>HARDcopy:PALette</e><e>PALette</e></d><d><e>HARDcopy:PRINter</e><e>PRINter</e></d><d><e>HARDcopy:PRINter:LIST</e><e>LIST</e></d><d><e>HARDcopy:STARt</e><e>STARt</e></d><d><e>LISTer</e><e>LISTer</e></d><d><e>LISTer:DATA</e><e>DATA</e></d><d><e>LISTer:DISPlay</e><e>DISPlay</e></d><d><e>LISTer:REFerence</e><e>REFerence</e></d><d><e>MARKer</e><e>MARKer</e></d><d><e>MARKer:MODE</e><e>MODE</e></d><d><e>MARKer:X1Position</e><e>X1Position</e></d><d><e>MARKer:X1Y1source</e><e>X1Y1source</e></d><d><e>MARKer:X2Y2source</e><e>X2Y2source</e></d><d><e>MARKer:XDELta</e><e>XDELta</e></d><d><e>MARKer:XUNits</e><e>XUNits</e></d><d><e>MARKer:XUNits:USE</e><e>USE</e></d><d><e>MARKer:Y1Position</e><e>Y1Position</e></d><d><e>MARKer:YUNits</e><e>YUNits</e></d><d><e>MARKer:YUNits:USE</e><e>USE</e></d><d><e>MARKer:X2Position</e><e>X2Position</e></d><d><e>MARKer:Y2Position</e><e>Y2Position</e></d><d><e>MARKer:YDELta</e><e>YDELta</e></d><d><e>MEASure</e><e>MEASure</e></d><d><e>MEASure:ALL</e><e>ALL</e></d><d><e>MEASure:CLEar</e><e>CLEar</e></d><d><e>MEASure:DEFine</e><e>DEFine</e></d><d><e>MEASure:DELay</e><e>DELay</e></d><d><e>MEASure:SHOW</e><e>SHOW</e></d><d><e>MEASure:SOURce</e><e>SOURce</e></d><d><e>MEASure:TEDGe</e><e>TEDGe</e></d><d><e>MEASure:TVALue</e><e>TVALue</e></d><d><e>MEASure:VAVerage</e><e>VAVerage</e></d><d><e>MEASure:VPP</e><e>VPP</e></d><d><e>MEASure:VRMS</e><e>VRMS</e></d><d><e>MEASure:VTIMe</e><e>VTIMe</e></d><d><e>MEASure:WINDow</e><e>WINDow</e></d><d><e>MEASure:PHASe</e><e>PHASe</e></d><d><e>MEASure:DUTYcycle</e><e>DUTYcycle</e></d><d><e>MEASure:FALLtime</e><e>FALLtime</e></d><d><e>MEASure:FREQuency</e><e>FREQuency</e></d><d><e>MEASure:NWIDth</e><e>NWIDth</e></d><d><e>MEASure:OVERshoot</e><e>OVERshoot</e></d><d><e>MEASure:PERiod</e><e>PERiod</e></d><d><e>MEASure:PREShoot</e><e>PREShoot</e></d><d><e>MEASure:PWIDth</e><e>PWIDth</e></d><d><e>MEASure:RISetime</e><e>RISetime</e></d><d><e>MEASure:VAMPlitude</e><e>VAMPlitude</e></d><d><e>MEASure:VBASe</e><e>VBASe</e></d><d><e>MEASure:VMAX</e><e>VMAX</e></d><d><e>MEASure:VMIN</e><e>VMIN</e></d><d><e>MEASure:VTOP</e><e>VTOP</e></d><d><e>MTEenable</e><e>MTEenable</e></d><d><e>MTERegister</e><e>MTERegister</e></d><d><e>MTERegister:EVENt</e><e>EVENt</e></d><d><e>MTESt</e><e>MTESt</e></d><d><e>MTESt:ALL</e><e>ALL</e></d><d><e>MTESt:AMASk</e><e>AMASk</e></d><d><e>MTESt:AMASk:CREate</e><e>CREate</e></d><d><e>MTESt:AMASk:SOURce</e><e>SOURce</e></d><d><e>MTESt:AMASk:UNITs</e><e>UNITs</e></d><d><e>MTESt:AMASk:XDELta</e><e>XDELta</e></d><d><e>MTESt:AMASk:YDELta</e><e>YDELta</e></d><d><e>MTESt:COUNt</e><e>COUNt</e></d><d><e>MTESt:COUNt:FWAVeforms</e><e>FWAVeforms</e></d><d><e>MTESt:COUNt:RESet</e><e>RESet</e></d><d><e>MTESt:COUNt:TIME</e><e>TIME</e></d><d><e>MTESt:COUNt:WAVeforms</e><e>WAVeforms</e></d><d><e>MTESt:DATA</e><e>DATA</e></d><d><e>MTESt:DELete</e><e>DELete</e></d><d><e>MTESt:ENABle</e><e>ENABle</e></d><d><e>MTESt:LOCK</e><e>LOCK</e></d><d><e>MTESt:RMODe</e><e>RMODe</e></d><d><e>MTESt:RMODe:FACTion</e><e>FACTion</e></d><d><e>MTESt:RMODe:FACTion:MEASure</e><e>MEASure</e></d><d><e>MTESt:RMODe:FACTion:PRINt</e><e>PRINt</e></d><d><e>MTESt:RMODe:FACTion:SAVE</e><e>SAVE</e></d><d><e>MTESt:RMODe:FACTion:STOP</e><e>STOP</e></d><d><e>MTESt:RMODe:SIGMa</e><e>SIGMa</e></d><d><e>MTESt:RMODe:TIME</e><e>TIME</e></d><d><e>MTESt:RMODe:WAVeforms</e><e>WAVeforms</e></d><d><e>MTESt:SCALe</e><e>SCALe</e></d><d><e>MTESt:SCALe:BIND</e><e>BIND</e></d><d><e>MTESt:SCALe:X1</e><e>X1</e></d><d><e>MTESt:SCALe:XDELta</e><e>XDELta</e></d><d><e>MTESt:SCALe:Y1</e><e>Y1</e></d><d><e>MTESt:SCALe:Y2</e><e>Y2</e></d><d><e>MTESt:SOURce</e><e>SOURce</e></d><d><e>MTESt:TITLe</e><e>TITLe</e></d><d><e>OPEE</e><e>OPEE</e></d><d><e>OPERegister</e><e>OPERegister</e></d><d><e>OPERegister:CONDition</e><e>CONDition</e></d><d><e>OPERegister:EVENt</e><e>EVENt</e></d><d><e>OVLenable</e><e>OVLenable</e></d><d><e>OVLRegister</e><e>OVLRegister</e></d><d><e>POD</e><e>POD</e></d><d><e>POD:DISPlay</e><e>DISPlay</e></d><d><e>POD:SIZE</e><e>SIZE</e></d><d><e>POD:THReshold</e><e>THReshold</e></d><d><e>PRINt</e><e>PRINt</e></d><d><e>RECall</e><e>RECall</e></d><d><e>RECall:FILename</e><e>FILename</e></d><d><e>RECall:MASK</e><e>MASK</e></d><d><e>RECall:MASK:STARt</e><e>STARt</e></d><d><e>RECall:PWD</e><e>PWD</e></d><d><e>RECall:SETup</e><e>SETup</e></d><d><e>RECall:SETup:STARt</e><e>STARt</e></d><d><e>RECall:WMEMory</e><e>WMEMory</e></d><d><e>RECall:WMEMory:STARt</e><e>STARt</e></d><d><e>RUN</e><e>RUN</e></d><d><e>SAVE</e><e>SAVE</e></d><d><e>SAVE:FILename</e><e>FILename</e></d><d><e>SAVE:IMAGe</e><e>IMAGe</e></d><d><e>SAVE:IMAGe:FACTors</e><e>FACTors</e></d><d><e>SAVE:IMAGe:FORMat</e><e>FORMat</e></d><d><e>SAVE:IMAGe:INKSaver</e><e>INKSaver</e></d><d><e>SAVE:IMAGe:PALette</e><e>PALette</e></d><d><e>SAVE:IMAGe:STARt</e><e>STARt</e></d><d><e>SAVE:LISTer</e><e>LISTer</e></d><d><e>SAVE:LISTer:STARt</e><e>STARt</e></d><d><e>SAVE:MASK</e><e>MASK</e></d><d><e>SAVE:MASK:STARt</e><e>STARt</e></d><d><e>SAVE:MULTi</e><e>MULTi</e></d><d><e>SAVE:MULTi:STARt</e><e>STARt</e></d><d><e>SAVE:PWD</e><e>PWD</e></d><d><e>SAVE:SETup</e><e>SETup</e></d><d><e>SAVE:SETup:STARt</e><e>STARt</e></d><d><e>SAVE:WAVeform</e><e>WAVeform</e></d><d><e>SAVE:WAVeform:FORMat</e><e>FORMat</e></d><d><e>SAVE:WAVeform:LENGth</e><e>LENGth</e></d><d><e>SAVE:WAVeform:LENGth:MAX</e><e>MAX</e></d><d><e>SAVE:WAVeform:SEGMented</e><e>SEGMented</e></d><d><e>SAVE:WAVeform:STARt</e><e>STARt</e></d><d><e>SAVE:WMEMory</e><e>WMEMory</e></d><d><e>SAVE:WMEMory:SOURce</e><e>SOURce</e></d><d><e>SAVE:WMEMory:STARt</e><e>STARt</e></d><d><e>SBUS</e><e>SBUS</e></d><d><e>SBUS:CAN</e><e>CAN</e></d><d><e>SBUS:CAN:COUNt</e><e>COUNt</e></d><d><e>SBUS:CAN:COUNt:ERRor</e><e>ERRor</e></d><d><e>SBUS:CAN:COUNt:OVERload</e><e>OVERload</e></d><d><e>SBUS:CAN:COUNt:RESet</e><e>RESet</e></d><d><e>SBUS:CAN:COUNt:TOTal</e><e>TOTal</e></d><d><e>SBUS:CAN:COUNt:UTILization</e><e>UTILization</e></d><d><e>SBUS:CAN:SAMPlepoint</e><e>SAMPlepoint</e></d><d><e>SBUS:CAN:SIGNal</e><e>SIGNal</e></d><d><e>SBUS:CAN:SIGNal:BAUDrate</e><e>BAUDrate</e></d><d><e>SBUS:CAN:SIGNal:DEFinition</e><e>DEFinition</e></d><d><e>SBUS:CAN:SOURce</e><e>SOURce</e></d><d><e>SBUS:CAN:TRIGger</e><e>TRIGger</e></d><d><e>SBUS:CAN:TRIGger:PATTern</e><e>PATTern</e></d><d><e>SBUS:CAN:TRIGger:PATTern:DATA</e><e>DATA</e></d><d><e>SBUS:CAN:TRIGger:PATTern:DATA:LENGth</e><e>LENGth</e></d><d><e>SBUS:CAN:TRIGger:PATTern:ID</e><e>ID</e></d><d><e>SBUS:CAN:TRIGger:PATTern:ID:MODE</e><e>MODE</e></d><d><e>SBUS:DISPlay</e><e>DISPlay</e></d><d><e>SBUS:IIC</e><e>IIC</e></d><d><e>SBUS:IIC:ASIZe</e><e>ASIZe</e></d><d><e>SBUS:IIC:SOURce</e><e>SOURce</e></d><d><e>SBUS:IIC:SOURce:CLOCk</e><e>CLOCk</e></d><d><e>SBUS:IIC:SOURce:DATA</e><e>DATA</e></d><d><e>SBUS:IIC:TRIGger</e><e>TRIGger</e></d><d><e>SBUS:IIC:TRIGger:PATTern</e><e>PATTern</e></d><d><e>SBUS:IIC:TRIGger:PATTern:ADDRess</e><e>ADDRess</e></d><d><e>SBUS:IIC:TRIGger:PATTern:DATa2</e><e>DATa2</e></d><d><e>SBUS:IIC:TRIGger:PATTern:DATA</e><e>DATA</e></d><d><e>SBUS:IIC:TRIGger:QUALifier</e><e>QUALifier</e></d><d><e>SBUS:IIC:TRIGger:TYPE</e><e>TYPE</e></d><d><e>SBUS:LIN</e><e>LIN</e></d><d><e>SBUS:LIN:PARity</e><e>PARity</e></d><d><e>SBUS:LIN:SAMPlepoint</e><e>SAMPlepoint</e></d><d><e>SBUS:LIN:SIGNal</e><e>SIGNal</e></d><d><e>SBUS:LIN:SIGNal:BAUDrate</e><e>BAUDrate</e></d><d><e>SBUS:LIN:SOURce</e><e>SOURce</e></d><d><e>SBUS:LIN:STANdard</e><e>STANdard</e></d><d><e>SBUS:LIN:SYNCbreak</e><e>SYNCbreak</e></d><d><e>SBUS:LIN:TRIGger</e><e>TRIGger</e></d><d><e>SBUS:LIN:TRIGger:ID</e><e>ID</e></d><d><e>SBUS:LIN:TRIGger:PATTern</e><e>PATTern</e></d><d><e>SBUS:LIN:TRIGger:PATTern:DATA</e><e>DATA</e></d><d><e>SBUS:LIN:TRIGger:PATTern:DATA:LENGth</e><e>LENGth</e></d><d><e>SBUS:LIN:TRIGger:PATTern:FORMat</e><e>FORMat</e></d><d><e>SBUS:MODE</e><e>MODE</e></d><d><e>SBUS:SPI</e><e>SPI</e></d><d><e>SBUS:SPI:BITorder</e><e>BITorder</e></d><d><e>SBUS:SPI:CLOCk</e><e>CLOCk</e></d><d><e>SBUS:SPI:CLOCk:SLOPe</e><e>SLOPe</e></d><d><e>SBUS:SPI:CLOCk:TIMeout</e><e>TIMeout</e></d><d><e>SBUS:SPI:FRAMing</e><e>FRAMing</e></d><d><e>SBUS:SPI:SOURce</e><e>SOURce</e></d><d><e>SBUS:SPI:SOURce:CLOCk</e><e>CLOCk</e></d><d><e>SBUS:SPI:SOURce:MOSI</e><e>MOSI</e></d><d><e>SBUS:SPI:SOURce:FRAMe</e><e>FRAMe</e></d><d><e>SBUS:SPI:SOURce:MISO</e><e>MISO</e></d><d><e>SBUS:SPI:TRIGger</e><e>TRIGger</e></d><d><e>SBUS:SPI:TRIGger:PATTern</e><e>PATTern</e></d><d><e>SBUS:SPI:TRIGger:PATTern:MISO</e><e>MISO</e></d><d><e>SBUS:SPI:TRIGger:PATTern:MISO:DATA</e><e>DATA</e></d><d><e>SBUS:SPI:TRIGger:PATTern:MISO:WIDTh</e><e>WIDTh</e></d><d><e>SBUS:SPI:TRIGger:PATTern:MOSI</e><e>MOSI</e></d><d><e>SBUS:SPI:TRIGger:PATTern:MOSI:DATA</e><e>DATA</e></d><d><e>SBUS:SPI:TRIGger:PATTern:MOSI:WIDTh</e><e>WIDTh</e></d><d><e>SBUS:SPI:TRIGger:TYPE</e><e>TYPE</e></d><d><e>SBUS:SPI:WIDTh</e><e>WIDTh</e></d><d><e>SBUS:UART</e><e>UART</e></d><d><e>SBUS:UART:BASE</e><e>BASE</e></d><d><e>SBUS:UART:BAUDrate</e><e>BAUDrate</e></d><d><e>SBUS:UART:BITorder</e><e>BITorder</e></d><d><e>SBUS:UART:COUNt</e><e>COUNt</e></d><d><e>SBUS:UART:COUNt:ERRor</e><e>ERRor</e></d><d><e>SBUS:UART:COUNt:RESet</e><e>RESet</e></d><d><e>SBUS:UART:COUNt:RXFRames</e><e>RXFRames</e></d><d><e>SBUS:UART:COUNt:TXFRames</e><e>TXFRames</e></d><d><e>SBUS:UART:FRAMing</e><e>FRAMing</e></d><d><e>SBUS:UART:PARity</e><e>PARity</e></d><d><e>SBUS:UART:POLarity</e><e>POLarity</e></d><d><e>SBUS:UART:SOURce</e><e>SOURce</e></d><d><e>SBUS:UART:SOURce:RX</e><e>RX</e></d><d><e>SBUS:UART:SOURce:TX</e><e>TX</e></d><d><e>SBUS:UART:TRIGger</e><e>TRIGger</e></d><d><e>SBUS:UART:TRIGger:BASE</e><e>BASE</e></d><d><e>SBUS:UART:TRIGger:BURSt</e><e>BURSt</e></d><d><e>SBUS:UART:TRIGger:DATA</e><e>DATA</e></d><d><e>SBUS:UART:TRIGger:IDLE</e><e>IDLE</e></d><d><e>SBUS:UART:TRIGger:QUALifier</e><e>QUALifier</e></d><d><e>SBUS:UART:TRIGger:TYPE</e><e>TYPE</e></d><d><e>SBUS:UART:WIDTh</e><e>WIDTh</e></d><d><e>SEARch</e><e>SEARch</e></d><d><e>SEARch:COUNt</e><e>COUNt</e></d><d><e>SEARch:MODE</e><e>MODE</e></d><d><e>SEARch:SERial</e><e>SERial</e></d><d><e>SEARch:SERial:CAN</e><e>CAN</e></d><d><e>SEARch:SERial:CAN:MODE</e><e>MODE</e></d><d><e>SEARch:SERial:CAN:PATTern</e><e>PATTern</e></d><d><e>SEARch:SERial:CAN:PATTern:DATA</e><e>DATA</e></d><d><e>SEARch:SERial:CAN:PATTern:DATA:LENGth</e><e>LENGth</e></d><d><e>SEARch:SERial:CAN:PATTern:ID</e><e>ID</e></d><d><e>SEARch:SERial:CAN:PATTern:ID:MODE</e><e>MODE</e></d><d><e>SEARch:SERial:IIC</e><e>IIC</e></d><d><e>SEARch:SERial:IIC:MODE</e><e>MODE</e></d><d><e>SEARch:SERial:IIC:PATTern</e><e>PATTern</e></d><d><e>SEARch:SERial:IIC:PATTern:ADDRess</e><e>ADDRess</e></d><d><e>SEARch:SERial:IIC:PATTern:DATa2</e><e>DATa2</e></d><d><e>SEARch:SERial:IIC:PATTern:DATA</e><e>DATA</e></d><d><e>SEARch:SERial:IIC:QUALifier</e><e>QUALifier</e></d><d><e>SEARch:SERial:LIN</e><e>LIN</e></d><d><e>SEARch:SERial:LIN:ID</e><e>ID</e></d><d><e>SEARch:SERial:LIN:MODE</e><e>MODE</e></d><d><e>SEARch:SERial:LIN:PATTern</e><e>PATTern</e></d><d><e>SEARch:SERial:LIN:PATTern:DATA</e><e>DATA</e></d><d><e>SEARch:SERial:LIN:PATTern:DATA:LENGth</e><e>LENGth</e></d><d><e>SEARch:SERial:LIN:PATTern:FORMat</e><e>FORMat</e></d><d><e>SEARch:SERial:SPI</e><e>SPI</e></d><d><e>SEARch:SERial:SPI:MODE</e><e>MODE</e></d><d><e>SEARch:SERial:SPI:PATTern</e><e>PATTern</e></d><d><e>SEARch:SERial:SPI:PATTern:DATA</e><e>DATA</e></d><d><e>SEARch:SERial:SPI:PATTern:WIDTh</e><e>WIDTh</e></d><d><e>SEARch:SERial:UART</e><e>UART</e></d><d><e>SEARch:SERial:UART:DATA</e><e>DATA</e></d><d><e>SEARch:SERial:UART:MODE</e><e>MODE</e></d><d><e>SEARch:SERial:UART:QUALifier</e><e>QUALifier</e></d><d><e>SEARch:STATe</e><e>STATe</e></d><d><e>SERial</e><e>SERial</e></d><d><e>STATus</e><e>STATus</e></d><d><e>SYSTem</e><e>SYSTem</e></d><d><e>SYSTem:DATE</e><e>DATE</e></d><d><e>SYSTem:DSP</e><e>DSP</e></d><d><e>SYSTem:ERRor</e><e>ERRor</e></d><d><e>SYSTem:LOCK</e><e>LOCK</e></d><d><e>SYSTem:MENU</e><e>MENU</e></d><d><e>SYSTem:PRESet</e><e>PRESet</e></d><d><e>SYSTem:PROTection</e><e>PROTection</e></d><d><e>SYSTem:PROTection:LOCK</e><e>LOCK</e></d><d><e>SYSTem:SETup</e><e>SETup</e></d><d><e>SYSTem:TIME</e><e>TIME</e></d><d><e>TER</e><e>TER</e></d><d><e>TIMebase</e><e>TIMebase</e></d><d><e>TIMebase:MODE</e><e>MODE</e></d><d><e>TIMebase:REFerence</e><e>REFerence</e></d><d><e>TIMebase:VERNier</e><e>VERNier</e></d><d><e>TIMebase:WINDow</e><e>WINDow</e></d><d><e>TIMebase:WINDow:POSition</e><e>POSition</e></d><d><e>TIMebase:WINDow:RANGe</e><e>RANGe</e></d><d><e>TIMebase:WINDow:SCALe</e><e>SCALe</e></d><d><e>TIMebase:POSition</e><e>POSition</e></d><d><e>TIMebase:RANGe</e><e>RANGe</e></d><d><e>TIMebase:SCALe</e><e>SCALe</e></d><d><e>TRIGger</e><e>TRIGger</e></d><d><e>TRIGger:EDGE</e><e>EDGE</e></d><d><e>TRIGger:EDGE:COUPling</e><e>COUPling</e></d><d><e>TRIGger:EDGE:LEVel</e><e>LEVel</e></d><d><e>TRIGger:EDGE:REJect</e><e>REJect</e></d><d><e>TRIGger:EDGE:SLOPe</e><e>SLOPe</e></d><d><e>TRIGger:EDGE:SOURce</e><e>SOURce</e></d><d><e>TRIGger:FORCe</e><e>FORCe</e></d><d><e>TRIGger:GLITch</e><e>GLITch</e></d><d><e>TRIGger:GLITch:GREaterthan</e><e>GREaterthan</e></d><d><e>TRIGger:GLITch:LESSthan</e><e>LESSthan</e></d><d><e>TRIGger:GLITch:LEVel</e><e>LEVel</e></d><d><e>TRIGger:GLITch:POLarity</e><e>POLarity</e></d><d><e>TRIGger:GLITch:QUALifier</e><e>QUALifier</e></d><d><e>TRIGger:GLITch:RANGe</e><e>RANGe</e></d><d><e>TRIGger:GLITch:SOURce</e><e>SOURce</e></d><d><e>TRIGger:HFReject</e><e>HFReject</e></d><d><e>TRIGger:HOLDoff</e><e>HOLDoff</e></d><d><e>TRIGger:LEVel</e><e>LEVel</e></d><d><e>TRIGger:LEVel:ASETup</e><e>ASETup</e></d><d><e>TRIGger:LEVel:HIGH</e><e>HIGH</e></d><d><e>TRIGger:LEVel:LOW</e><e>LOW</e></d><d><e>TRIGger:MODE</e><e>MODE</e></d><d><e>TRIGger:NREJect</e><e>NREJect</e></d><d><e>TRIGger:PATTern</e><e>PATTern</e></d><d><e>TRIGger:PATTern:FORMat</e><e>FORMat</e></d><d><e>TRIGger:PATTern:QUALifier</e><e>QUALifier</e></d><d><e>TRIGger:SWEep</e><e>SWEep</e></d><d><e>TRIGger:TV</e><e>TV</e></d><d><e>TRIGger:TV:LINE</e><e>LINE</e></d><d><e>TRIGger:TV:MODE</e><e>MODE</e></d><d><e>TRIGger:TV:POLarity</e><e>POLarity</e></d><d><e>TRIGger:TV:SOURce</e><e>SOURce</e></d><d><e>TRIGger:TV:STANdard</e><e>STANdard</e></d><d><e>VIEW</e><e>VIEW</e></d><d><e>WAVeform</e><e>WAVeform</e></d><d><e>WAVeform:BYTeorder</e><e>BYTeorder</e></d><d><e>WAVeform:COUNt</e><e>COUNt</e></d><d><e>WAVeform:DATA</e><e>DATA</e></d><d><e>WAVeform:FORMat</e><e>FORMat</e></d><d><e>WAVeform:POINts</e><e>POINts</e></d><d><e>WAVeform:POINts:MODE</e><e>MODE</e></d><d><e>WAVeform:PREamble</e><e>PREamble</e></d><d><e>WAVeform:SEGMented</e><e>SEGMented</e></d><d><e>WAVeform:SEGMented:COUNt</e><e>COUNt</e></d><d><e>WAVeform:SEGMented:TTAG</e><e>TTAG</e></d><d><e>WAVeform:SOURce</e><e>SOURce</e></d><d><e>WAVeform:SOURce:SUBSource</e><e>SUBSource</e></d><d><e>WAVeform:TYPE</e><e>TYPE</e></d><d><e>WAVeform:UNSigned</e><e>UNSigned</e></d><d><e>WAVeform:VIEW</e><e>VIEW</e></d><d><e>WAVeform:XINCrement</e><e>XINCrement</e></d><d><e>WAVeform:XORigin</e><e>XORigin</e></d><d><e>WAVeform:XREFerence</e><e>XREFerence</e></d><d><e>WAVeform:YINCrement</e><e>YINCrement</e></d><d><e>WAVeform:YORigin</e><e>YORigin</e></d><d><e>WAVeform:YREFerence</e><e>YREFerence</e></d><d><e>WGEN</e><e>WGEN</e></d><d><e>WGEN:FREQuency</e><e>FREQuency</e></d><d><e>WGEN:FUNCtion</e><e>FUNCtion</e></d><d><e>WGEN:FUNCtion:PULSe</e><e>PULSe</e></d><d><e>WGEN:FUNCtion:PULSe:WIDTh</e><e>WIDTh</e></d><d><e>WGEN:FUNCtion:RAMP</e><e>RAMP</e></d><d><e>WGEN:FUNCtion:RAMP:SYMMetry</e><e>SYMMetry</e></d><d><e>WGEN:FUNCtion:SQUare</e><e>SQUare</e></d><d><e>WGEN:FUNCtion:SQUare:DCYCle</e><e>DCYCle</e></d><d><e>WGEN:MODulation</e><e>MODulation</e></d><d><e>WGEN:MODulation:AM</e><e>AM</e></d><d><e>WGEN:MODulation:AM:DEPTh</e><e>DEPTh</e></d><d><e>WGEN:MODulation:AM:FREQuency</e><e>FREQuency</e></d><d><e>WGEN:MODulation:FM</e><e>FM</e></d><d><e>WGEN:MODulation:FM:DEViation</e><e>DEViation</e></d><d><e>WGEN:MODulation:FM:FREQuency</e><e>FREQuency</e></d><d><e>WGEN:MODulation:FSKey</e><e>FSKey</e></d><d><e>WGEN:MODulation:FSKey:FREQuency</e><e>FREQuency</e></d><d><e>WGEN:MODulation:FSKey:RATE</e><e>RATE</e></d><d><e>WGEN:MODulation:FUNCtion</e><e>FUNCtion</e></d><d><e>WGEN:MODulation:FUNCtion:RAMP</e><e>RAMP</e></d><d><e>WGEN:MODulation:FUNCtion:RAMP:SYMMetry</e><e>SYMMetry</e></d><d><e>WGEN:MODulation:NOISe</e><e>NOISe</e></d><d><e>WGEN:MODulation:STATe</e><e>STATe</e></d><d><e>WGEN:MODulation:TYPE</e><e>TYPE</e></d><d><e>WGEN:OUTPut</e><e>OUTPut</e></d><d><e>WGEN:OUTPut:LOAD</e><e>LOAD</e></d><d><e>WGEN:PERiod</e><e>PERiod</e></d><d><e>WGEN:RST</e><e>RST</e></d><d><e>WGEN:VOLTage</e><e>VOLTage</e></d><d><e>WGEN:VOLTage:HIGH</e><e>HIGH</e></d><d><e>WGEN:VOLTage:LOW</e><e>LOW</e></d><d><e>WGEN:VOLTage:OFFSet</e><e>OFFSet</e></d><d><e>WMEMory</e><e>WMEMory</e></d><d><e>WMEMory:CLEar</e><e>CLEar</e></d><d><e>WMEMory:DISPlay</e><e>DISPlay</e></d><d><e>WMEMory:LABel</e><e>LABel</e></d><d><e>WMEMory:SAVE</e><e>SAVE</e></d><d><e>WMEMory:SKEW</e><e>SKEW</e></d><d><e>WMEMory:YOFFset</e><e>YOFFset</e></d><d><e>WMEMory:YRANge</e><e>YRANge</e></d><d><e>WMEMory:YSCale</e><e>YSCale</e></d><d><e>SINGle</e><e>SINGle</e></d><d><e>STOP</e><e>STOP</e></d><d><e>*CLS</e><e>*CLS</e></d><d><e>*ESE</e><e>*ESE</e></d><d><e>*ESR</e><e>*ESR</e></d><d><e>*IDN</e><e>*IDN</e></d><d><e>*OPC</e><e>*OPC</e></d><d><e>*OPT</e><e>*OPT</e></d><d><e>*RCL</e><e>*RCL</e></d><d><e>*RST</e><e>*RST</e></d><d><e>*SAV</e><e>*SAV</e></d><d><e>*SRE</e><e>*SRE</e></d><d><e>*STB</e><e>*STB</e></d><d><e>*TRG</e><e>*TRG</e></d><d><e>*TST</e><e>*TST</e></d><d><e>*WAI</e><e>*WAI</e></d></a><b path=":ACQuire" id=":ACQuire"><f>0</f></b><b path=":ACQuire:COMPlete" id=":ACQuire:COMPlete"><f>1</f></b><b path=":ACQuire:COUNt" id=":ACQuire:COUNt"><f>2</f></b><b path=":ACQuire:MODE" id=":ACQuire:MODE"><f>3</f></b><b path=":ACQuire:POINts" id=":ACQuire:POINts"><f>4</f></b><b path=":ACQuire:SEGMented:ANALyze" id=":ACQuire:SEGMented:ANALyze"><f>5</f></b><b path=":ACQuire:SEGMented:COUNt" id=":ACQuire:SEGMented:COUNt"><f>6</f></b><b path=":ACQuire:SEGMented:INDex" id=":ACQuire:SEGMented:INDex"><f>7</f></b><b path=":ACQuire:SRATe" id=":ACQuire:SRATe"><f>8</f></b><b path=":ACQuire:TYPE" id=":ACQuire:TYPE"><f>9</f></b><b path=":ACTivity" id=":ACTivity"><f>10</f></b><b path=":AER" id=":AER"><f>11</f></b><b path=":AUToscale" id=":AUToscale"><f>12</f></b><b path=":AUToscale:AMODE" id=":AUToscale:AMODE"><f>13</f></b><b path=":AUToscale:CHANnels" id=":AUToscale:CHANnels"><f>14</f></b><b path=":AUToscale:FDEBug" id=":AUToscale:FDEBug"><f>15</f></b><b path=":BLANk" id=":BLANk"><f>16</f></b><b path=":BUS" id=":BUS"><f>17</f></b><b path=":BUS:BIT" id=":BUS:BIT"><f>18</f></b><b path=":BUS:BITS" id=":BUS:BITS"><f>19</f></b><b path=":BUS:CLEar" id=":BUS:CLEar"><f>20</f></b><b path=":BUS:DISPlay" id=":BUS:DISPlay"><f>21</f></b><b path=":BUS:LABel" id=":BUS:LABel"><f>22</f></b><b path=":BUS:MASK" id=":BUS:MASK"><f>23</f></b><b path=":CALibrate:DATE" id=":CALibrate:DATE"><f>24</f></b><b path=":CALibrate:LABel" id=":CALibrate:LABel"><f>25</f></b><b path=":CALibrate:OUTPut" id=":CALibrate:OUTPut"><f>26</f></b><b path=":CALibrate:PROTected" id=":CALibrate:PROTected"><f>27</f></b><b path=":CALibrate:STARt" id=":CALibrate:STARt"><f>28</f></b><b path=":CALibrate:STATus" id=":CALibrate:STATus"><f>29</f></b><b path=":CALibrate:TEMPerature" id=":CALibrate:TEMPerature"><f>30</f></b><b path=":CALibrate:TIME" id=":CALibrate:TIME"><f>31</f></b><b path=":CHANnel" id=":CHANnel"><f>32</f></b><b path=":CHANnel:BWLimit" id=":CHANnel:BWLimit"><f>33</f></b><b path=":CHANnel:COUPling" id=":CHANnel:COUPling"><f>34</f></b><b path=":CHANnel:DISPlay" id=":CHANnel:DISPlay"><f>35</f></b><b path=":CHANnel:IMPedance" id=":CHANnel:IMPedance"><f>36</f></b><b path=":CHANnel:INVert" id=":CHANnel:INVert"><f>37</f></b><b path=":CHANnel:LABel" id=":CHANnel:LABel"><f>38</f></b><b path=":CHANnel:OFFSet" id=":CHANnel:OFFSet"><f>39</f></b><b path=":CHANnel:PROBe" id=":CHANnel:PROBe"><f>40</f></b><b path=":CHANnel:PROBe:HEAD:TYPE" id=":CHANnel:PROBe:HEAD:TYPE"><f>41</f></b><b path=":CHANnel:PROBe:ID" id=":CHANnel:PROBe:ID"><f>42</f></b><b path=":CHANnel:PROBe:SKEW" id=":CHANnel:PROBe:SKEW"><f>43</f></b><b path=":CHANnel:PROBe:STYPe" id=":CHANnel:PROBe:STYPe"><f>44</f></b><b path=":CHANnel:PROTection" id=":CHANnel:PROTection"><f>45</f></b><b path=":CHANnel:PROTection:CLEar" id=":CHANnel:PROTection:CLEar"><f>45</f></b><b path=":CHANnel:RANGe" id=":CHANnel:RANGe"><f>46</f></b><b path=":CHANnel:SCALe" id=":CHANnel:SCALe"><f>47</f></b><b path=":CHANnel:UNITs" id=":CHANnel:UNITs"><f>48</f></b><b path=":CHANnel:VERNier" id=":CHANnel:VERNier"><f>49</f></b><b path=":DEMO" id=":DEMO"><f>50</f></b><b path=":DEMO:FUNCtion" id=":DEMO:FUNCtion"><f>51</f></b><b path=":DEMO:FUNCtion:PHASe:PHASe" id=":DEMO:FUNCtion:PHASe:PHASe"><f>52</f></b><b path=":DEMO:OUTPut" id=":DEMO:OUTPut"><f>53</f></b><b path=":DIGital" id=":DIGital"><f>54</f></b><b path=":DIGital:DISPlay" id=":DIGital:DISPlay"><f>55</f></b><b path=":DIGital:LABel" id=":DIGital:LABel"><f>56</f></b><b path=":DIGital:POSition" id=":DIGital:POSition"><f>57</f></b><b path=":DIGital:SIZE" id=":DIGital:SIZE"><f>58</f></b><b path=":DIGital:THReshold" id=":DIGital:THReshold"><f>59</f></b><b path=":DIGitize" id=":DIGitize"><f>60</f></b><b path=":DISPlay" id=":DISPlay"><f>61</f></b><b path=":DISPlay:ANNotation" id=":DISPlay:ANNotation"><f>62</f></b><b path=":DISPlay:ANNotation:BACKground" id=":DISPlay:ANNotation:BACKground"><f>63</f></b><b path=":DISPlay:ANNotation:COLor" id=":DISPlay:ANNotation:COLor"><f>64</f></b><b path=":DISPlay:ANNotation:TEXT" id=":DISPlay:ANNotation:TEXT"><f>65</f></b><b path=":DISPlay:CLEar" id=":DISPlay:CLEar"><f>66</f></b><b path=":DISPlay:DATA" id=":DISPlay:DATA"><f>67</f></b><b path=":DISPlay:LABList" id=":DISPlay:LABList"><f>68</f></b><b path=":DISPlay:LABel" id=":DISPlay:LABel"><f>69</f></b><b path=":DISPlay:PERSistence" id=":DISPlay:PERSistence"><f>70</f></b><b path=":DISPlay:VECTors" id=":DISPlay:VECTors"><f>71</f></b><b path=":DVM:ARANge" id=":DVM:ARANge"><f>72</f></b><b path=":DVM:ENABle" id=":DVM:ENABle"><f>73</f></b><b path=":DVM:FREQuency" id=":DVM:FREQuency"><f>74</f></b><b path=":DVM:CURRent" id=":DVM:CURRent"><f>75</f></b><b path=":DVM:MODE" id=":DVM:MODE"><f>76</f></b><b path=":DVM:SOURce" id=":DVM:SOURce"><f>77</f></b><b path=":EXTernal" id=":EXTernal"><f>78</f></b><b path=":EXTernal:BWLimit" id=":EXTernal:BWLimit"><f>79</f></b><b path=":EXTernal:PROBe" id=":EXTernal:PROBe"><f>80</f></b><b path=":EXTernal:RANGe" id=":EXTernal:RANGe"><f>81</f></b><b path=":EXTernal:UNITs" id=":EXTernal:UNITs"><f>82</f></b><b path=":FUNCtion" id=":FUNCtion"><f>83</f><f>83</f></b><b path=":FUNCtion:DISPlay" id=":FUNCtion:DISPlay"><f>84</f></b><b path=":FUNCtion:FFT:CENTer" id=":FUNCtion:FFT:CENTer"><f>85</f></b><b path=":FUNCtion:FFT:SPAN" id=":FUNCtion:FFT:SPAN"><f>86</f></b><b path=":FUNCtion:FFT:VTYPe" id=":FUNCtion:FFT:VTYPe"><f>87</f></b><b path=":FUNCtion:FFT:WINDow" id=":FUNCtion:FFT:WINDow"><f>88</f></b><b path=":FUNCtion:GOFT:OPERation" id=":FUNCtion:GOFT:OPERation"><f>89</f></b><b path=":FUNCtion:GOFT:SOURce1" id=":FUNCtion:GOFT:SOURce1"><f>90</f></b><b path=":FUNCtion:GOFT:SOURce2" id=":FUNCtion:GOFT:SOURce2"><f>91</f></b><b path=":FUNCtion:SOURce1" id=":FUNCtion:SOURce1"><f>92</f></b><b path=":FUNCtion:OFFSet" id=":FUNCtion:OFFSet"><f>93</f></b><b path=":FUNCtion:OPERation" id=":FUNCtion:OPERation"><f>94</f></b><b path=":FUNCtion:RANGe" id=":FUNCtion:RANGe"><f>95</f></b><b path=":FUNCtion:SCALe" id=":FUNCtion:SCALe"><f>96</f></b><b path=":FUNCtion:SOURce2" id=":FUNCtion:SOURce2"><f>97</f></b><b path=":FUNCtion:REFerence" id=":FUNCtion:REFerence"><f>98</f></b><b path=":HARDcopy" id=":HARDcopy"><f>99</f></b><b path=":HARDcopy:APRinter" id=":HARDcopy:APRinter"><f>100</f></b><b path=":HARDcopy:AREA" id=":HARDcopy:AREA"><f>101</f></b><b path=":HARDcopy:FACTors" id=":HARDcopy:FACTors"><f>102</f></b><b path=":HARDcopy:FFEed" id=":HARDcopy:FFEed"><f>103</f></b><b path=":HARDcopy:INKSaver" id=":HARDcopy:INKSaver"><f>104</f></b><b path=":HARDcopy:LAYout" id=":HARDcopy:LAYout"><f>105</f></b><b path=":HARDcopy:NETWork:ADDRess" id=":HARDcopy:NETWork:ADDRess"><f>106</f></b><b path=":HARDcopy:NETWork:APPLy" id=":HARDcopy:NETWork:APPLy"><f>107</f></b><b path=":HARDcopy:NETWork:DOMain" id=":HARDcopy:NETWork:DOMain"><f>108</f></b><b path=":HARDcopy:NETWork:PASSword" id=":HARDcopy:NETWork:PASSword"><f>109</f></b><b path=":HARDcopy:NETWork:SLOT" id=":HARDcopy:NETWork:SLOT"><f>110</f></b><b path=":HARDcopy:NETWork:USERname" id=":HARDcopy:NETWork:USERname"><f>111</f></b><b path=":HARDcopy:PALette" id=":HARDcopy:PALette"><f>112</f></b><b path=":HARDcopy:PRINter:LIST" id=":HARDcopy:PRINter:LIST"><f>113</f></b><b path=":HARDcopy:STARt" id=":HARDcopy:STARt"><f>114</f></b><b path=":LISTer:DATA" id=":LISTer:DATA"><f>115</f></b><b path=":LISTer:DISPlay" id=":LISTer:DISPlay"><f>116</f></b><b path=":LISTer:REFerence" id=":LISTer:REFerence"><f>117</f></b><b path=":MARKer" id=":MARKer"><f>118</f></b><b path=":MARKer:MODE" id=":MARKer:MODE"><f>119</f></b><b path=":MARKer:X1Position" id=":MARKer:X1Position"><f>120</f></b><b path=":MARKer:X1Y1source" id=":MARKer:X1Y1source"><f>121</f></b><b path=":MARKer:X2Y2source" id=":MARKer:X2Y2source"><f>122</f></b><b path=":MARKer:XDELta" id=":MARKer:XDELta"><f>123</f></b><b path=":MARKer:XUNits" id=":MARKer:XUNits"><f>124</f></b><b path=":MARKer:XUNits:USE" id=":MARKer:XUNits:USE"><f>125</f></b><b path=":MARKer:Y1Position" id=":MARKer:Y1Position"><f>126</f></b><b path=":MARKer:YUNits" id=":MARKer:YUNits"><f>127</f></b><b path=":MARKer:YUNits:USE" id=":MARKer:YUNits:USE"><f>128</f></b><b path=":MARKer:X2Position" id=":MARKer:X2Position"><f>129</f></b><b path=":MARKer:Y2Position" id=":MARKer:Y2Position"><f>130</f></b><b path=":MARKer:YDELta" id=":MARKer:YDELta"><f>131</f></b><b path=":MEASure" id=":MEASure"><f>132</f></b><b path=":MEASure:ALL" id=":MEASure:ALL"><f>133</f></b><b path=":MEASure:CLEar" id=":MEASure:CLEar"><f>134</f></b><b path=":MEASure:DEFine" id=":MEASure:DEFine"><f>135</f></b><b path=":MEASure:DELay" id=":MEASure:DELay"><f>136</f></b><b path=":MEASure:SHOW" id=":MEASure:SHOW"><f>137</f></b><b path=":MEASure:SOURce" id=":MEASure:SOURce"><f>138</f></b><b path=":MEASure:TEDGe" id=":MEASure:TEDGe"><f>139</f></b><b path=":MEASure:TVALue" id=":MEASure:TVALue"><f>140</f></b><b path=":MEASure:VAVerage" id=":MEASure:VAVerage"><f>141</f></b><b path=":MEASure:VPP" id=":MEASure:VPP"><f>142</f></b><b path=":MEASure:VRMS" id=":MEASure:VRMS"><f>143</f></b><b path=":MEASure:VTIMe" id=":MEASure:VTIMe"><f>144</f></b><b path=":MEASure:WINDow" id=":MEASure:WINDow"><f>145</f></b><b path=":MEASure:PHASe" id=":MEASure:PHASe"><f>146</f></b><b path=":MEASure:DUTYcycle" id=":MEASure:DUTYcycle"><f>147</f></b><b path=":MEASure:FALLtime" id=":MEASure:FALLtime"><f>148</f></b><b path=":MEASure:FREQuency" id=":MEASure:FREQuency"><f>149</f></b><b path=":MEASure:NWIDth" id=":MEASure:NWIDth"><f>150</f></b><b path=":MEASure:OVERshoot" id=":MEASure:OVERshoot"><f>151</f></b><b path=":MEASure:PERiod" id=":MEASure:PERiod"><f>152</f></b><b path=":MEASure:PREShoot" id=":MEASure:PREShoot"><f>153</f></b><b path=":MEASure:PWIDth" id=":MEASure:PWIDth"><f>154</f></b><b path=":MEASure:RISetime" id=":MEASure:RISetime"><f>155</f></b><b path=":MEASure:VAMPlitude" id=":MEASure:VAMPlitude"><f>156</f></b><b path=":MEASure:VBASe" id=":MEASure:VBASe"><f>157</f></b><b path=":MEASure:VMAX" id=":MEASure:VMAX"><f>158</f></b><b path=":MEASure:VMIN" id=":MEASure:VMIN"><f>159</f></b><b path=":MEASure:VTOP" id=":MEASure:VTOP"><f>160</f></b><b path=":MTEenable" id=":MTEenable"><f>161</f></b><b path=":MTERegister:EVENt" id=":MTERegister:EVENt"><f>162</f></b><b path=":MTESt" id=":MTESt"><f>163</f></b><b path=":MTESt:ALL" id=":MTESt:ALL"><f>164</f></b><b path=":MTESt:AMASk:CREate" id=":MTESt:AMASk:CREate"><f>165</f></b><b path=":MTESt:AMASk:SOURce" id=":MTESt:AMASk:SOURce"><f>166</f></b><b path=":MTESt:AMASk:UNITs" id=":MTESt:AMASk:UNITs"><f>167</f></b><b path=":MTESt:AMASk:XDELta" id=":MTESt:AMASk:XDELta"><f>168</f></b><b path=":MTESt:AMASk:YDELta" id=":MTESt:AMASk:YDELta"><f>169</f></b><b path=":MTESt:COUNt:FWAVeforms" id=":MTESt:COUNt:FWAVeforms"><f>170</f></b><b path=":MTESt:COUNt:RESet" id=":MTESt:COUNt:RESet"><f>171</f></b><b path=":MTESt:COUNt:TIME" id=":MTESt:COUNt:TIME"><f>172</f></b><b path=":MTESt:COUNt:WAVeforms" id=":MTESt:COUNt:WAVeforms"><f>173</f></b><b path=":MTESt:DATA" id=":MTESt:DATA"><f>174</f></b><b path=":MTESt:DELete" id=":MTESt:DELete"><f>175</f></b><b path=":MTESt:ENABle" id=":MTESt:ENABle"><f>176</f></b><b path=":MTESt:LOCK" id=":MTESt:LOCK"><f>177</f></b><b path=":MTESt:RMODe" id=":MTESt:RMODe"><f>178</f></b><b path=":MTESt:RMODe:FACTion:MEASure" id=":MTESt:RMODe:FACTion:MEASure"><f>179</f></b><b path=":MTESt:RMODe:FACTion:PRINt" id=":MTESt:RMODe:FACTion:PRINt"><f>180</f></b><b path=":MTESt:RMODe:FACTion:SAVE" id=":MTESt:RMODe:FACTion:SAVE"><f>181</f></b><b path=":MTESt:RMODe:FACTion:STOP" id=":MTESt:RMODe:FACTion:STOP"><f>182</f></b><b path=":MTESt:RMODe:SIGMa" id=":MTESt:RMODe:SIGMa"><f>183</f></b><b path=":MTESt:RMODe:TIME" id=":MTESt:RMODe:TIME"><f>184</f></b><b path=":MTESt:RMODe:WAVeforms" id=":MTESt:RMODe:WAVeforms"><f>185</f></b><b path=":MTESt:SCALe:BIND" id=":MTESt:SCALe:BIND"><f>186</f></b><b path=":MTESt:SCALe:X1" id=":MTESt:SCALe:X1"><f>187</f></b><b path=":MTESt:SCALe:XDELta" id=":MTESt:SCALe:XDELta"><f>188</f></b><b path=":MTESt:SCALe:Y1" id=":MTESt:SCALe:Y1"><f>189</f></b><b path=":MTESt:SCALe:Y2" id=":MTESt:SCALe:Y2"><f>190</f></b><b path=":MTESt:SOURce" id=":MTESt:SOURce"><f>191</f></b><b path=":MTESt:TITLe" id=":MTESt:TITLe"><f>192</f></b><b path=":OPEE" id=":OPEE"><f>193</f></b><b path=":OPERegister:CONDition" id=":OPERegister:CONDition"><f>194</f></b><b path=":OPERegister:EVENt" id=":OPERegister:EVENt"><f>195</f></b><b path=":OVLenable" id=":OVLenable"><f>196</f></b><b path=":OVLRegister" id=":OVLRegister"><f>197</f></b><b path=":POD" id=":POD"><f>198</f></b><b path=":POD:DISPlay" id=":POD:DISPlay"><f>199</f></b><b path=":POD:SIZE" id=":POD:SIZE"><f>200</f></b><b path=":POD:THReshold" id=":POD:THReshold"><f>201</f></b><b path=":PRINt" id=":PRINt"><f>202</f></b><b path=":RECall:FILename" id=":RECall:FILename"><f>203</f></b><b path=":RECall:MASK:STARt" id=":RECall:MASK:STARt"><f>204</f></b><b path=":RECall:PWD" id=":RECall:PWD"><f>205</f></b><b path=":RECall:SETup:STARt" id=":RECall:SETup:STARt"><f>206</f></b><b path=":RECall:WMEMory:STARt" id=":RECall:WMEMory:STARt"><f>207</f></b><b path=":RUN" id=":RUN"><f>208</f></b><b path=":SAVE:FILename" id=":SAVE:FILename"><f>209</f></b><b path=":SAVE:IMAGe:FACTors" id=":SAVE:IMAGe:FACTors"><f>210</f></b><b path=":SAVE:IMAGe:FORMat" id=":SAVE:IMAGe:FORMat"><f>211</f></b><b path=":SAVE:IMAGe:INKSaver" id=":SAVE:IMAGe:INKSaver"><f>212</f></b><b path=":SAVE:IMAGe:PALette" id=":SAVE:IMAGe:PALette"><f>213</f></b><b path=":SAVE:IMAGe:STARt" id=":SAVE:IMAGe:STARt"><f>214</f></b><b path=":SAVE:LISTer:STARt" id=":SAVE:LISTer:STARt"><f>215</f></b><b path=":SAVE:MASK:STARt" id=":SAVE:MASK:STARt"><f>216</f></b><b path=":SAVE:MULTi:STARt" id=":SAVE:MULTi:STARt"><f>217</f></b><b path=":SAVE:PWD" id=":SAVE:PWD"><f>218</f></b><b path=":SAVE:SETup:STARt" id=":SAVE:SETup:STARt"><f>219</f></b><b path=":SAVE:WAVeform:FORMat" id=":SAVE:WAVeform:FORMat"><f>220</f></b><b path=":SAVE:WAVeform:LENGth" id=":SAVE:WAVeform:LENGth"><f>221</f></b><b path=":SAVE:WAVeform:LENGth:MAX" id=":SAVE:WAVeform:LENGth:MAX"><f>222</f></b><b path=":SAVE:WAVeform:SEGMented" id=":SAVE:WAVeform:SEGMented"><f>223</f></b><b path=":SAVE:WAVeform:STARt" id=":SAVE:WAVeform:STARt"><f>224</f></b><b path=":SAVE:WMEMory:SOURce" id=":SAVE:WMEMory:SOURce"><f>225</f></b><b path=":SAVE:WMEMory:STARt" id=":SAVE:WMEMory:STARt"><f>226</f></b><b path=":SBUS:CAN:COUNt:ERRor" id=":SBUS:CAN:COUNt:ERRor"><f>227</f></b><b path=":SBUS:CAN:COUNt:OVERload" id=":SBUS:CAN:COUNt:OVERload"><f>228</f></b><b path=":SBUS:CAN:COUNt:RESet" id=":SBUS:CAN:COUNt:RESet"><f>229</f></b><b path=":SBUS:CAN:COUNt:TOTal" id=":SBUS:CAN:COUNt:TOTal"><f>230</f></b><b path=":SBUS:CAN:COUNt:UTILization" id=":SBUS:CAN:COUNt:UTILization"><f>231</f></b><b path=":SBUS:CAN:SAMPlepoint" id=":SBUS:CAN:SAMPlepoint"><f>232</f></b><b path=":SBUS:CAN:SIGNal:BAUDrate" id=":SBUS:CAN:SIGNal:BAUDrate"><f>233</f></b><b path=":SBUS:CAN:SIGNal:DEFinition" id=":SBUS:CAN:SIGNal:DEFinition"><f>234</f></b><b path=":SBUS:CAN:SOURce" id=":SBUS:CAN:SOURce"><f>235</f></b><b path=":SBUS:CAN:TRIGger" id=":SBUS:CAN:TRIGger"><f>236</f></b><b path=":SBUS:CAN:TRIGger:PATTern:DATA" id=":SBUS:CAN:TRIGger:PATTern:DATA"><f>237</f></b><b path=":SBUS:CAN:TRIGger:PATTern:DATA:LENGth" id=":SBUS:CAN:TRIGger:PATTern:DATA:LENGth"><f>238</f></b><b path=":SBUS:CAN:TRIGger:PATTern:ID" id=":SBUS:CAN:TRIGger:PATTern:ID"><f>239</f></b><b path=":SBUS:CAN:TRIGger:PATTern:ID:MODE" id=":SBUS:CAN:TRIGger:PATTern:ID:MODE"><f>240</f></b><b path=":SBUS:DISPlay" id=":SBUS:DISPlay"><f>241</f></b><b path=":SBUS:IIC:ASIZe" id=":SBUS:IIC:ASIZe"><f>242</f></b><b path=":SBUS:IIC:SOURce:CLOCk" id=":SBUS:IIC:SOURce:CLOCk"><f>243</f></b><b path=":SBUS:IIC:SOURce:DATA" id=":SBUS:IIC:SOURce:DATA"><f>244</f></b><b path=":SBUS:IIC:TRIGger:PATTern:ADDRess" id=":SBUS:IIC:TRIGger:PATTern:ADDRess"><f>245</f></b><b path=":SBUS:IIC:TRIGger:PATTern:DATa2" id=":SBUS:IIC:TRIGger:PATTern:DATa2"><f>246</f></b><b path=":SBUS:IIC:TRIGger:PATTern:DATA" id=":SBUS:IIC:TRIGger:PATTern:DATA"><f>247</f></b><b path=":SBUS:IIC:TRIGger:QUALifier" id=":SBUS:IIC:TRIGger:QUALifier"><f>248</f></b><b path=":SBUS:IIC:TRIGger:TYPE" id=":SBUS:IIC:TRIGger:TYPE"><f>249</f></b><b path=":SBUS:LIN:PARity" id=":SBUS:LIN:PARity"><f>250</f></b><b path=":SBUS:LIN:SAMPlepoint" id=":SBUS:LIN:SAMPlepoint"><f>251</f></b><b path=":SBUS:LIN:SIGNal:BAUDrate" id=":SBUS:LIN:SIGNal:BAUDrate"><f>252</f></b><b path=":SBUS:LIN:SOURce" id=":SBUS:LIN:SOURce"><f>253</f></b><b path=":SBUS:LIN:STANdard" id=":SBUS:LIN:STANdard"><f>254</f></b><b path=":SBUS:LIN:SYNCbreak" id=":SBUS:LIN:SYNCbreak"><f>255</f></b><b path=":SBUS:LIN:TRIGger" id=":SBUS:LIN:TRIGger"><f>256</f></b><b path=":SBUS:LIN:TRIGger:ID" id=":SBUS:LIN:TRIGger:ID"><f>257</f></b><b path=":SBUS:LIN:TRIGger:PATTern:DATA" id=":SBUS:LIN:TRIGger:PATTern:DATA"><f>258</f></b><b path=":SBUS:LIN:TRIGger:PATTern:DATA:LENGth" id=":SBUS:LIN:TRIGger:PATTern:DATA:LENGth"><f>259</f></b><b path=":SBUS:LIN:TRIGger:PATTern:FORMat" id=":SBUS:LIN:TRIGger:PATTern:FORMat"><f>260</f></b><b path=":SBUS:MODE" id=":SBUS:MODE"><f>261</f></b><b path=":SBUS:SPI:BITorder" id=":SBUS:SPI:BITorder"><f>262</f></b><b path=":SBUS:SPI:CLOCk:SLOPe" id=":SBUS:SPI:CLOCk:SLOPe"><f>263</f></b><b path=":SBUS:SPI:CLOCk:TIMeout" id=":SBUS:SPI:CLOCk:TIMeout"><f>264</f></b><b path=":SBUS:SPI:FRAMing" id=":SBUS:SPI:FRAMing"><f>265</f></b><b path=":SBUS:SPI:SOURce:CLOCk" id=":SBUS:SPI:SOURce:CLOCk"><f>266</f></b><b path=":SBUS:SPI:SOURce:MOSI" id=":SBUS:SPI:SOURce:MOSI"><f>267</f></b><b path=":SBUS:SPI:SOURce:FRAMe" id=":SBUS:SPI:SOURce:FRAMe"><f>268</f></b><b path=":SBUS:SPI:SOURce:MISO" id=":SBUS:SPI:SOURce:MISO"><f>269</f></b><b path=":SBUS:SPI:TRIGger:PATTern:MISO:DATA" id=":SBUS:SPI:TRIGger:PATTern:MISO:DATA"><f>270</f></b><b path=":SBUS:SPI:TRIGger:PATTern:MISO:WIDTh" id=":SBUS:SPI:TRIGger:PATTern:MISO:WIDTh"><f>271</f></b><b path=":SBUS:SPI:TRIGger:PATTern:MOSI:DATA" id=":SBUS:SPI:TRIGger:PATTern:MOSI:DATA"><f>272</f></b><b path=":SBUS:SPI:TRIGger:PATTern:MOSI:WIDTh" id=":SBUS:SPI:TRIGger:PATTern:MOSI:WIDTh"><f>273</f></b><b path=":SBUS:SPI:TRIGger:TYPE" id=":SBUS:SPI:TRIGger:TYPE"><f>274</f></b><b path=":SBUS:SPI:WIDTh" id=":SBUS:SPI:WIDTh"><f>275</f></b><b path=":SBUS:UART:BASE" id=":SBUS:UART:BASE"><f>276</f></b><b path=":SBUS:UART:BAUDrate" id=":SBUS:UART:BAUDrate"><f>277</f></b><b path=":SBUS:UART:BITorder" id=":SBUS:UART:BITorder"><f>278</f></b><b path=":SBUS:UART:COUNt:ERRor" id=":SBUS:UART:COUNt:ERRor"><f>279</f></b><b path=":SBUS:UART:COUNt:RESet" id=":SBUS:UART:COUNt:RESet"><f>280</f></b><b path=":SBUS:UART:COUNt:RXFRames" id=":SBUS:UART:COUNt:RXFRames"><f>281</f></b><b path=":SBUS:UART:COUNt:TXFRames" id=":SBUS:UART:COUNt:TXFRames"><f>282</f></b><b path=":SBUS:UART:FRAMing" id=":SBUS:UART:FRAMing"><f>283</f></b><b path=":SBUS:UART:PARity" id=":SBUS:UART:PARity"><f>284</f></b><b path=":SBUS:UART:POLarity" id=":SBUS:UART:POLarity"><f>285</f></b><b path=":SBUS:UART:SOURce:RX" id=":SBUS:UART:SOURce:RX"><f>286</f></b><b path=":SBUS:UART:SOURce:TX" id=":SBUS:UART:SOURce:TX"><f>287</f></b><b path=":SBUS:UART:TRIGger:BASE" id=":SBUS:UART:TRIGger:BASE"><f>288</f></b><b path=":SBUS:UART:TRIGger:BURSt" id=":SBUS:UART:TRIGger:BURSt"><f>289</f></b><b path=":SBUS:UART:TRIGger:DATA" id=":SBUS:UART:TRIGger:DATA"><f>290</f></b><b path=":SBUS:UART:TRIGger:IDLE" id=":SBUS:UART:TRIGger:IDLE"><f>291</f></b><b path=":SBUS:UART:TRIGger:QUALifier" id=":SBUS:UART:TRIGger:QUALifier"><f>292</f></b><b path=":SBUS:UART:TRIGger:TYPE" id=":SBUS:UART:TRIGger:TYPE"><f>293</f></b><b path=":SBUS:UART:WIDTh" id=":SBUS:UART:WIDTh"><f>294</f></b><b path=":SEARch:COUNt" id=":SEARch:COUNt"><f>295</f></b><b path=":SEARch:MODE" id=":SEARch:MODE"><f>296</f></b><b path=":SEARch:SERial:CAN:MODE" id=":SEARch:SERial:CAN:MODE"><f>297</f></b><b path=":SEARch:SERial:CAN:PATTern:DATA" id=":SEARch:SERial:CAN:PATTern:DATA"><f>298</f></b><b path=":SEARch:SERial:CAN:PATTern:DATA:LENGth" id=":SEARch:SERial:CAN:PATTern:DATA:LENGth"><f>299</f></b><b path=":SEARch:SERial:CAN:PATTern:ID" id=":SEARch:SERial:CAN:PATTern:ID"><f>300</f></b><b path=":SEARch:SERial:CAN:PATTern:ID:MODE" id=":SEARch:SERial:CAN:PATTern:ID:MODE"><f>301</f></b><b path=":SEARch:SERial:IIC:MODE" id=":SEARch:SERial:IIC:MODE"><f>302</f></b><b path=":SEARch:SERial:IIC:PATTern:ADDRess" id=":SEARch:SERial:IIC:PATTern:ADDRess"><f>303</f></b><b path=":SEARch:SERial:IIC:PATTern:DATa2" id=":SEARch:SERial:IIC:PATTern:DATa2"><f>304</f></b><b path=":SEARch:SERial:IIC:PATTern:DATA" id=":SEARch:SERial:IIC:PATTern:DATA"><f>305</f></b><b path=":SEARch:SERial:IIC:QUALifier" id=":SEARch:SERial:IIC:QUALifier"><f>306</f></b><b path=":SEARch:SERial:LIN:ID" id=":SEARch:SERial:LIN:ID"><f>307</f></b><b path=":SEARch:SERial:LIN:MODE" id=":SEARch:SERial:LIN:MODE"><f>308</f></b><b path=":SEARch:SERial:LIN:PATTern:DATA" id=":SEARch:SERial:LIN:PATTern:DATA"><f>309</f></b><b path=":SEARch:SERial:LIN:PATTern:DATA:LENGth" id=":SEARch:SERial:LIN:PATTern:DATA:LENGth"><f>310</f></b><b path=":SEARch:SERial:LIN:PATTern:FORMat" id=":SEARch:SERial:LIN:PATTern:FORMat"><f>311</f></b><b path=":SEARch:SERial:SPI:MODE" id=":SEARch:SERial:SPI:MODE"><f>312</f></b><b path=":SEARch:SERial:SPI:PATTern:DATA" id=":SEARch:SERial:SPI:PATTern:DATA"><f>313</f></b><b path=":SEARch:SERial:SPI:PATTern:WIDTh" id=":SEARch:SERial:SPI:PATTern:WIDTh"><f>314</f></b><b path=":SEARch:SERial:UART:DATA" id=":SEARch:SERial:UART:DATA"><f>315</f></b><b path=":SEARch:SERial:UART:MODE" id=":SEARch:SERial:UART:MODE"><f>316</f></b><b path=":SEARch:SERial:UART:QUALifier" id=":SEARch:SERial:UART:QUALifier"><f>317</f></b><b path=":SEARch:STATe" id=":SEARch:STATe"><f>318</f></b><b path=":SERial" id=":SERial"><f>319</f></b><b path=":STATus" id=":STATus"><f>320</f></b><b path=":SYSTem:DATE" id=":SYSTem:DATE"><f>321</f></b><b path=":SYSTem:DSP" id=":SYSTem:DSP"><f>322</f></b><b path=":SYSTem:ERRor" id=":SYSTem:ERRor"><f>323</f></b><b path=":SYSTem:LOCK" id=":SYSTem:LOCK"><f>324</f></b><b path=":SYSTem:MENU" id=":SYSTem:MENU"><f>325</f></b><b path=":SYSTem:PRESet" id=":SYSTem:PRESet"><f>326</f></b><b path=":SYSTem:PROTection:LOCK" id=":SYSTem:PROTection:LOCK"><f>327</f></b><b path=":SYSTem:SETup" id=":SYSTem:SETup"><f>328</f></b><b path=":SYSTem:TIME" id=":SYSTem:TIME"><f>329</f></b><b path=":TER" id=":TER"><f>330</f></b><b path=":TIMebase" id=":TIMebase"><f>331</f></b><b path=":TIMebase:MODE" id=":TIMebase:MODE"><f>332</f></b><b path=":TIMebase:REFerence" id=":TIMebase:REFerence"><f>333</f></b><b path=":TIMebase:VERNier" id=":TIMebase:VERNier"><f>334</f></b><b path=":TIMebase:WINDow:POSition" id=":TIMebase:WINDow:POSition"><f>335</f></b><b path=":TIMebase:WINDow:RANGe" id=":TIMebase:WINDow:RANGe"><f>336</f></b><b path=":TIMebase:WINDow:SCALe" id=":TIMebase:WINDow:SCALe"><f>337</f></b><b path=":TIMebase:POSition" id=":TIMebase:POSition"><f>338</f></b><b path=":TIMebase:RANGe" id=":TIMebase:RANGe"><f>339</f></b><b path=":TIMebase:SCALe" id=":TIMebase:SCALe"><f>340</f></b><b path=":TRIGger" id=":TRIGger"><f>341</f></b><b path=":TRIGger:EDGE:COUPling" id=":TRIGger:EDGE:COUPling"><f>342</f></b><b path=":TRIGger:EDGE:LEVel" id=":TRIGger:EDGE:LEVel"><f>343</f></b><b path=":TRIGger:EDGE:REJect" id=":TRIGger:EDGE:REJect"><f>344</f></b><b path=":TRIGger:EDGE:SLOPe" id=":TRIGger:EDGE:SLOPe"><f>345</f></b><b path=":TRIGger:EDGE:SOURce" id=":TRIGger:EDGE:SOURce"><f>346</f></b><b path=":TRIGger:FORCe" id=":TRIGger:FORCe"><f>347</f></b><b path=":TRIGger:GLITch:GREaterthan" id=":TRIGger:GLITch:GREaterthan"><f>348</f></b><b path=":TRIGger:GLITch:LESSthan" id=":TRIGger:GLITch:LESSthan"><f>349</f></b><b path=":TRIGger:GLITch:LEVel" id=":TRIGger:GLITch:LEVel"><f>350</f></b><b path=":TRIGger:GLITch:POLarity" id=":TRIGger:GLITch:POLarity"><f>351</f></b><b path=":TRIGger:GLITch:QUALifier" id=":TRIGger:GLITch:QUALifier"><f>352</f></b><b path=":TRIGger:GLITch:RANGe" id=":TRIGger:GLITch:RANGe"><f>353</f></b><b path=":TRIGger:GLITch:SOURce" id=":TRIGger:GLITch:SOURce"><f>354</f></b><b path=":TRIGger:HFReject" id=":TRIGger:HFReject"><f>355</f></b><b path=":TRIGger:HOLDoff" id=":TRIGger:HOLDoff"><f>356</f></b><b path=":TRIGger:LEVel:ASETup" id=":TRIGger:LEVel:ASETup"><f>357</f></b><b path=":TRIGger:LEVel:HIGH" id=":TRIGger:LEVel:HIGH"><f>358</f></b><b path=":TRIGger:LEVel:LOW" id=":TRIGger:LEVel:LOW"><f>359</f></b><b path=":TRIGger:MODE" id=":TRIGger:MODE"><f>360</f></b><b path=":TRIGger:NREJect" id=":TRIGger:NREJect"><f>361</f></b><b path=":TRIGger:PATTern" id=":TRIGger:PATTern"><f>362</f></b><b path=":TRIGger:PATTern:FORMat" id=":TRIGger:PATTern:FORMat"><f>363</f></b><b path=":TRIGger:PATTern:QUALifier" id=":TRIGger:PATTern:QUALifier"><f>364</f></b><b path=":TRIGger:SWEep" id=":TRIGger:SWEep"><f>365</f></b><b path=":TRIGger:TV:LINE" id=":TRIGger:TV:LINE"><f>366</f></b><b path=":TRIGger:TV:MODE" id=":TRIGger:TV:MODE"><f>367</f></b><b path=":TRIGger:TV:POLarity" id=":TRIGger:TV:POLarity"><f>368</f></b><b path=":TRIGger:TV:SOURce" id=":TRIGger:TV:SOURce"><f>369</f></b><b path=":TRIGger:TV:STANdard" id=":TRIGger:TV:STANdard"><f>370</f></b><b path=":VIEW" id=":VIEW"><f>371</f></b><b path=":WAVeform" id=":WAVeform"><f>372</f><f>372</f></b><b path=":WAVeform:BYTeorder" id=":WAVeform:BYTeorder"><f>373</f></b><b path=":WAVeform:COUNt" id=":WAVeform:COUNt"><f>374</f></b><b path=":WAVeform:DATA" id=":WAVeform:DATA"><f>375</f></b><b path=":WAVeform:FORMat" id=":WAVeform:FORMat"><f>376</f></b><b path=":WAVeform:POINts" id=":WAVeform:POINts"><f>377</f></b><b path=":WAVeform:POINts:MODE" id=":WAVeform:POINts:MODE"><f>378</f></b><b path=":WAVeform:PREamble" id=":WAVeform:PREamble"><f>379</f></b><b path=":WAVeform:SEGMented:COUNt" id=":WAVeform:SEGMented:COUNt"><f>380</f></b><b path=":WAVeform:SEGMented:TTAG" id=":WAVeform:SEGMented:TTAG"><f>381</f></b><b path=":WAVeform:SOURce" id=":WAVeform:SOURce"><f>382</f></b><b path=":WAVeform:SOURce:SUBSource" id=":WAVeform:SOURce:SUBSource"><f>383</f></b><b path=":WAVeform:TYPE" id=":WAVeform:TYPE"><f>384</f></b><b path=":WAVeform:UNSigned" id=":WAVeform:UNSigned"><f>385</f></b><b path=":WAVeform:VIEW" id=":WAVeform:VIEW"><f>386</f></b><b path=":WAVeform:XINCrement" id=":WAVeform:XINCrement"><f>387</f></b><b path=":WAVeform:XORigin" id=":WAVeform:XORigin"><f>388</f></b><b path=":WAVeform:XREFerence" id=":WAVeform:XREFerence"><f>389</f></b><b path=":WAVeform:YINCrement" id=":WAVeform:YINCrement"><f>390</f></b><b path=":WAVeform:YORigin" id=":WAVeform:YORigin"><f>391</f></b><b path=":WAVeform:YREFerence" id=":WAVeform:YREFerence"><f>392</f></b><b path=":WGEN" id=":WGEN"><f>393</f></b><b path=":WGEN:FREQuency" id=":WGEN:FREQuency"><f>394</f></b><b path=":WGEN:FUNCtion" id=":WGEN:FUNCtion"><f>395</f></b><b path=":WGEN:FUNCtion:PULSe:WIDTh" id=":WGEN:FUNCtion:PULSe:WIDTh"><f>396</f></b><b path=":WGEN:FUNCtion:RAMP:SYMMetry" id=":WGEN:FUNCtion:RAMP:SYMMetry"><f>397</f></b><b path=":WGEN:FUNCtion:SQUare:DCYCle" id=":WGEN:FUNCtion:SQUare:DCYCle"><f>398</f></b><b path=":WGEN:MODulation:AM:DEPTh" id=":WGEN:MODulation:AM:DEPTh"><f>399</f></b><b path=":WGEN:MODulation:AM:FREQuency" id=":WGEN:MODulation:AM:FREQuency"><f>400</f></b><b path=":WGEN:MODulation:FM:DEViation" id=":WGEN:MODulation:FM:DEViation"><f>401</f></b><b path=":WGEN:MODulation:FM:FREQuency" id=":WGEN:MODulation:FM:FREQuency"><f>402</f></b><b path=":WGEN:MODulation:FSKey:FREQuency" id=":WGEN:MODulation:FSKey:FREQuency"><f>403</f></b><b path=":WGEN:MODulation:FSKey:RATE" id=":WGEN:MODulation:FSKey:RATE"><f>404</f></b><b path=":WGEN:MODulation:FUNCtion" id=":WGEN:MODulation:FUNCtion"><f>405</f></b><b path=":WGEN:MODulation:FUNCtion:RAMP:SYMMetry" id=":WGEN:MODulation:FUNCtion:RAMP:SYMMetry"><f>406</f></b><b path=":WGEN:MODulation:NOISe" id=":WGEN:MODulation:NOISe"><f>407</f></b><b path=":WGEN:MODulation:STATe" id=":WGEN:MODulation:STATe"><f>408</f></b><b path=":WGEN:MODulation:TYPE" id=":WGEN:MODulation:TYPE"><f>409</f></b><b path=":WGEN:OUTPut" id=":WGEN:OUTPut"><f>410</f></b><b path=":WGEN:OUTPut:LOAD" id=":WGEN:OUTPut:LOAD"><f>411</f></b><b path=":WGEN:PERiod" id=":WGEN:PERiod"><f>412</f></b><b path=":WGEN:RST" id=":WGEN:RST"><f>413</f></b><b path=":WGEN:VOLTage" id=":WGEN:VOLTage"><f>414</f></b><b path=":WGEN:VOLTage:HIGH" id=":WGEN:VOLTage:HIGH"><f>415</f></b><b path=":WGEN:VOLTage:LOW" id=":WGEN:VOLTage:LOW"><f>416</f></b><b path=":WGEN:VOLTage:OFFSet" id=":WGEN:VOLTage:OFFSet"><f>417</f></b><b path=":WMEMory:CLEar" id=":WMEMory:CLEar"><f>418</f></b><b path=":WMEMory:DISPlay" id=":WMEMory:DISPlay"><f>419</f></b><b path=":WMEMory:LABel" id=":WMEMory:LABel"><f>420</f></b><b path=":WMEMory:SAVE" id=":WMEMory:SAVE"><f>421</f></b><b path=":WMEMory:SKEW" id=":WMEMory:SKEW"><f>422</f></b><b path=":WMEMory:YOFFset" id=":WMEMory:YOFFset"><f>423</f></b><b path=":WMEMory:YRANge" id=":WMEMory:YRANge"><f>424</f></b><b path=":WMEMory:YSCale" id=":WMEMory:YSCale"><f>425</f></b><b path=":SINGle" id=":SINGle"><f>426</f></b><b path=":STOP" id=":STOP"><f>427</f></b><b path="*CLS" id="*CLS"><f>428</f></b><b path="*ESE" id="*ESE"><f>429</f></b><b path="*ESR" id="*ESR"><f>430</f></b><b path="*IDN" id="*IDN"><f>431</f></b><b path="*OPC" id="*OPC"><f>432</f></b><b path="*OPT" id="*OPT"><f>433</f></b><b path="*RCL" id="*RCL"><f>434</f></b><b path="*RST" id="*RST"><f>435</f></b><b path="*SAV" id="*SAV"><f>436</f></b><b path="*SRE" id="*SRE"><f>437</f></b><b path="*STB" id="*STB"><f>438</f></b><b path="*TRG" id="*TRG"><f>439</f></b><b path="*TST" id="*TST"><f>440</f></b><b path="*WAI" id="*WAI"><f>441</f></b><b path="DefaultTimeout" id="DefaultTimeout" /><b path="ErrorQueryBehavior" id="ErrorQueryBehavior" /><b path="OpcBehavior" id="OpcBehavior" /><b path="OmitDefaultKeywords" id="OmitDefaultKeywords" /><b path="UseShortFormKeywords" id="UseShortFormKeywords" /><b path="IgnoredErrors" id="IgnoredErrors" /><b path="AddToIgnoredErrors" id="AddToIgnoredErrors" /><b path="RemoveFromIgnoredErrors" id="RemoveFromIgnoredErrors" /><b path="Command" id="Command" /><b path="Query" id="Query" /><b path="CommandBatching" id="CommandBatching" /><b path="SendBatchedCommands" id="SendBatchedCommands" /><c>Introduction to :ACQuire CommandsThe ACQuire subsystem controls the way in which waveforms are acquired. These acquisition types are available: normal, averaging, peak detect, and high resolution.Normal. The :ACQuire:TYPE NORMal command sets the oscilloscope in the normal acquisition mode. For the majority of user models and signals, NORMal mode yields the best oscilloscope picture of the waveform.Averaging. The :ACQuire:TYPE AVERage command sets the oscilloscope in the averaging mode. You can set the count by sending the :ACQuire:COUNt command followed by the number of averages. In this mode, the value for averages is an integer from 2 to 65536. The COUNt value determines the number of averages that must be acquired.High-Resolution. The :ACQuire:TYPE HRESolution command sets the oscilloscope in the high-resolution mode (also known as smoothing). This mode is used to reduce noise at slower sweep speeds where the digitizer samples faster than needed to fill memory for the displayed time range. Instead of decimating samples, they are averaged together to provide the value for one display point. The slower the sweep speed, the greater the number of samples that are averaged together for each display point.Peak Detect. The :ACQuire:TYPE PEAK command sets the oscilloscope in the peak detect mode. In this mode, :ACQuire:COUNt has no meaning.Reporting the Setup. Use :ACQuire? to query setup information for the ACQuire subsystem.Return Format. The following is a sample response from the :ACQuire? query. In this case, the query was issued following a *RST command.:ACQ:MODE RTIM;TYPE NORM;COMP 100;COUNT 8;SEGM:COUN 2</c><c> :ACQuire:COMPlete:ACQuire Commands Name:ACQuire:COMPlete � Command Syntax:ACQuire:COMPlete &lt;complete&gt;&lt;complete&gt; ::= 100; an integer in NR1 formatThe :ACQuire:COMPlete command affects the operation of the :DIGitize command. It specifies the minimum completion criteria for an acquisition. The parameter determines the percentage of the time buckets that must be "full" before an acquisition is considered complete. If :ACQuire:TYPE is NORMal, it needs only one sample per time bucket for that time bucket to be considered full.The only legal value for the :COMPlete command is 100. All time buckets must contain data for the acquisition to be considered complete.Query Syntax:ACQuire:COMPlete?The :ACQuire:COMPlete? query returns the completion criteria (100) for the currently selected mode.Return Format&lt;completion_criteria&gt;&lt;NL&gt;&lt;completion_criteria&gt; ::= 100; an integer in NR1 formatSee AlsoIntroduction to :ACQuire Commands:ACQuire:TYPE:DIGitize:WAVeform:POINtsExample Code ' AQUIRE_COMPLETE - Specifies the minimum completion criteria for ' an acquisition. The parameter determines the percentage of time ' buckets needed to be "full" before an acquisition is considered ' to be complete. myScope.WriteString ":ACQuire:COMPlete 100"See complete example programs at: Programming Examples</c><c> :ACQuire:COUNt:ACQuire Commands Name:ACQuire:COUNt � Command Syntax:ACQuire:COUNt &lt;count&gt;&lt;count&gt; ::= integer in NR1 formatIn averaging mode, the :ACQuire:COUNt command specifies the number of values to be averaged for each time bucket before the acquisition is considered to be complete for that time bucket. When :ACQuire:TYPE is set to AVERage, the count can be set to any value from 2 to 65536.The :ACQuire:COUNt 1 command has been deprecated. The AVERage acquisition type with a count of 1 is functionally equivalent to the HRESolution acquisition type; however, you should select the high-resolution acquisition mode with the :ACQuire:TYPE HRESolution command instead.Query Syntax:ACQuire:COUNT?The :ACQuire:COUNT? query returns the currently selected count value for averaging mode.Return Format&lt;count_argument&gt;&lt;NL&gt;&lt;count_argument&gt; ::= an integer from 2 to 65536 in NR1 formatSee AlsoIntroduction to :ACQuire Commands:ACQuire:TYPE:DIGitize:WAVeform:COUNt</c><c> :ACQuire:MODE:ACQuire Commands Name:ACQuire:MODE � Command Syntax:ACQuire:MODE &lt;mode&gt;&lt;mode&gt; ::= {RTIMe | SEGMented}The :ACQuire:MODE command sets the acquisition mode of the oscilloscope.The :ACQuire:MODE RTIMe command sets the oscilloscope in real time mode.The obsolete command ACQuire:TYPE:REALtime is functionally equivalent to sending ACQuire:MODE RTIMe; TYPE NORMal.The :ACQuire:MODE SEGMented command sets the oscilloscope in segmented memory mode.Query Syntax:ACQuire:MODE?The :ACQuire:MODE? query returns the acquisition mode of the oscilloscope.Return Format&lt;mode_argument&gt;&lt;NL&gt;&lt;mode_argument&gt; ::= {RTIM | SEGM}See AlsoIntroduction to :ACQuire Commands:ACQuire:TYPE</c><c> :ACQuire:POINts:ACQuire Commands Name:ACQuire:POINts � Query Syntax:ACQuire:POINts?The :ACQuire:POINts? query returns the number of data points that the hardware will acquire from the input signal. The number of points acquired is not directly controllable. To set the number of points to be transferred from the oscilloscope, use the command :WAVeform:POINts. The :WAVeform:POINts? query will return the number of points available to be transferred from the oscilloscope.Return Format&lt;points_argument&gt;&lt;NL&gt;&lt;points_argument&gt; ::= an integer in NR1 formatSee AlsoIntroduction to :ACQuire Commands:DIGitize:WAVeform:POINts</c><c> :ACQuire:SEGMented:ANALyze:ACQuire Commands Name:ACQuire:SEGMented:ANALyze � Command Syntax:ACQuire:SEGMented:ANALyzeThis command is available when the segmented memory option (Option SGM) is enabled.This command calculates measurement statistics and/or infinite persistence over all segments that have been acquired. It corresponds to the front panel Analyze Segments softkey which appears in both the Measurement Statistics and Segmented Memory Menus.In order to use this command, the oscilloscope must be stopped and in segmented acquisition mode, with either quick measurements or infinite persistence on.See Also:ACQuire:MODE:ACQuire:SEGMented:COUNtIntroduction to :ACQuire Commands</c><c> :ACQuire:SEGMented:COUNt:ACQuire Commands Name:ACQuire:SEGMented:COUNt � Command Syntax:ACQuire:SEGMented:COUNt &lt;count&gt;&lt;count&gt; ::= an integer from 2 to 25 (w/100K memory) in NR1 formatThis command is available when the segmented memory option (Option SGM) is enabled.The :ACQuire:SEGMented:COUNt command sets the number of memory segments to acquire.The segmented memory acquisition mode is enabled with the :ACQuire:MODE command, and data is acquired using the :DIGitize, :SINGle, or :RUN commands. The number of memory segments in the current acquisition is returned by the :WAVeform:SEGMented:COUNt? query.The maximum number of segments may be limited by the memory depth of your oscilloscope. For example, an oscilloscope with 100K memory allows a maximum of 25 segments.Query Syntax:ACQuire:SEGMented:COUNt?The :ACQuire:SEGMented:COUNt? query returns the current count setting.Return Format&lt;count&gt;&lt;NL&gt;&lt;count&gt; ::= an integer from 2 to 25 (w/100K memory) in NR1 formatSee Also:ACQuire:MODE:DIGitize:SINGle:RUN:WAVeform:SEGMented:COUNt:ACQuire:SEGMented:ANALyzeIntroduction to :ACQuire CommandsExample CodeExample Code</c><c> :ACQuire:SEGMented:INDex:ACQuire Commands Name:ACQuire:SEGMented:INDex � Command Syntax:ACQuire:SEGMented:INDex &lt;index&gt;&lt;index&gt; ::= an integer from 1 to 25 (w/100K memory) in NR1 formatThis command is available when the segmented memory option (Option SGM) is enabled.The :ACQuire:SEGMented:INDex command sets the index into the memory segments that have been acquired.The segmented memory acquisition mode is enabled with the :ACQuire:MODE command. The number of segments to acquire is set using the :ACQuire:SEGMented:COUNt command, and data is acquired using the :DIGitize, :SINGle, or :RUN commands. The number of memory segments that have been acquired is returned by the :WAVeform:SEGMented:COUNt? query. The time tag of the currently indexed memory segment is returned by the :WAVeform:SEGMented:TTAG? query.The maximum number of segments may be limited by the memory depth of your oscilloscope. For example, an oscilloscope with 100K memory allows a maximum of 25 segments.Query Syntax:ACQuire:SEGMented:INDex?The :ACQuire:SEGMented:INDex? query returns the current segmented memory index setting.Return Format&lt;index&gt;&lt;NL&gt;&lt;index&gt; ::= an integer from 1 to 25 (w/100K memory) in NR1 formatSee Also:ACQuire:MODE:ACQuire:SEGMented:COUNt:DIGitize:SINGle:RUN:WAVeform:SEGMented:COUNt:WAVeform:SEGMented:TTAG:ACQuire:SEGMented:ANALyzeIntroduction to :ACQuire CommandsExample Code' Segmented memory commands example. ' ------------------------------------------------------------------- Option Explicit Public myMgr As VisaComLib.ResourceManager Public myScope As VisaComLib.FormattedIO488 Public varQueryResult As Variant Public strQueryResult As String Private Declare Sub Sleep Lib "kernel32" (ByVal dwMilliseconds As Long) Sub Main() On Error GoTo VisaComError ' Create the VISA COM I/O resource. Set myMgr = New VisaComLib.ResourceManager Set myScope = New VisaComLib.FormattedIO488 Set myScope.IO = _ myMgr.Open("USB0::0x0957::0x17A6::US50210029::0::INSTR") myScope.IO.Clear ' Clear the interface. ' Turn on segmented memory acquisition mode. myScope.WriteString ":ACQuire:MODE SEGMented" myScope.WriteString ":ACQuire:MODE?" strQueryResult = myScope.ReadString Debug.Print "Acquisition mode: " + strQueryResult ' Set the number of segments to 25. myScope.WriteString ":ACQuire:SEGMented:COUNt 25" myScope.WriteString ":ACQuire:SEGMented:COUNt?" strQueryResult = myScope.ReadString Debug.Print "Acquisition memory segments: " + strQueryResult ' If data will be acquired within the IO timeout: 'myScope.IO.Timeout = 10000 'myScope.WriteString ":DIGitize" 'Debug.Print ":DIGitize blocks until all segments acquired." 'myScope.WriteString ":WAVeform:SEGMented:COUNt?" 'varQueryResult = myScope.ReadNumber ' Or, to poll until the desired number of segments acquired: myScope.WriteString ":SINGle" Debug.Print ":SINGle does not block until all segments acquired." Do Sleep 100 ' Small wait to prevent excessive queries. myScope.WriteString ":WAVeform:SEGMented:COUNt?" varQueryResult = myScope.ReadNumber Loop Until varQueryResult = 25 Debug.Print "Number of segments in acquired data: " _ + FormatNumber(varQueryResult) Dim lngSegments As Long lngSegments = varQueryResult ' For each segment: Dim dblTimeTag As Double Dim lngI As Long For lngI = lngSegments To 1 Step -1 ' Set the segmented memory index. myScope.WriteString ":ACQuire:SEGMented:INDex " + CStr(lngI) myScope.WriteString ":ACQuire:SEGMented:INDex?" strQueryResult = myScope.ReadString Debug.Print "Acquisition memory segment index: " + strQueryResult ' Display the segment time tag. myScope.WriteString ":WAVeform:SEGMented:TTAG?" dblTimeTag = myScope.ReadNumber Debug.Print "Segment " + CStr(lngI) + " time tag: " _ + FormatNumber(dblTimeTag, 12) Next lngI Exit Sub VisaComError: MsgBox "VISA COM Error:" + vbCrLf + Err.Description End Sub</c><c> :ACQuire:SRATe:ACQuire Commands Name:ACQuire:SRATe � Query Syntax:ACQuire:SRATe?The :ACQuire:SRATe? query returns the current oscilloscope acquisition sample rate. The sample rate is not directly controllable.Return Format&lt;sample_rate&gt;&lt;NL&gt;&lt;sample_rate&gt; ::= sample rate in NR3 formatSee AlsoIntroduction to :ACQuire Commands:ACQuire:POINts</c><c> :ACQuire:TYPE:ACQuire Commands Name:ACQuire:TYPE � Command Syntax:ACQuire:TYPE &lt;type&gt;&lt;type&gt; ::= {NORMal | AVERage | HRESolution | PEAK}The :ACQuire:TYPE command selects the type of data acquisition that is to take place. The acquisition types are:NORMal � sets the oscilloscope in the normal mode.AVERage � sets the oscilloscope in the averaging mode. You can set the count by sending the :ACQuire:COUNt command followed by the number of averages. In this mode, the value for averages is an integer from 1 to 65536. The COUNt value determines the number of averages that must be acquired.The AVERage type is not available when in segmented memory mode (:ACQuire:MODE SEGMented).HRESolution � sets the oscilloscope in the high-resolution mode (also known as smoothing). This mode is used to reduce noise at slower sweep speeds where the digitizer samples faster than needed to fill memory for the displayed time range.For example, if the digitizer samples at 200 MSa/s, but the effective sample rate is 1 MSa/s (because of a slower sweep speed), only 1 out of every 200 samples needs to be stored. Instead of storing one sample (and throwing others away), the 200 samples are averaged together to provide the value for one display point. The slower the sweep speed, the greater the number of samples that are averaged together for each display point.PEAK � sets the oscilloscope in the peak detect mode. In this mode, :ACQuire:COUNt has no meaning.The AVERage and HRESolution types can give you extra bits of vertical resolution. See the User's Guide for an explanation. When getting waveform data acquired using the AVERage and HRESolution types, be sure to use the WORD or ASCii waveform data formats to get the extra bits of vertical resolution.The obsolete command ACQuire:TYPE:REALtime is functionally equivalent to sending ACQuire:MODE RTIME; TYPE NORMal.Query Syntax:ACQuire:TYPE?The :ACQuire:TYPE? query returns the current acquisition type.Return Format&lt;acq_type&gt;&lt;NL&gt;&lt;acq_type&gt; ::= {NORM | AVER | HRES | PEAK}See AlsoIntroduction to :ACQuire Commands:ACQuire:COUNt:ACQuire:MODE:DIGitize:WAVeform:FORMat:WAVeform:TYPE:WAVeform:PREambleExample Code ' AQUIRE_TYPE - Sets the acquisition mode, which can be NORMAL, ' PEAK, or AVERAGE. myScope.WriteString ":ACQuire:TYPE NORMal"See complete example programs at: Programming Examples</c><c> :ACTivityRoot (:) Commands Name:ACTivity � Command Syntax:ACTivityThe :ACTivity command clears the cumulative edge variables for the next activity query.Query Syntax:ACTivity?The :ACTivity? query returns whether there has been activity (edges) on the digital channels since the last query, and returns the current logic levels.Because the :ACTivity? query returns edge activity since the last :ACTivity? query, you must send this query twice before the edge activity result is valid.Return Format&lt;edges&gt;,&lt;levels&gt;&lt;NL&gt;&lt;edges&gt; ::= presence of edges (16-bit integer in NR1 format).&lt;levels&gt; ::= logical highs or lows (16-bit integer in NR1 format).bit 0 ::= DIGital 0bit 15 ::= DIGital 15A bit = 0 (zero) in the &lt;edges&gt; result indicates that no edges were detected on that channel (across the specified threshold voltage) since the last query.A bit = 1 (one) in the &lt;edges&gt; result indicates that edges have been detected on that channel (across the specified threshold voltage) since the last query.(The threshold voltage must be set appropriately for the logic levels of the signals being probed.)See AlsoIntroduction to Root (:) Commands:POD&lt;n&gt;:THReshold:DIGital&lt;d&gt;:THReshold</c><c> :AER (Arm Event Register)Root (:) Commands Name:AER (Arm Event Register) � Query Syntax:AER?The AER query reads the Arm Event Register. After the Arm Event Register is read, it is cleared. A "1" indicates the trigger system is in the armed state, ready to accept a trigger.The Armed Event Register is summarized in the Wait Trig bit of the Operation Status Event Register. A Service Request can be generated when the Wait Trig bit transitions and the appropriate enable bits have been set in the Operation Status Enable Register (OPEE) and the Service Request Enable Register (SRE).Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {0 | 1}; an integer in NR1 format.See AlsoIntroduction to Root (:) Commands:OPEE (Operation Status Enable Register):OPERegister:CONDition (Operation Status Condition Register):OPERegister[:EVENt] (Operation Status Event Register)*STB (Read Status Byte)*SRE (Service Request Enable)</c><c> :AUToscaleRoot (:) Commands Name:AUToscale � Command Syntax:AUToscale:AUToscale [&lt;source&gt;[,..,&lt;source&gt;]]&lt;source&gt; ::= CHANnel&lt;n&gt; for the DSO models&lt;source&gt; ::= {DIGital&lt;d&gt; | POD1 | POD2 | CHANnel&lt;n&gt;} for the MSO models&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 formatThe &lt;source&gt; parameter may be repeated up to 5 times.The :AUToscale command evaluates all input signals and sets the correct conditions to display the signals. This is the same as pressing the [Auto Scale] key on the front panel.If one or more sources are specified, those specified sources will be enabled and all others blanked. The autoscale channels mode (see :AUToscale:CHANnels) is set to DISPlayed channels. Then, the autoscale is performed.When the :AUToscale command is sent, the following conditions are affected and actions are taken:Thresholds.Channels with activity around the trigger point are turned on, others are turned off.Channels are reordered on screen; analog channel 1 first, followed by the remaining analog channels, then the digital channels 0-15.Delay is set to 0 seconds.Time/Div.The :AUToscale command does not affect the following conditions:Label names.Trigger conditioning.The :AUToscale command turns off the following items:Cursors.Measurements.Math waveforms.Reference waveforms.Zoomed (delayed) time base mode.For further information on :AUToscale, see the User's Guide.See AlsoIntroduction to Root (:) Commands:AUToscale:CHANnels:AUToscale:AMODEExample Code ' AUTOSCALE - This command evaluates all the input signals and sets ' the correct conditions to display all of the active signals. myScope.WriteString ":AUToscale" ' Same as pressing Auto Scale key.See complete example programs at: Programming Examples</c><c> :AUToscale:AMODERoot (:) Commands Name:AUToscale:AMODE � Command Syntax:AUToscale:AMODE &lt;value&gt;&lt;value&gt; ::= {NORMal | CURRent}The :AUTOscale:AMODE command specifies the acquisition mode that is set by subsequent :AUToscales.When NORMal is selected, an :AUToscale command sets the NORMal acquisition type and the RTIMe (real-time) acquisition mode.When CURRent is selected, the current acquisition type and mode are kept on subsequent :AUToscales.Use the :ACQuire:TYPE and :ACQuire:MODE commands to set the acquisition type and mode.Query Syntax:AUToscale:AMODE?The :AUToscale:AMODE? query returns the autoscale acquire mode setting.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {NORM | CURR}See AlsoIntroduction to Root (:) Commands:AUToscale:AUToscale:CHANnels:ACQuire:TYPE:ACQuire:MODE</c><c> :AUToscale:CHANnelsRoot (:) Commands Name:AUToscale:CHANnels � Command Syntax:AUToscale:CHANnels &lt;value&gt;&lt;value&gt; ::= {ALL | DISPlayed}The :AUTOscale:CHANnels command specifies which channels will be displayed on subsequent :AUToscales.When ALL is selected, all channels that meet the requirements of :AUToscale will be displayed.When DISPlayed is selected, only the channels that are turned on are autoscaled.Use the :VIEW or :BLANk root commands to turn channels on or off.Query Syntax:AUToscale:CHANnels?The :AUToscale:CHANnels? query returns the autoscale channels setting.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {ALL | DISP}See AlsoIntroduction to Root (:) Commands:AUToscale:AUToscale:AMODE:VIEW:BLANk</c><c> :AUToscale:FDEBugRoot (:) Commands Name:AUToscale:FDEBug � Command Syntax:AUToscale:FDEBug &lt;on_off&gt;&lt;on_off&gt; ::= {{1 | ON} | {0 | OFF}}The :AUToscale:FDEBug command turns fast debug auto scaling on or off.The Fast Debug option changes the behavior of :AUToscale to let you make quick visual comparisons to determine whether the signal being probed is a DC voltage, ground, or an active AC signal.Channel coupling is maintained for easy viewing of oscillating signals.Query Syntax:AUToscale:FDEBug?The :AUToscale:FDEBug? query returns the current autoscale fast debug setting.Return Format&lt;on_off&gt;&lt;NL&gt;&lt;on_off&gt; ::= {1 | 0}See AlsoIntroduction to Root (:) Commands:AUToscale</c><c> :BLANkRoot (:) Commands Name:BLANk � Command Syntax:BLANk [&lt;source&gt;]&lt;source&gt; ::= {CHANnel&lt;n&gt; | FUNCtion | MATH | SBUS1 | WMEMory&lt;r&gt;} for the DSO models&lt;source&gt; ::= {CHANnel&lt;n&gt; | DIGital&lt;d&gt; | POD{1 | 2} | BUS{1 | 2} | FUNCtion | MATH | SBUS1 | WMEMory&lt;r&gt;} for the MSO models&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 format&lt;r&gt; ::= 1 to (# ref waveforms) in NR1 formatThe :BLANk command turns off (stops displaying) the specified channel, digital pod, math function, or serial decode bus. The :BLANk command with no parameter turns off all sources.To turn on (start displaying) a channel, etc., use the :VIEW command. The DISPlay commands, :CHANnel&lt;n&gt;:DISPlay, :FUNCtion:DISPlay, :POD&lt;n&gt;:DISPlay, :DIGital&lt;n&gt;:DISPlay, :SBUS&lt;n&gt;:DISPlay, or :WMEMory&lt;r&gt;:DISPlay, are the preferred method to turn on/off a channel, etc.MATH is an alias for FUNCtion.See AlsoIntroduction to Root (:) Commands:DISPlay:CLEar:CHANnel&lt;n&gt;:DISPlay:DIGital&lt;d&gt;:DISPlay:FUNCtion:DISPlay:POD&lt;n&gt;:DISPlay:WMEMory&lt;r&gt;:DISPlay:STATus:VIEWExample CodeExample Code</c><c>Introduction to :BUS&lt;n&gt; Commands&lt;n&gt; ::= {1 | 2}The BUS subsystem commands control the viewing, labeling, and digital channel makeup of two possible buses.These commands are only valid for the MSO models.Reporting the Setup. Use :BUS&lt;n&gt;? to query setup information for the BUS subsystem.Return Format. The following is a sample response from the :BUS1? query. In this case, the query was issued following a *RST command.:BUS1:DISP 0;LAB "BUS1";MASK +255</c><c> :BUS&lt;n&gt;:BIT&lt;m&gt;:BUS&lt;n&gt; Commands Name:BUS&lt;n&gt;:BIT&lt;m&gt; � Command Syntax:BUS&lt;n&gt;:BIT&lt;m&gt; &lt;display&gt;&lt;display&gt; ::= {{1 | ON} | {0 | OFF}}&lt;n&gt; ::= An integer, 1 or 2, is attached as a suffix to BUS and defines the bus that is affected by the command.&lt;m&gt; ::= An integer, 0,..,7, is attached as a suffix to BIT and defines the digital channel that is affected by the command.The :BUS&lt;n&gt;:BIT&lt;m&gt; command includes or excludes the selected bit as part of the definition for the selected bus. If the parameter is a 1 (ON), the bit is included in the definition. If the parameter is a 0 (OFF), the bit is excluded from the definition. Note: BIT0-7 correspond to DIGital0-7.This command is only valid for the MSO models.Query Syntax:BUS&lt;n&gt;:BIT&lt;m&gt;?The :BUS&lt;n&gt;:BIT&lt;m&gt;? query returns the value indicating whether the specified bit is included or excluded from the specified bus definition.Return Format&lt;display&gt;&lt;NL&gt;&lt;display&gt; ::= {0 | 1}See AlsoIntroduction to :BUS&lt;n&gt; Commands:BUS&lt;n&gt;:BITS:BUS&lt;n&gt;:CLEar:BUS&lt;n&gt;:DISPlay:BUS&lt;n&gt;:LABel:BUS&lt;n&gt;:MASKExample Code' Include digital channel 1 in bus 1: myScope.WriteString ":BUS1:BIT1 ON"</c><c> :BUS&lt;n&gt;:BITS:BUS&lt;n&gt; Commands Name:BUS&lt;n&gt;:BITS � Command Syntax:BUS&lt;n&gt;:BITS &lt;channel_list&gt;, &lt;display&gt;&lt;channel_list&gt; ::= (@&lt;m&gt;,&lt;m&gt;:&lt;m&gt;, ...) where commas separate bits and colons define bit ranges.&lt;m&gt; ::= An integer, 0,..,7, defines a digital channel affected by the command.&lt;display&gt; ::= {{1 | ON} | {0 | OFF}}&lt;n&gt; ::= An integer, 1 or 2, is attached as a suffix to BUS and defines the bus that is affected by the command.The :BUS&lt;n&gt;:BITS command includes or excludes the selected bits in the channel list in the definition of the selected bus. If the parameter is a 1 (ON) then the bits in the channel list are included as part of the selected bus definition. If the parameter is a 0 (OFF) then the bits in the channel list are excluded from the definition of the selected bus.This command is only valid for the MSO models.Query Syntax:BUS&lt;n&gt;:BITS?The :BUS&lt;n&gt;:BITS? query returns the definition for the specified bus.Return Format&lt;channel_list&gt;, &lt;display&gt;&lt;NL&gt;&lt;channel_list&gt; ::= (@&lt;m&gt;,&lt;m&gt;:&lt;m&gt;, ...) where commas separate bits and colons define bit ranges.&lt;display&gt; ::= {0 | 1}See AlsoIntroduction to :BUS&lt;n&gt; Commands:BUS&lt;n&gt;:BIT&lt;m&gt;:BUS&lt;n&gt;:CLEar:BUS&lt;n&gt;:DISPlay:BUS&lt;n&gt;:LABel:BUS&lt;n&gt;:MASKExample Code' Include digital channels 1, 2, 4, 5, 6, and 7 in bus 1: myScope.WriteString ":BUS1:BITS (@1,2,4:7), ON" ' Include digital channels 1, 5, and 7 in bus 1: myScope.WriteString ":BUS1:BITS (@1,5,7), ON" ' Include digital channels 1 through 7 in bus 1: myScope.WriteString ":BUS1:BITS (@1:7), ON" ' Include digital channels 1 through 3, 5, and 7 in bus 1: myScope.WriteString ":BUS1:BITS (@1:3,5,7), ON"</c><c> :BUS&lt;n&gt;:CLEar:BUS&lt;n&gt; Commands Name:BUS&lt;n&gt;:CLEar � Command Syntax:BUS&lt;n&gt;:CLEar&lt;n&gt; ::= An integer, 1 or 2, is attached as a suffix to BUS and defines the bus that is affected by the command.The :BUS&lt;n&gt;:CLEar command excludes all of the digital channels from the selected bus definition.This command is only valid for the MSO models.See AlsoIntroduction to :BUS&lt;n&gt; Commands:BUS&lt;n&gt;:BIT&lt;m&gt;:BUS&lt;n&gt;:BITS:BUS&lt;n&gt;:DISPlay:BUS&lt;n&gt;:LABel:BUS&lt;n&gt;:MASK</c><c> :BUS&lt;n&gt;:DISPlay:BUS&lt;n&gt; Commands Name:BUS&lt;n&gt;:DISPlay � Command Syntax:BUS&lt;n&gt;:DISplay &lt;value&gt;&lt;value&gt; ::= {{1 | ON} | {0 | OFF}}&lt;n&gt; ::= An integer, 1 or 2, is attached as a suffix to BUS and defines the bus that is affected by the command.The :BUS&lt;n&gt;:DISPlay command enables or disables the view of the selected bus.This command is only valid for the MSO models.Query Syntax:BUS&lt;n&gt;:DISPlay?The :BUS&lt;n&gt;:DISPlay? query returns the display value of the selected bus.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {0 | 1}See AlsoIntroduction to :BUS&lt;n&gt; Commands:BUS&lt;n&gt;:BIT&lt;m&gt;:BUS&lt;n&gt;:BITS:BUS&lt;n&gt;:CLEar:BUS&lt;n&gt;:LABel:BUS&lt;n&gt;:MASK</c><c> :BUS&lt;n&gt;:LABel:BUS&lt;n&gt; Commands Name:BUS&lt;n&gt;:LABel � Command Syntax:BUS&lt;n&gt;:LABel &lt;quoted_string&gt;&lt;quoted_string&gt; ::= any series of 10 or less characters as a quoted ASCII string.&lt;n&gt; ::= An integer, 1 or 2, is attached as a suffix to BUS and defines the bus that is affected by the command.The :BUS&lt;n&gt;:LABel command sets the bus label to the quoted string. Setting a label for a bus will also result in the name being added to the label list.This command is only valid for the MSO models.Label strings are 10 characters or less, and may contain any commonly used ASCII characters. Labels with more than 10 characters are truncated to 10 characters.Query Syntax:BUS&lt;n&gt;:LABel?The :BUS&lt;n&gt;:LABel? query returns the name of the specified bus.Return Format&lt;quoted_string&gt;&lt;NL&gt;&lt;quoted_string&gt; ::= any series of 10 or less characters as a quoted ASCII string.See AlsoIntroduction to :BUS&lt;n&gt; Commands:BUS&lt;n&gt;:BIT&lt;m&gt;:BUS&lt;n&gt;:BITS:BUS&lt;n&gt;:CLEar:BUS&lt;n&gt;:DISPlay:BUS&lt;n&gt;:MASK:CHANnel&lt;n&gt;:LABel:DISPlay:LABList:DIGital&lt;d&gt;:LABelExample Code' Set the bus 1 label to "Data": myScope.WriteString ":BUS1:LABel 'Data'"</c><c> :BUS&lt;n&gt;:MASK:BUS&lt;n&gt; Commands Name:BUS&lt;n&gt;:MASK � Command Syntax:BUS&lt;n&gt;:MASK &lt;mask&gt;&lt;mask&gt; ::= 32-bit integer in decimal, &lt;nondecimal&gt;, or &lt;string&gt;&lt;nondecimal&gt; ::= #Hnn...n where n ::= {0,..,9 | A,..,F} for hexadecimal&lt;nondecimal&gt; ::= #Bnn...n where n ::= {0 | 1} for binary&lt;string&gt; ::= "0xnn...n" where n ::= {0,..,9 | A,..,F} for hexadecimal&lt;n&gt; ::= An integer, 1 or 2, is attached as a suffix to BUS and defines the bus that is affected by the command.The :BUS&lt;n&gt;:MASK command defines the bits included and excluded in the selected bus according to the mask. Set a mask bit to a "1" to include that bit in the selected bus, and set a mask bit to a "0" to exclude it.This command is only valid for the MSO models.Query Syntax:BUS&lt;n&gt;:MASK?The :BUS&lt;n&gt;:MASK? query returns the mask value for the specified bus.Return Format&lt;mask&gt;&lt;NL&gt; in decimal formatSee AlsoIntroduction to :BUS&lt;n&gt; Commands:BUS&lt;n&gt;:BIT&lt;m&gt;:BUS&lt;n&gt;:BITS:BUS&lt;n&gt;:CLEar:BUS&lt;n&gt;:DISPlay:BUS&lt;n&gt;:LABel</c><c> :CALibrate:DATE:CALibrate Commands Name:CALibrate:DATE � Query Syntax:CALibrate:DATE?The :CALibrate:DATE? query returns the date of the last calibration.Return Format&lt;date&gt;&lt;NL&gt;&lt;date&gt; ::= year,month,day in NR1 format&lt;NL&gt;See AlsoIntroduction to :CALibrate Commands</c><c> :CALibrate:LABel:CALibrate Commands Name:CALibrate:LABel � Command Syntax:CALibrate:LABel &lt;string&gt;&lt;string&gt; ::= quoted ASCII string of up to 32 characters in length, not including the quotesThe CALibrate:LABel command saves a string that is up to 32 characters in length into the instrument's non-volatile memory. The string may be used to record calibration dates or other information as needed.Query Syntax:CALibrate:LABel?The :CALibrate:LABel? query returns the contents of the calibration label string.Return Format&lt;string&gt;&lt;NL&gt;&lt;string&gt;::= unquoted ASCII string of up to 32 characters in lengthSee AlsoIntroduction to :CALibrate Commands</c><c> :CALibrate:OUTPut:CALibrate Commands Name:CALibrate:OUTPut � Command Syntax:CALibrate:OUTPut &lt;signal&gt;&lt;signal&gt; ::= {TRIGgers | MASK | WAVEgen}The CALibrate:OUTPut command sets the signal that is available on the rear panel TRIG OUT BNC:TRIGgers � pulse when a trigger event occurs.MASK � signal from mask test indicating a failure.WAVEgen � waveform generator sync output signal. This signal depends on the :WGEN:FUNCtion setting:Waveform TypeSync Signal CharacteristicsSINusoid, SQUare, RAMP, PULSeThe Sync signal is a TTL positive pulse that occurs when the waveform rises above zero volts (or the DC offset value).DC, NOISeN/AQuery Syntax:CALibrate:OUTPut?The :CALibrate:OUTPut query returns the current source of the TRIG OUT BNC signal.Return Format&lt;signal&gt;&lt;NL&gt;&lt;signal&gt; ::= {TRIG | MASK | WAVE}See AlsoIntroduction to :CALibrate Commands:WGEN:FUNCtion</c><c> :CALibrate:PROTected:CALibrate Commands Name:CALibrate:PROTected � Query Syntax:CALibrate:PROTected?The :CALibrate:PROTected? query returns the rear-panel calibration protect (CAL PROTECT) button state. The value PROTected indicates calibration is disabled, and UNPRotected indicates calibration is enabled.Return Format&lt;switch&gt;&lt;NL&gt;&lt;switch&gt; ::= {PROT | UNPR}See AlsoIntroduction to :CALibrate Commands</c><c> :CALibrate:STARt:CALibrate Commands Name:CALibrate:STARt � Command Syntax:CALibrate:STARtThe CALibrate:STARt command starts the user calibration procedure.Before starting the user calibration procedure, you must set the rear panel CALIBRATION switch to UNPROTECTED, and you must connect BNC cables from the TRIG OUT connector to the analog channel inputs. See the User's Guide for details.See AlsoIntroduction to :CALibrate Commands:CALibrate:PROTected</c><c> :CALibrate:STATus:CALibrate Commands Name:CALibrate:STATus � Query Syntax:CALibrate:STATus?The :CALibrate:STATus? query returns the summary results of the last user calibration procedure.Return Format&lt;return value&gt;&lt;NL&gt;&lt;return value&gt; ::= &lt;status_code&gt;,&lt;status_string&gt;&lt;status_code&gt; ::= an integer status code&lt;status_string&gt; ::= an ASCII status stringSee AlsoIntroduction to :CALibrate Commands</c><c> :CALibrate:TEMPerature:CALibrate Commands Name:CALibrate:TEMPerature � Query Syntax:CALibrate:TEMPerature?The :CALibrate:TEMPerature? query returns the change in temperature since the last user calibration procedure.Return Format&lt;return value&gt;&lt;NL&gt;&lt;return value&gt; ::= degrees C delta since last cal in NR3 formatSee AlsoIntroduction to :CALibrate Commands</c><c> :CALibrate:TIME:CALibrate Commands Name:CALibrate:TIME � Query Syntax:CALibrate:TIME?The :CALibrate:TIME? query returns the time of the last calibration.Return Format&lt;date&gt;&lt;NL&gt;&lt;date&gt; ::= hour,minutes,seconds in NR1 formatSee AlsoIntroduction to :CALibrate Commands</c><c>Introduction to :CHANnel&lt;n&gt; Commands&lt;n&gt; ::= 1 to (# analog channels) in NR1 formatThe CHANnel&lt;n&gt; subsystem commands control an analog channel (vertical or Y-axis of the oscilloscope). Channels are independently programmable for all offset, probe, coupling, bandwidth limit, inversion, vernier, and range (scale) functions. The channel number (1, 2, 3, or 4) specified in the command selects the analog channel that is affected by the command.A label command provides identifying annotations of up to 10 characters.You can toggle the channel displays on and off with the :CHANnel&lt;n&gt;:DISPlay command as well as with the root level commands :VIEW and :BLANk.The obsolete CHANnel subsystem is supported.Reporting the Setup. Use :CHANnel1?, :CHANnel2?, :CHANnel3? or :CHANnel4? to query setup information for the CHANnel&lt;n&gt; subsystem.Return Format. The following are sample responses from the :CHANnel&lt;n&gt;? query. In this case, the query was issued following a *RST command.:CHAN1:RANG +40.0E+00;OFFS +0.00000E+00;COUP DC;IMP ONEM;DISP 1;BWL 0; INV 0;LAB "1";UNIT VOLT;PROB +10E+00;PROB:SKEW +0.00E+00;STYP SING</c><c> :CHANnel&lt;n&gt;:BWLimit:CHANnel&lt;n&gt; Commands Name:CHANnel&lt;n&gt;:BWLimit � Command Syntax:CHANnel&lt;n&gt;:BWLimit &lt;bwlimit&gt;&lt;bwlimit&gt; ::= {{1 | ON} | {0 | OFF}&lt;n&gt; ::= 1 to (# analog channels) in NR1 formatThe :CHANnel&lt;n&gt;:BWLimit command controls an internal low-pass filter. When the filter is on, the bandwidth of the specified channel is limited to approximately 25 MHz.Query Syntax:CHANnel&lt;n&gt;:BWLimit?The :CHANnel&lt;n&gt;:BWLimit? query returns the current setting of the low-pass filter.Return Format&lt;bwlimit&gt;&lt;NL&gt;&lt;bwlimit&gt; ::= {1 | 0}See AlsoIntroduction to :CHANnel&lt;n&gt; Commands</c><c> :CHANnel&lt;n&gt;:COUPling:CHANnel&lt;n&gt; Commands Name:CHANnel&lt;n&gt;:COUPling � Command Syntax:CHANnel&lt;n&gt;:COUPling &lt;coupling&gt;&lt;coupling&gt; ::= {AC | DC}&lt;n&gt; ::= 1 to (# analog channels) in NR1 formatThe :CHANnel&lt;n&gt;:COUPling command selects the input coupling for the specified channel. The coupling for each analog channel can be set to AC or DC.Query Syntax:CHANnel&lt;n&gt;:COUPling?The :CHANnel&lt;n&gt;:COUPling? query returns the current coupling for the specified channel.Return Format&lt;coupling value&gt;&lt;NL&gt;&lt;coupling value&gt; ::= {AC | DC}See AlsoIntroduction to :CHANnel&lt;n&gt; Commands</c><c> :CHANnel&lt;n&gt;:DISPlay:CHANnel&lt;n&gt; Commands Name:CHANnel&lt;n&gt;:DISPlay � Command Syntax:CHANnel&lt;n&gt;:DISPlay &lt;display value&gt;&lt;display value&gt; ::= {{1 | ON} | {0 | OFF}}&lt;n&gt; ::= 1 to (# analog channels) in NR1 formatThe :CHANnel&lt;n&gt;:DISPlay command turns the display of the specified channel on or off.Query Syntax:CHANnel&lt;n&gt;:DISPlay?The :CHANnel&lt;n&gt;:DISPlay? query returns the current display setting for the specified channel.Return Format&lt;display value&gt;&lt;NL&gt;&lt;display value&gt; ::= {1 | 0}See AlsoIntroduction to :CHANnel&lt;n&gt; Commands:VIEW:BLANk:STATus:POD&lt;n&gt;:DISPlay:DIGital&lt;d&gt;:DISPlay</c><c> :CHANnel&lt;n&gt;:IMPedance:CHANnel&lt;n&gt; Commands Name:CHANnel&lt;n&gt;:IMPedance � Command Syntax:CHANnel&lt;n&gt;:IMPedance &lt;impedance&gt;&lt;impedance&gt; ::= ONEMeg&lt;n&gt; ::= 1 to (# analog channels) in NR1 formatThe :CHANnel&lt;n&gt;:IMPedance command selects the input impedance setting for the specified analog channel. The only legal value for this command is ONEMeg (1 MΩ).Query Syntax:CHANnel&lt;n&gt;:IMPedance?The :CHANnel&lt;n&gt;:IMPedance? query returns the current input impedance setting for the specified channel.Return Format&lt;impedance value&gt;&lt;NL&gt;&lt;impedance value&gt; ::= ONEMSee AlsoIntroduction to :CHANnel&lt;n&gt; Commands</c><c> :CHANnel&lt;n&gt;:INVert:CHANnel&lt;n&gt; Commands Name:CHANnel&lt;n&gt;:INVert � Command Syntax:CHANnel&lt;n&gt;:INVert &lt;invert value&gt;&lt;invert value&gt; ::= {{1 | ON} | {0 | OFF}&lt;n&gt; ::= 1 to (# analog channels) in NR1 formatThe :CHANnel&lt;n&gt;:INVert command selects whether or not to invert the input signal for the specified channel. The inversion may be 1 (ON/inverted) or 0 (OFF/not inverted).Query Syntax:CHANnel&lt;n&gt;:INVert?The :CHANnel&lt;n&gt;:INVert? query returns the current state of the channel inversion.Return Format&lt;invert value&gt;&lt;NL&gt;&lt;invert value&gt; ::= {0 | 1}See AlsoIntroduction to :CHANnel&lt;n&gt; Commands</c><c> :CHANnel&lt;n&gt;:LABel:CHANnel&lt;n&gt; Commands Name:CHANnel&lt;n&gt;:LABel � Command Syntax:CHANnel&lt;n&gt;:LABel &lt;string&gt;&lt;string&gt; ::= quoted ASCII string&lt;n&gt; ::= 1 to (# analog channels) in NR1 formatLabel strings are 10 characters or less, and may contain any commonly used ASCII characters. Labels with more than 10 characters are truncated to 10 characters. Lower case characters are converted to upper case.The :CHANnel&lt;n&gt;:LABel command sets the analog channel label to the string that follows. Setting a label for a channel also adds the name to the label list in non-volatile memory (replacing the oldest label in the list).Query Syntax:CHANnel&lt;n&gt;:LABel?The :CHANnel&lt;n&gt;:LABel? query returns the label associated with a particular analog channel.Return Format&lt;string&gt;&lt;NL&gt;&lt;string&gt; ::= quoted ASCII stringSee AlsoIntroduction to :CHANnel&lt;n&gt; Commands:DISPlay:LABel:DIGital&lt;d&gt;:LABel:DISPlay:LABList:BUS&lt;n&gt;:LABelExample Code ' LABEL - This command allows you to write a name (10 characters ' maximum) next to the channel number. It is not necessary, but ' can be useful for organizing the display. myScope.WriteString ":CHANnel1:LABel ""CAL 1""" ' Label ch1 "CAL 1". myScope.WriteString ":CHANnel2:LABel ""CAL2""" ' Label ch1 "CAL2".See complete example programs at: Programming Examples</c><c> :CHANnel&lt;n&gt;:OFFSet:CHANnel&lt;n&gt; Commands Name:CHANnel&lt;n&gt;:OFFSet � Command Syntax:CHANnel&lt;n&gt;:OFFSet &lt;offset&gt; [&lt;suffix&gt;]&lt;offset&gt; ::= Vertical offset value in NR3 format&lt;suffix&gt; ::= {V | mV}&lt;n&gt; ::= 1 to (# analog channels) in NR1 formatThe :CHANnel&lt;n&gt;:OFFSet command sets the value that is represented at center screen for the selected channel. The range of legal values varies with the value set by the :CHANnel&lt;n&gt;:RANGe and :CHANnel&lt;n&gt;:SCALe commands. If you set the offset to a value outside of the legal range, the offset value is automatically set to the nearest legal value. Legal values are affected by the probe attenuation setting.Query Syntax:CHANnel&lt;n&gt;:OFFSet?The :CHANnel&lt;n&gt;:OFFSet? query returns the current offset value for the selected channel.Return Format&lt;offset&gt;&lt;NL&gt;&lt;offset&gt; ::= Vertical offset value in NR3 formatSee AlsoIntroduction to :CHANnel&lt;n&gt; Commands:CHANnel&lt;n&gt;:RANGe:CHANnel&lt;n&gt;:SCALe:CHANnel&lt;n&gt;:PROBe</c><c> :CHANnel&lt;n&gt;:PROBe:CHANnel&lt;n&gt; Commands Name:CHANnel&lt;n&gt;:PROBe � Command Syntax:CHANnel&lt;n&gt;:PROBe &lt;attenuation&gt;&lt;attenuation&gt; ::= probe attenuation ratio in NR3 format&lt;n&gt; ::= 1 to (# analog channels) in NR1 formatThe obsolete attenuation values X1, X10, X20, X100 are also supported.The :CHANnel&lt;n&gt;:PROBe command specifies the probe attenuation factor for the selected channel. The probe attenuation factor may be 0.1 to 10000. This command does not change the actual input sensitivity of the oscilloscope. It changes the reference constants for scaling the display factors, for making automatic measurements, and for setting trigger levels.Query Syntax:CHANnel&lt;n&gt;:PROBe?The :CHANnel&lt;n&gt;:PROBe? query returns the current probe attenuation factor for the selected channel.Return Format&lt;attenuation&gt;&lt;NL&gt;&lt;attenuation&gt; ::= probe attenuation ratio in NR3 formatSee AlsoIntroduction to :CHANnel&lt;n&gt; Commands:CHANnel&lt;n&gt;:RANGe:CHANnel&lt;n&gt;:SCALe:CHANnel&lt;n&gt;:OFFSetExample Code ' CHANNEL_PROBE - Sets the probe attenuation factor for the selected ' channel. The probe attenuation factor may be set from 0.1 to 10000. myScope.WriteString ":CHANnel1:PROBe 10" ' Set Probe to 10:1.See complete example programs at: Programming Examples</c><c> :CHANnel&lt;n&gt;:PROBe:HEAD[:TYPE]:CHANnel&lt;n&gt; Commands Name:CHANnel&lt;n&gt;:PROBe:HEAD[:TYPE] � Command SyntaxThis command is valid only for the 113xA Series probes.:CHANnel&lt;n&gt;:PROBe:HEAD[:TYPE] &lt;head_param&gt;&lt;head_param&gt; ::= {SEND0 | SEND6 | SEND12 | SEND20 | DIFF0 | DIFF6 | DIFF12 | DIFF20 | NONE}&lt;n&gt; ::= {1 | 2 | 3 | 4}The :CHANnel&lt;n&gt;:PROBe:HEAD[:TYPE] command sets an analog channel probe head type and dB value. You can choose from:SEND0 � Single-ended, 0dB.SEND6 � Single-ended, 6dB.SEND12 � Single-ended, 12dB.SEND20 � Single-ended, 20dB.DIFF0 � Differential, 0dB.DIFF6 � Differential, 6dB.DIFF12 � Differential, 12dB.DIFF20 � Differential, 20dB.Query Syntax:CHANnel&lt;n&gt;:PROBe:HEAD[:TYPE]?The :CHANnel&lt;n&gt;:PROBe:HEAD[:TYPE]? query returns the current probe head type setting for the selected channel.Return Format&lt;head_param&gt;&lt;NL&gt;&lt;head_param&gt; ::= {SEND0 | SEND6 | SEND12 | SEND20 | DIFF0 | DIFF6 | DIFF12 | DIFF20 | NONE}See AlsoIntroduction to :CHANnel&lt;n&gt; Commands:CHANnel&lt;n&gt;:PROBe:CHANnel&lt;n&gt;:PROBe:ID:CHANnel&lt;n&gt;:PROBe:SKEW:CHANnel&lt;n&gt;:PROBe:STYPe</c><c> :CHANnel&lt;n&gt;:PROBe:ID:CHANnel&lt;n&gt; Commands Name:CHANnel&lt;n&gt;:PROBe:ID � Query Syntax:CHANnel&lt;n&gt;:PROBe:ID?&lt;n&gt; ::= 1 to (# analog channels) in NR1 formatThe :CHANnel&lt;n&gt;:PROBe:ID? query returns the type of probe attached to the specified oscilloscope channel.Return Format&lt;probe id&gt;&lt;NL&gt;&lt;probe id&gt; ::= unquoted ASCII string up to 11 charactersSome of the possible returned values are:1131A1132A1134A1147A1153A1154A1156A1157A1158A1159AAutoProbeE2621AE2622AE2695AE2697AHP1152AHP1153ANONEProbeUnknownUnsupportedSee AlsoIntroduction to :CHANnel&lt;n&gt; Commands</c><c> :CHANnel&lt;n&gt;:PROBe:SKEW:CHANnel&lt;n&gt; Commands Name:CHANnel&lt;n&gt;:PROBe:SKEW � Command Syntax:CHANnel&lt;n&gt;:PROBe:SKEW &lt;skew value&gt;&lt;skew value&gt; ::= skew time in NR3 format&lt;skew value&gt; ::= -100 ns to +100 ns&lt;n&gt; ::= 1 to (# analog channels) in NR1 formatThe :CHANnel&lt;n&gt;:PROBe:SKEW command sets the channel-to-channel skew factor for the specified channel. Each analog channel can be adjusted + or -100 ns for a total of 200 ns difference between channels. You can use the oscilloscope's probe skew control to remove cable-delay errors between channels.Query Syntax:CHANnel&lt;n&gt;:PROBe:SKEW?The :CHANnel&lt;n&gt;:PROBe:SKEW? query returns the current probe skew setting for the selected channel.Return Format&lt;skew value&gt;&lt;NL&gt;&lt;skew value&gt; ::= skew value in NR3 formatSee AlsoIntroduction to :CHANnel&lt;n&gt; Commands</c><c> :CHANnel&lt;n&gt;:PROBe:STYPe:CHANnel&lt;n&gt; Commands Name:CHANnel&lt;n&gt;:PROBe:STYPe � Command SyntaxThis command is valid only for the 113xA Series probes.:CHANnel&lt;n&gt;:PROBe:STYPe &lt;signal type&gt;&lt;signal type&gt; ::= {DIFFerential | SINGle}&lt;n&gt; ::= 1 to (# analog channels) in NR1 formatThe :CHANnel&lt;n&gt;:PROBe:STYPe command sets the channel probe signal type (STYPe) to differential or single-ended when using the 113xA Series probes and determines how offset is applied.When single-ended is selected, the :CHANnel&lt;n&gt;:OFFset command changes the offset value of the probe amplifier. When differential is selected, the :CHANnel&lt;n&gt;:OFFset command changes the offset value of the channel amplifier.Query Syntax:CHANnel&lt;n&gt;:PROBe:STYPe?The :CHANnel&lt;n&gt;:PROBe:STYPe? query returns the current probe signal type setting for the selected channel.Return Format&lt;signal type&gt;&lt;NL&gt;&lt;signal type&gt; ::= {DIFF | SING}See AlsoIntroduction to :CHANnel&lt;n&gt; Commands:CHANnel&lt;n&gt;:OFFSet</c><c> :CHANnel&lt;n&gt;:PROTection:CHANnel&lt;n&gt; Commands Name:CHANnel&lt;n&gt;:PROTection � Command Syntax:CHANnel&lt;n&gt;:PROTection[:CLEar]&lt;n&gt; ::= 1 to (# analog channels) in NR1 format| 4}With the 2000 X-Series oscilloscopes, the analog channel input impedance is always 1 MΩ, so automatic overvoltage protection is not necessary (as it is for channels with 50Ω input impedance). There are no protection settings to clear, so the :CHANnel&lt;n&gt;:PROTection[:CLEar] command does nothing.Query Syntax:CHANnel&lt;n&gt;:PROTection?The :CHANnel&lt;n&gt;:PROTection query always returns NORM (normal).Return FormatNORM&lt;NL&gt;See AlsoIntroduction to :CHANnel&lt;n&gt; Commands:CHANnel&lt;n&gt;:COUPling:CHANnel&lt;n&gt;:PROBe</c><c> :CHANnel&lt;n&gt;:RANGe:CHANnel&lt;n&gt; Commands Name:CHANnel&lt;n&gt;:RANGe � Command Syntax:CHANnel&lt;n&gt;:RANGe &lt;range&gt;[&lt;suffix&gt;]&lt;range&gt; ::= vertical full-scale range value in NR3 format&lt;suffix&gt; ::= {V | mV}&lt;n&gt; ::= 1 to (# analog channels) in NR1 formatThe :CHANnel&lt;n&gt;:RANGe command defines the full-scale vertical axis of the selected channel. When using 1:1 probe attenuation, legal values for the range are from 8 mV to 40 V.If the probe attenuation is changed, the range value is multiplied by the probe attenuation factor.Query Syntax:CHANnel&lt;n&gt;:RANGe?The :CHANnel&lt;n&gt;:RANGe? query returns the current full-scale range setting for the specified channel.Return Format&lt;range_argument&gt;&lt;NL&gt;&lt;range_argument&gt; ::= vertical full-scale range value in NR3 formatSee AlsoIntroduction to :CHANnel&lt;n&gt; Commands:CHANnel&lt;n&gt;:SCALe:CHANnel&lt;n&gt;:PROBeExample Code ' CHANNEL_RANGE - Sets the full scale vertical range in volts. The ' range value is 8 times the volts per division. myScope.WriteString ":CHANnel1:RANGe 8" ' Set the vertical range to 8 volts.See complete example programs at: Programming Examples</c><c> :CHANnel&lt;n&gt;:SCALe:CHANnel&lt;n&gt; Commands Name:CHANnel&lt;n&gt;:SCALe � Command Syntax:CHANnel&lt;n&gt;:SCALe &lt;scale&gt;[&lt;suffix&gt;]&lt;scale&gt; ::= vertical units per division in NR3 format&lt;suffix&gt; ::= {V | mV}&lt;n&gt; ::= 1 to (# analog channels) in NR1 formatThe :CHANnel&lt;n&gt;:SCALe command sets the vertical scale, or units per division, of the selected channel.If the probe attenuation is changed, the scale value is multiplied by the probe's attenuation factor.Query Syntax:CHANnel&lt;n&gt;:SCALe?The :CHANnel&lt;n&gt;:SCALe? query returns the current scale setting for the specified channel.Return Format&lt;scale value&gt;&lt;NL&gt;&lt;scale value&gt; ::= vertical units per division in NR3 formatSee AlsoIntroduction to :CHANnel&lt;n&gt; Commands:CHANnel&lt;n&gt;:RANGe:CHANnel&lt;n&gt;:PROBe</c><c> :CHANnel&lt;n&gt;:UNITs:CHANnel&lt;n&gt; Commands Name:CHANnel&lt;n&gt;:UNITs � Command Syntax:CHANnel&lt;n&gt;:UNITs &lt;units&gt;&lt;units&gt; ::= {VOLT | AMPere}&lt;n&gt; ::= 1 to (# analog channels) in NR1 formatThe :CHANnel&lt;n&gt;:UNITs command sets the measurement units for the connected probe. Select VOLT for a voltage probe and select AMPere for a current probe. Measurement results, channel sensitivity, and trigger level will reflect the measurement units you select.Query Syntax:CHANnel&lt;n&gt;:UNITs?The :CHANnel&lt;n&gt;:UNITs? query returns the current units setting for the specified channel.Return Format&lt;units&gt;&lt;NL&gt;&lt;units&gt; ::= {VOLT | AMP}See AlsoIntroduction to :CHANnel&lt;n&gt; Commands:CHANnel&lt;n&gt;:RANGe:CHANnel&lt;n&gt;:PROBe:EXTernal:UNITs</c><c> :CHANnel&lt;n&gt;:VERNier:CHANnel&lt;n&gt; Commands Name:CHANnel&lt;n&gt;:VERNier � Command Syntax:CHANnel&lt;n&gt;:VERNier &lt;vernier value&gt;&lt;vernier value&gt; ::= {{1 | ON} | {0 | OFF}&lt;n&gt; ::= 1 to (# analog channels) in NR1 formatThe :CHANnel&lt;n&gt;:VERNier command specifies whether the channel's vernier (fine vertical adjustment) setting is ON (1) or OFF (0).Query Syntax:CHANnel&lt;n&gt;:VERNier?The :CHANnel&lt;n&gt;:VERNier? query returns the current state of the channel's vernier setting.Return Format&lt;vernier value&gt;&lt;NL&gt;&lt;vernier value&gt; ::= {0 | 1}See AlsoIntroduction to :CHANnel&lt;n&gt; Commands</c><c> :DEMO CommandsAgilent InfiniiVision 2000 X-Series Oscilloscopes Programmer's Guide:DEMO CommandsWhen the education kit is licensed (Option EDU), you can output demonstration signals on the oscilloscope's Demo 1 and Demo 2 terminals. See Introduction to :DEMO Commands.:DEMO Commands Summary:CommandQueryOptions and Query Returns:DEMO:FUNCtion &lt;signal&gt;:DEMO:FUNCtion?&lt;signal&gt; ::= {SINusoid | NOISy | PHASe | RINGing | SINGle | AM | CLK | GLITch | BURSt | MSO | RFBurst | LFSine | FMBurst}:DEMO:FUNCtion:PHASe:PHASe &lt;angle&gt;:DEMO:FUNCtion:PHASe:PHASe?&lt;angle&gt; ::= angle in degrees from 0 to 360 in NR3 format:DEMO:OUTPut {{0 | OFF} | {1 | ON}}:DEMO:OUTPut?{0 | 1}Introduction to :DEMO CommandsThe :DEMO subsystem provides commands to output demonstration signals on the oscillosope's Demo 1 and Demo 2 terminals.Reporting the Setup. Use :DEMO? to query setup information for the DEMO subsystem.Return Format. The following is a sample response from the :DEMO? query. In this case, the query was issued following the *RST command.:DEMO:FUNC SIN;OUTP 0</c><c> :DEMO:FUNCtion:DEMO Commands Name:DEMO:FUNCtion � Command Syntax:DEMO:FUNCtion &lt;signal&gt;&lt;signal&gt; ::= {SINusoid | NOISy | PHASe | RINGing | SINGle | AM | CLK | GLITch | BURSt | MSO | RFBurst | LFSine | FMBurst}The :DEMO:FUNCtion command selects the type of demo signal:Demo Signal FunctionDemo 1 TerminalDemo 2 TerminalSINusoid5 MHz sine wave @ ~ 6 Vpp, 0 V offsetOffNOISy1 kHz sine wave @ ~ 2.4 Vpp, 0.0 V offset, with ~ 0.5 Vpp of random noise addedOffPHAse1 kHz sine wave @ 2.4 Vpp, 0.0 V offset1 kHz sine wave @ 2.4 Vpp, 0.0 V offset , phase shifted by the amount entered using the :DEMO:FUNCtion:PHASe:PHASe commandRINGing500 kHz digital pulse @ ~ 3 Vpp, 1.5 V offset, and ~500 ns pulse width with ringingOffSINGle~500 ns wide digital pulse with ringing @ ~ 3 Vpp, 1.5 V offsetPress the front panel Set Off Single-Shot softkey to cause the selected single-shot signal to be output.OffAM26 kHz sine wave, ~ 7 Vpp, 0 V offsetAmplitude modulated signal, ~ 3 Vpp, 0 V offset, with ~13 MHz carrier and sine envelopeCLK500 kHz clock @ ~2 Vpp, 1 V offset, with infrequent glitch (1 glitch per 50,000 clocks)OffGLITchBurst of 6 digital pulses (plus infrequent glitch) that occurs once every 80 �s @ ~3.6 Vpp, ~1.8 V offsetOffBURStBurst of digital pulses that occur every 50 �s @ ~ 3.6 Vpp, ~1.5 V offsetOffMSO3.1 kHz stair-step sine wave output of DAC @ ~1.5 Vpp, 0.75 V offsetDAC input signals are internally routed to digital channels D0 through D7~3.1 kHz sine wave filtered from DAC output @ ~ 600 mVpp, 300 mV offsetRFBurst5-cycle burst of a 10 MHz amplitude modulated sine wave @ ~ 2.6 Vpp, 0 V offset occurring once every 4 msOffLFSine30 Hz sine wave @ ~2.7 Vpp, 0 V offset, with very narrow glitch near each positive peakOffFMBurstFM burst, modulated from ~100 kHz to ~1 MHz, ~5.0 Vpp, ~600 mV offset.OffQuery Syntax:DEMO:FUNCtion?The :DEMO:FUNCtion? query returns the currently selected demo signal type.Return Format&lt;signal&gt;&lt;NL&gt;&lt;signal&gt; ::= {SIN | NOIS | PHAS | RING | SING | AM | CLK | GLIT | BURS | MSO | RFB | LFS | FMB}See AlsoIntroduction to :DEMO Commands</c><c> :DEMO:FUNCtion:PHASe:PHASe:DEMO Commands Name:DEMO:FUNCtion:PHASe:PHASe � Command Syntax:DEMO:FUNCtion:PHASe:PHASe &lt;angle&gt;&lt;angle&gt; ::= angle in degrees from 0 to 360 in NR3 formatFor the phase shifted sine demo signals, the :DEMO:FUNCtion:PHASe:PHASe command specifies the phase shift in the second sine waveform.Query Syntax:DEMO:FUNCtion:PHASe:PHASe?The :DEMO:FUNCtion:PHASe:PHASe? query returns the currently set phase shift.Return Format&lt;angle&gt;&lt;NL&gt;&lt;angle&gt; ::= angle in degrees from 0 to 360 in NR3 formatSee AlsoIntroduction to :DEMO Commands:DEMO:FUNCtion</c><c> :DEMO:OUTPut:DEMO Commands Name:DEMO:OUTPut � Command Syntax:DEMO:OUTPut &lt;on_off&gt;&lt;on_off&gt; ::= {{1 | ON} | {0 | OFF}The :DEMO:OUTPut command specifies whether the demo signal output is ON (1) or OFF (0).Query Syntax:DEMO:OUTPut?The :DEMO:OUTPut? query returns the current state of the demo signal output setting.Return Format&lt;on_off&gt;&lt;NL&gt;&lt;on_off&gt; ::= {1 | 0}See AlsoIntroduction to :DEMO Commands:DEMO:FUNCtion</c><c>Introduction to :DIGital&lt;d&gt; Commands&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 formatThe DIGital subsystem commands control the viewing, labeling, and positioning of digital channels. They also control threshold settings for groups of digital channels, or pods.These commands are only valid for the MSO models.Reporting the Setup. Use :DIGital&lt;d&gt;? to query setup information for the DIGital subsystem.Return Format. The following is a sample response from the :DIGital0? query. In this case, the query was issued following a *RST command.:DIG0:DISP 0;THR +1.40E+00;LAB 'D0';POS +0</c><c> :DIGital&lt;d&gt;:DISPlay:DIGital&lt;d&gt; Commands Name:DIGital&lt;d&gt;:DISPlay � Command Syntax:DIGital&lt;d&gt;:DISPlay &lt;display&gt;&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 format&lt;display&gt; ::= {{1 | ON} | {0 | OFF}}The :DIGital&lt;d&gt;:DISPlay command turns digital display on or off for the specified channel.This command is only valid for the MSO models.Query Syntax:DIGital&lt;d&gt;:DISPlay?The :DIGital&lt;d&gt;:DISPlay? query returns the current digital display setting for the specified channel.Return Format&lt;display&gt;&lt;NL&gt;&lt;display&gt; ::= {0 | 1}See AlsoIntroduction to :DIGital&lt;d&gt; Commands:POD&lt;n&gt;:DISPlay:CHANnel&lt;n&gt;:DISPlay:VIEW:BLANk:STATus</c><c> :DIGital&lt;d&gt;:LABel:DIGital&lt;d&gt; Commands Name:DIGital&lt;d&gt;:LABel � Command Syntax:DIGital&lt;d&gt;:LABel &lt;string&gt;&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 format&lt;string&gt; ::= any series of 10 or less characters as quoted ASCII string.The :DIGital&lt;d&gt;:LABel command sets the channel label to the string that follows. Setting a label for a channel also adds the name to the label list in non-volatile memory (replacing the oldest label in the list).This command is only valid for the MSO models.Label strings are 10 characters or less, and may contain any commonly used ASCII characters. Labels with more than 10 characters are truncated to 10 characters.Query Syntax:DIGital&lt;d&gt;:LABel?The :DIGital&lt;d&gt;:LABel? query returns the name of the specified channel.Return Format&lt;label string&gt;&lt;NL&gt;&lt;label string&gt; ::= any series of 10 or less characters as a quoted ASCII string.See AlsoIntroduction to :DIGital&lt;d&gt; Commands:CHANnel&lt;n&gt;:LABel:DISPlay:LABList:BUS&lt;n&gt;:LABel</c><c> :DIGital&lt;d&gt;:POSition:DIGital&lt;d&gt; Commands Name:DIGital&lt;d&gt;:POSition � Command Syntax:DIGital&lt;d&gt;:POSition &lt;position&gt;&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 format&lt;position&gt; ::= integer in NR1 format.Channel SizePositionTopBottomLarge0-770Medium0-15150Small0-31310The :DIGital&lt;d&gt;:POSition command sets the position of the specified channel. Note that bottom positions might not be valid depending on whether digital buses, serial decode waveforms, or the zoomed time base are displayed.This command is only valid for the MSO models.Query Syntax:DIGital&lt;d&gt;:POSition?The :DIGital&lt;d&gt;:POSition? query returns the position of the specified channel.If the returned value is "-1", this indicates there is no space to display the digital waveform (for example, when all serial lanes, digital buses, and the zoomed time base are displayed).Return Format&lt;position&gt;&lt;NL&gt;&lt;position&gt; ::= integer in NR1 format.See AlsoIntroduction to :DIGital&lt;d&gt; Commands</c><c> :DIGital&lt;d&gt;:SIZE:DIGital&lt;d&gt; Commands Name:DIGital&lt;d&gt;:SIZE � Command Syntax:DIGital&lt;d&gt;:SIZE &lt;value&gt;&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 format&lt;value&gt; ::= {SMALl | MEDium | LARGe}The :DIGital&lt;d&gt;:SIZE command specifies the size of digital channels on the display. Sizes are set for all digital channels. Therefore, if you set the size on digital channel 0 (for example), the same size is set on all other as well.This command is only valid for the MSO models.Query Syntax:DIGital&lt;d&gt;:SIZE?The :DIGital&lt;d&gt;:SIZE? query returns the size setting for the specified digital channels.Return Format&lt;size_value&gt;&lt;NL&gt;&lt;size_value&gt; ::= {SMAL | MED | LARG}See AlsoIntroduction to :DIGital&lt;d&gt; Commands:POD&lt;n&gt;:SIZE:DIGital&lt;d&gt;:POSition</c><c> :DIGital&lt;d&gt;:THReshold:DIGital&lt;d&gt; Commands Name:DIGital&lt;d&gt;:THReshold � Command Syntax:DIGital&lt;d&gt;:THReshold &lt;value&gt;&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 format&lt;value&gt; ::= {CMOS | ECL | TTL | &lt;user defined value&gt;[&lt;suffix&gt;]}&lt;user defined value&gt; ::= -8.00 to +8.00 in NR3 format&lt;suffix&gt; ::= {V | mV | uV}TTL = 1.4VCMOS = 2.5VECL = -1.3VThe :DIGital&lt;d&gt;:THReshold command sets the logic threshold value for all channels in the same pod as the specified channel. The threshold is used for triggering purposes and for displaying the digital data as high (above the threshold) or low (below the threshold).This command is only valid for the MSO models.Query Syntax:DIGital&lt;d&gt;:THReshold?The :DIGital&lt;d&gt;:THReshold? query returns the threshold value for the specified channel.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= threshold value in NR3 formatSee AlsoIntroduction to :DIGital&lt;d&gt; Commands:POD&lt;n&gt;:THReshold:TRIGger[:EDGE]:LEVel</c><c> :DIGitizeRoot (:) Commands Name:DIGitize � Command Syntax:DIGitize [&lt;source&gt;[,..,&lt;source&gt;]]&lt;source&gt; ::= {CHANnel&lt;n&gt; | FUNCtion | MATH | SBUS1} for the DSO models&lt;source&gt; ::= {CHANnel&lt;n&gt; | DIGital&lt;d&gt; | POD{1 | 2} | BUS{1 | 2} | FUNCtion | MATH | SBUS1} for the MSO models&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 formatThe &lt;source&gt; parameter may be repeated up to 5 times.The :DIGitize command is a specialized RUN command. It causes the instrument to acquire waveforms according to the settings of the :ACQuire commands subsystem. When the acquisition is complete, the instrument is stopped.If no argument is given, :DIGitize acquires the channels currently displayed. If no channels are displayed, all channels are acquired.The :DIGitize command is only executed when the :TIMebase:MODE is MAIN or WINDow.To halt a :DIGitize in progress, use the device clear command.MATH is an alias for FUNCtion.See AlsoIntroduction to Root (:) Commands:RUN:SINGle:STOP:TIMebase:MODE:ACQuire Commands:WAVeform CommandsExample Code ' Capture an acquisition using :DIGitize. ' ----------------------------------------------------------------- myScope.WriteString ":DIGitize CHANnel1"See complete example programs at: Programming Examples</c><c>Introduction to :DISPlay CommandsThe DISPlay subsystem is used to control the display storage and retrieval of waveform data, labels, and text. This subsystem allows the following actions:Clear the waveform area on the display.Turn vectors on or off.Set waveform persistence.Specify labels.Save and Recall display data.Reporting the Setup. Use :DISPlay? to query the setup information for the DISPlay subsystem.Return Format. The following is a sample response from the :DISPlay? query. In this case, the query was issued following a *RST command.:DISP:LAB 0;VECT 1;PERS MIN</c><c> :DISPlay:ANNotation:DISPlay Commands Name:DISPlay:ANNotation � Command Syntax:DISPlay:ANNotation &lt;setting&gt;&lt;setting&gt; ::= {{1 | ON} | {0 | OFF}}The :DISPlay:ANNotation command turns the annotation on and off. When on, the annotation appears in the upper left corner of the oscilloscope's display.The annotation is useful for documentation purposes, to add notes before capturing screens.Query Syntax:DISPlay:ANNotation?The :DISPlay:ANNotation? query returns the annotation setting.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {0 | 1}See Also:DISPlay:ANNotation:TEXT:DISPlay:ANNotation:COLor:DISPlay:ANNotation:BACKgroundIntroduction to :DISPlay Commands</c><c> :DISPlay:ANNotation:BACKground:DISPlay Commands Name:DISPlay:ANNotation:BACKground � Command Syntax:DISPlay:ANNotation:BACKground &lt;mode&gt;&lt;mode&gt; ::= {OPAQue | INVerted | TRANsparent}The :DISPlay:ANNotation:BACKground command specifies the background of the annotation:OPAQue � the annotation has a solid background.INVerted � the annotation's foreground and background colors are switched.TRANsparent � the annotation has a transparent background.Query Syntax:DISPlay:ANNotation:BACKground?The :DISPlay:ANNotation:BACKground? query returns the specified annotation background mode.Return Format&lt;mode&gt;&lt;NL&gt;&lt;mode&gt; ::= {OPAQ | INV | TRAN}See Also:DISPlay:ANNotation:DISPlay:ANNotation:TEXT:DISPlay:ANNotation:COLorIntroduction to :DISPlay Commands</c><c> :DISPlay:ANNotation:COLor:DISPlay Commands Name:DISPlay:ANNotation:COLor � Command Syntax:DISPlay:ANNotation:COLor &lt;color&gt;&lt;color&gt; ::= {CH1 | CH2 | CH3 | CH4 | DIG | MATH | REF | MARKer | WHITe | RED}The :DISPlay:ANNotation:COLor command specifies the annotation color. You can choose white, red, or colors that match analog channels, digital channels, math waveforms, reference waveforms, or markers.Query Syntax:DISPlay:ANNotation:COLor?The :DISPlay:ANNotation:COLor? query returns the specified annotation color.Return Format&lt;color&gt;&lt;NL&gt;&lt;color&gt; ::= {CH1 | CH2 | CH3 | CH4 | DIG | MATH | REF | MARK | WHIT | RED}See Also:DISPlay:ANNotation:DISPlay:ANNotation:TEXT:DISPlay:ANNotation:BACKgroundIntroduction to :DISPlay Commands</c><c> :DISPlay:ANNotation:TEXT:DISPlay Commands Name:DISPlay:ANNotation:TEXT � Command Syntax:DISPlay:ANNotation:TEXT &lt;string&gt;&lt;string&gt; ::= quoted ASCII string (up to 254 characters)The :DISPlay:ANNotation:TEXT command specifies the annotation string. The annotation string can contain as many characters as will fit in the Edit Annotation box on the oscilloscope's screen, up to 254 characters.You can include a carriage return in the annotation string using the characters "\n". Note that this is not a new line character but the actual "\" (backslash) and "n" characters in the string. Carriage returns lessen the number of characters available for the annotation string.Use :DISPlay:ANNotation:TEXT "" to remotely clear the annotation text. (Two sets of quote marks without a space between them creates a NULL string.)Query Syntax:DISPlay:ANNotation:TEXT?The :DISPlay:ANNotation:TEXT? query returns the specified annotation text.When carriage returns are present in the annotation text, they are returned as the actual carriage return character (ASCII 0x0D).Return Format&lt;string&gt;&lt;NL&gt;&lt;string&gt; ::= quoted ASCII stringSee Also:DISPlay:ANNotation:DISPlay:ANNotation:COLor:DISPlay:ANNotation:BACKgroundIntroduction to :DISPlay Commands</c><c> :DISPlay:CLEar:DISPlay Commands Name:DISPlay:CLEar � Command Syntax:DISPlay:CLEarThe :DISPlay:CLEar command clears the display and resets all associated measurements. If the oscilloscope is stopped, all currently displayed data is erased. If the oscilloscope is running, all of the data for active channels and functions is erased; however, new data is displayed on the next acquisition.See AlsoIntroduction to :DISPlay Commands</c><c> :DISPlay:DATA:DISPlay Commands Name:DISPlay:DATA � Query Syntax:DISPlay:DATA? [&lt;format&gt;][,][&lt;palette&gt;]&lt;format&gt; ::= {BMP | BMP8bit | PNG}&lt;palette&gt; ::= {COLor | GRAYscale}The :DISPlay:DATA? query reads screen image data. You can choose 24-bit BMP, 8-bit BMP8bit, or 24-bit PNG formats in color or grayscale.If no format or palette option is specified, the screen image is returned in BMP, COLor format.Screen image data is returned in the IEEE-488.2 # binary block data format.Return Format&lt;display data&gt;&lt;NL&gt;&lt;display data&gt; ::= binary block data in IEEE-488.2 # format.See AlsoIntroduction to :DISPlay Commands:HARDcopy:INKSaver:PRINt*RCL (Recall)*SAV (Save):VIEWExample Code ' IMAGE_TRANSFER - In this example, we will query for the image data ' with ":DISPlay:DATA?", read the data, and then save it to a file. Dim byteData() As Byte myScope.IO.Timeout = 15000 myScope.WriteString ":DISPlay:DATA? BMP, COLOR" byteData = myScope.ReadIEEEBlock(BinaryType_UI1) ' Output display data to a file: strPath = "c:\scope\data\screen.bmp" ' Remove file if it exists. If Len(Dir(strPath)) Then Kill strPath End If Close #1 ' If #1 is open, close it. Open strPath For Binary Access Write Lock Write As #1 ' Open file for output. Put #1, , byteData ' Write data. Close #1 ' Close file. myScope.IO.Timeout = 5000See complete example programs at: Programming Examples</c><c> :DISPlay:LABList:DISPlay Commands Name:DISPlay:LABList � Command Syntax:DISPlay:LABList &lt;binary block data&gt;&lt;binary block&gt; ::= an ordered list of up to 75 labels, a maximum of 10 characters each, separated by newline characters.The :DISPlay:LABList command adds labels to the label list. Labels are added in alphabetical order.Labels that begin with the same alphabetic base string followed by decimal digits are considered duplicate labels. Duplicate labels are not added to the label list. For example, if label "A0" is in the list and you try to add a new label called "A123456789", the new label is not added.Query Syntax:DISPlay:LABList?The :DISPlay:LABList? query returns the label list.Return Format&lt;binary block&gt;&lt;NL&gt;&lt;binary block&gt; ::= an ordered list of up to 75 labels, a maximum of 10 characters each, separated by newline characters.See AlsoIntroduction to :DISPlay Commands:DISPlay:LABel:CHANnel&lt;n&gt;:LABel:DIGital&lt;d&gt;:LABel:BUS&lt;n&gt;:LABel</c><c> :DISPlay:LABel:DISPlay Commands Name:DISPlay:LABel � Command Syntax:DISPlay:LABel &lt;value&gt;&lt;value&gt; ::= {{1 | ON} | {0 | OFF}}The :DISPlay:LABel command turns the analog and digital channel labels on and off.Query Syntax:DISPlay:LABel?The :DISPlay:LABel? query returns the display mode of the analog and digital labels.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {0 | 1}See AlsoIntroduction to :DISPlay Commands:CHANnel&lt;n&gt;:LABelExample Code ' DISP_LABEL ' - Turns label names ON or OFF on the analyzer display. myScope.WriteString ":DISPlay:LABel ON" ' Turn on labels.See complete example programs at: Programming Examples</c><c> :DISPlay:PERSistence:DISPlay Commands Name:DISPlay:PERSistence � Command Syntax:DISPlay:PERSistence &lt;value&gt;&lt;value&gt; ::= {MINimum | INFinite | &lt;time&gt;}&lt;time&gt; ::= seconds in in NR3 format from 100E-3 to 60E0The :DISPlay:PERSistence command specifies the persistence setting:MINimum � indicates zero persistence.INFinite � indicates infinite persistence.&lt;time&gt; � for variable persistence, that is, you can specify how long acquisitions remain on the screen.Use the :DISPlay:CLEar command to erase points stored by persistence.Query Syntax:DISPlay:PERSistence?The :DISPlay:PERSistence? query returns the specified persistence value.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {MIN | INF | &lt;time&gt;}See AlsoIntroduction to :DISPlay Commands:DISPlay:CLEar</c><c> :DISPlay:VECTors:DISPlay Commands Name:DISPlay:VECTors � Command Syntax:DISPlay:VECTors &lt;vectors&gt;&lt;vectors&gt; ::= {1 | ON}The only legal value for the :DISPlay:VECTors command is ON (or 1). This specifies that lines are drawn between acquired data points on the screen.Query Syntax:DISPlay:VECTors?The :DISPlay:VECTors? query returns the vectors setting.Return Format&lt;vectors&gt;&lt;NL&gt;&lt;vectors&gt; ::= 1See AlsoIntroduction to :DISPlay Commands</c><c> :DVM:ARANge:DVM Commands Name:DVM:ARANge � Command Syntax:DVM:ARANge &lt;setting&gt;&lt;setting&gt; ::= {{OFF | 0} | {ON | 1}}If the selected digital voltmeter (DVM) source channel is not used in oscilloscope triggering, the :DVM:ARANge command turns the digital voltmeter's Auto Range capability on or off.When on, the DVM channel's vertical scale, vertical (ground level) position, and trigger (threshold voltage) level (used for the counter frequency measurement) are automatically adjusted.The Auto Range capability overrides attempted adjustments of the channel's vertical scale and position.When off, you can adjust the channel's vertical scale and position normally.Query Syntax:DVM:ARANge?The :DVM:ARANge? query returns a flag indicating whether the digital voltmeter's Auto Range capability is on or off.Return Format&lt;setting&gt;&lt;NL&gt;&lt;setting&gt; ::= {0 | 1}See Also:DVM:SOURce:DVM:ENABle:DVM:MODE</c><c> :DVM:ENABle:DVM Commands Name:DVM:ENABle � Command Syntax:DVM:ENABle &lt;setting&gt;&lt;setting&gt; ::= {{OFF | 0} | {ON | 1}}The :DVM:ENABle command turns the digital voltmeter (DVM) analysis feature on or off.Query Syntax:DVM:ENABle?The :DVM:ENABle? query returns a flag indicating whether the digital voltmeter (DVM) analysis feature is on or off.Return Format&lt;setting&gt;&lt;NL&gt;&lt;setting&gt; ::= {0 | 1}See Also:DVM:SOURce:DVM:MODE:DVM:ARANge</c><c> :DVM:FREQuency:DVM Commands Name:DVM:FREQuency � Query Syntax:DVM:FREQuency?The :DVM:FREQuency? query returns the displayed 5-digit frequency value that is displayed below the main DVM value.Return Format&lt;freq_value&gt;&lt;NL&gt;&lt;freq_value&gt; ::= floating-point number in NR3 formatSee Also:DVM:SOURce:DVM:ENABle:DVM:MODE:DVM:CURRent</c><c> :DVM:CURRent:DVM Commands Name:DVM:CURRent � Query Syntax:DVM:CURRent?The :DVM:CURRent? query returns the displayed 3-digit DVM value based on the current mode.Return Format&lt;dvm_value&gt;&lt;NL&gt;&lt;dvm_value&gt; ::= floating-point number in NR3 formatSee Also:DVM:SOURce:DVM:ENABle:DVM:MODE:DVM:FREQuency</c><c> :DVM:MODE:DVM Commands Name:DVM:MODE � Command Syntax:DVM:MODE &lt;dvm_mode&gt;&lt;dvm_mode&gt; ::= {ACRMs | DC | DCRMs | FREQuency}The :DVM:MODE command sets the digital voltmenter (DVM) mode:ACRMs � displays the root-mean-square value of the acquired data, with the DC component removed.DC � displays the DC value of the acquired data.DCRMs � displays the root-mean-square value of the acquired data.FREQuency � displays the frequency counter measurement.Query Syntax:DVM:MODE?The :DVM:MODE? query returns the selected DVM mode.Return Format&lt;dvm_mode&gt;&lt;NL&gt;&lt;dvm_mode&gt; ::= {ACRM | DC | DCRM | FREQ}See Also:DVM:ENABle:DVM:SOURce:DVM:ARANge:DVM:CURRent:DVM:FREQuency</c><c> :DVM:SOURce:DVM Commands Name:DVM:SOURce � Command Syntax:DVM:SOURce &lt;source&gt;&lt;source&gt; ::= {CHANnel&lt;n&gt;}&lt;n&gt; ::= 1-2 or 1-4 in NR1 formatThe :DVM:SOURce command sets the select the analog channel on which digital voltmeter (DVM) measurements are made.The selected channel does not have to be on (displaying a waveform) in order for DVM measurements to be made.Query Syntax:DVM:SOURce?The :DVM:SOURce? query returns the selected DVM input source.Return Format&lt;source&gt;&lt;NL&gt;&lt;source&gt; ::= {CHAN&lt;n&gt;}&lt;n&gt; ::= 1-2 or 1-4 in NR1 formatSee Also:DVM:ENABle:DVM:MODE:DVM:ARANge:DVM:CURRent:DVM:FREQuency</c><c>Introduction to :EXTernal Trigger CommandsThe EXTernal trigger subsystem commands control the input characteristics of the external trigger input. The probe factor, impedance, input range, input protection state, units, and bandwidth limit settings may all be queried. Depending on the instrument type, some settings may be changeable.Reporting the Setup. Use :EXTernal? to query setup information for the EXTernal subsystem.Return Format. The following is a sample response from the :EXTernal query. In this case, the query was issued following a *RST command.:EXT:BWL 0;RANG +8E+00;UNIT VOLT;PROB +1.000E+00</c><c> :EXTernal:BWLimit:EXTernal Trigger Commands Name:EXTernal:BWLimit � Command Syntax:EXTernal:BWLimit &lt;bwlimit&gt;&lt;bwlimit&gt; ::= {0 | OFF}The :EXTernal:BWLimit command is provided for product compatibility. The only legal value is 0 or OFF. Use the :TRIGger:HFReject command to limit bandwidth on the external trigger input.Query Syntax:EXTernal:BWLimit?The :EXTernal:BWLimit? query returns the current setting of the low-pass filter (always 0).Return Format&lt;bwlimit&gt;&lt;NL&gt;&lt;bwlimit&gt; ::= 0See AlsoIntroduction to :EXTernal Trigger CommandsIntroduction to :TRIGger Commands:TRIGger:HFReject</c><c> :EXTernal:PROBe:EXTernal Trigger Commands Name:EXTernal:PROBe � Command Syntax:EXTernal:PROBe &lt;attenuation&gt;&lt;attenuation&gt; ::= probe attenuation ratio in NR3 formatThe :EXTernal:PROBe command specifies the probe attenuation factor for the external trigger. The probe attenuation factor may be 0.1 to 10000. This command does not change the actual input sensitivity of the oscilloscope. It changes the reference constants for scaling the display factors and for setting trigger levels.If an AutoProbe probe is connected to the oscilloscope, the attenuation value cannot be changed from the sensed value. Attempting to set the oscilloscope to an attenuation value other than the sensed value produces an error.Query Syntax:EXTernal:PROBe?The :EXTernal:PROBe? query returns the current probe attenuation factor for the external trigger.Return Format&lt;attenuation&gt;&lt;NL&gt;&lt;attenuation&gt; ::= probe attenuation ratio in NR3 formatSee AlsoIntroduction to :EXTernal Trigger Commands:EXTernal:RANGeIntroduction to :TRIGger Commands:CHANnel&lt;n&gt;:PROBe</c><c> :EXTernal:RANGe:EXTernal Trigger Commands Name:EXTernal:RANGe � Command Syntax:EXTernal:RANGe &lt;range&gt;[&lt;suffix&gt;]&lt;range&gt; ::= vertical full-scale range value in NR3 format&lt;suffix&gt; ::= {V | mV}The :EXTernal:RANGe command is provided for product compatibility. When using 1:1 probe attenuation, the range can only be set to 8.0 V.If the probe attenuation is changed, the range value is multiplied by the probe attenuation factor.Query Syntax:EXTernal:RANGe?The :EXTernal:RANGe? query returns the current full-scale range setting for the external trigger.Return Format&lt;range_argument&gt;&lt;NL&gt;&lt;range_argument&gt; ::= external trigger range value in NR3 formatSee AlsoIntroduction to :EXTernal Trigger Commands:EXTernal:PROBeIntroduction to :TRIGger Commands</c><c> :EXTernal:UNITs:EXTernal Trigger Commands Name:EXTernal:UNITs � Command Syntax:EXTernal:UNITs &lt;units&gt;&lt;units&gt; ::= {VOLT | AMPere}The :EXTernal:UNITs command sets the measurement units for the probe connected to the external trigger input. Select VOLT for a voltage probe and select AMPere for a current probe. Measurement results, channel sensitivity, and trigger level will reflect the measurement units you select.Query Syntax:EXTernal:UNITs?The :CHANnel&lt;n&gt;:UNITs? query returns the current units setting for the external trigger.Return Format&lt;units&gt;&lt;NL&gt;&lt;units&gt; ::= {VOLT | AMP}See AlsoIntroduction to :EXTernal Trigger CommandsIntroduction to :TRIGger Commands:EXTernal:RANGe:EXTernal:PROBe:CHANnel&lt;n&gt;:UNITs</c><c>Introduction to :FUNCtion CommandsThe FUNCtion subsystem controls the math functions in the oscilloscope. Add, subtract, multiply, and FFT (Fast Fourier Transform) operations are available. These math operations only use the analog (vertical) channels.The SOURce1, DISPlay, RANGe, and OFFSet commands apply to any function.The SPAN, CENTer, VTYPe, and WINDow commands are only useful for FFT functions. When FFT is selected, the horizontal cursors change from time to frequency (Hz), and the vertical cursors change from volts to decibel (dB).Reporting the Setup. Use :FUNCtion? to query setup information for the FUNCtion subsystem.Return Format. The following is a sample response from the :FUNCtion? queries. In this case, the query was issued following a *RST command.:FUNC:OPER ADD;DISP 0;SOUR1 CHAN1;SOUR2 CHAN2;RANG +8.00E+00;OFFS +0.0E+00;:FUNC:GOFT:OPER ADD;SOUR1 CHAN1;SOUR2 CHAN2</c><c> :FUNCtion:DISPlay:FUNCtion Commands Name:FUNCtion:DISPlay � Command Syntax:FUNCtion:DISPlay &lt;display&gt;&lt;display&gt; ::= {{1 | ON} | {0 | OFF}}The :FUNCtion:DISPlay command turns the display of the function on or off. When ON is selected, the function performs as specified using the other FUNCtion commands. When OFF is selected, function is neither calculated nor displayed.Query Syntax:FUNCtion:DISPlay?The :FUNCtion:DISPlay? query returns whether the function display is on or off.Return Format&lt;display&gt;&lt;NL&gt;&lt;display&gt; ::= {1 | 0}See AlsoIntroduction to :FUNCtion Commands:VIEW:BLANk:STATus</c><c>Name:FUNCtion[:FFT]:CENTer � Command Syntax:FUNCtion[:FFT]:CENTer &lt;frequency&gt;&lt;frequency&gt; ::= the current center frequency in NR3 format. The range of legal values is from 0 Hz to 25 GHz.The :FUNCtion[:FFT]:CENTer command sets the center frequency when FFT (Fast Fourier Transform) is selected.Query Syntax:FUNCtion[:FFT]:CENTer?The :FUNCtion[:FFT]:CENTer? query returns the current center frequency in Hertz.Return Format&lt;frequency&gt;&lt;NL&gt;&lt;frequency&gt; ::= the current center frequency in NR3 format. The range of legal values is from 0 Hz to 25 GHz.After a *RST (Reset) or :AUToscale command, the values returned by the :FUNCtion[:FFT]:CENTer? and :FUNCtion:SPAN? queries depend on the current :TIMebase:RANGe value. Once you change either the :FUNCtion[:FFT]:CENTer or :FUNCtion:SPAN value, they no longer track the :TIMebase:RANGe value.See AlsoIntroduction to :FUNCtion Commands:FUNCtion[:FFT]:SPAN:TIMebase:RANGe:TIMebase:SCALe</c><c>Name:FUNCtion[:FFT]:SPAN � Command Syntax:FUNCtion[:FFT]:SPAN &lt;span&gt;&lt;span&gt; ::= the current frequency span in NR3 format. Legal values are 1 Hz to 100 GHz.If you set the frequency span to a value outside of the legal range, the step size is automatically set to the nearest legal value.The :FUNCtion[:FFT]:SPAN command sets the frequency span of the display (left graticule to right graticule) when FFT (Fast Fourier Transform) is selected.Query Syntax:FUNCtion[:FFT]:SPAN?The :FUNCtion[:FFT]:SPAN? query returns the current frequency span in Hertz.After a *RST (Reset) or :AUToscale command, the values returned by the :FUNCtion[:FFT]:CENTer? and :FUNCtion:SPAN? queries depend on the current :TIMebase:RANGe value. Once you change either the :FUNCtion[:FFT]:CENTer or :FUNCtion:SPAN value, they no longer track the :TIMebase:RANGe value.Return Format&lt;span&gt;&lt;NL&gt;&lt;span&gt; ::= the current frequency span in NR3 format. Legal values are 1 Hz to 100 GHz.See AlsoIntroduction to :FUNCtion Commands:FUNCtion[:FFT]:CENTer:TIMebase:RANGe:TIMebase:SCALe</c><c> :FUNCtion[:FFT]:VTYPe:FUNCtion Commands Name:FUNCtion[:FFT]:VTYPe � Command Syntax:FUNCtion[:FFT]:VTYPe &lt;units&gt;&lt;units&gt; ::= {DECibel | VRMS}The :FUNCtion[:FFT]:VTYPe command specifies FFT vertical units as DECibel or VRMS.Query Syntax:FUNCtion[:FFT]:VTYPe?The :FUNCtion[:FFT]:VTYPe? query returns the current FFT vertical units.Return Format&lt;units&gt;&lt;NL&gt;&lt;units&gt; ::= {DEC | VRMS}See AlsoIntroduction to :FUNCtion Commands:FUNCtion:OPERation</c><c>Name:FUNCtion[:FFT]:WINDow � Command Syntax:FUNCtion[:FFT]:WINDow &lt;window&gt;&lt;window&gt; ::= {RECTangular | HANNing | FLATtop | BHARris}The :FUNCtion[:FFT]:WINDow command allows the selection of four different windowing transforms or operations for the FFT (Fast Fourier Transform) function.The FFT operation assumes that the time record repeats. Unless an integral number of sampled waveform cycles exist in the record, a discontinuity is created between the end of one record and the beginning of the next. This discontinuity introduces additional frequency components about the peaks into the spectrum. This is referred to as leakage. To minimize leakage, windows that approach zero smoothly at the start and end of the record are employed as filters to the FFTs. Each window is useful for certain classes of input signals.RECTangular � useful for transient signals, and signals where there are an integral number of cycles in the time record.HANNing � useful for frequency resolution and general purpose use. It is good for resolving two frequencies that are close together, or for making frequency measurements. This is the default window.FLATtop � best for making accurate amplitude measurements of frequency peaks.BHARris (Blackman-Harris) � reduces time resolution compared to the rectangular window, but it improves the capacity to detect smaller impulses due to lower secondary lobes (provides minimal spectral leakage).Query Syntax:FUNCtion[:FFT]:WINDow?The :FUNCtion[:FFT]:WINDow? query returns the value of the window selected for the FFT function.Return Format&lt;window&gt;&lt;NL&gt;&lt;window&gt; ::= {RECT | HANN | FLAT | BHAR}See AlsoIntroduction to :FUNCtion Commands</c><c> :FUNCtion:GOFT:OPERation:FUNCtion Commands Name:FUNCtion:GOFT:OPERation � Command Syntax:FUNCtion:GOFT:OPERation &lt;operation&gt;&lt;operation&gt; ::= {ADD | SUBTract | MULTiply}The :FUNCtion:GOFT:OPERation command sets the math operation for the g(t) source that can be used as the input to the FFT function:ADD � Source1 + source2.SUBTract � Source1 - source2.MULTiply � Source1 * source2.The :FUNCtion:GOFT:SOURce1 and :FUNCtion:GOFT:SOURce2 commands are used to select source1 and source2.Query Syntax:FUNCtion:GOFT:OPERation?The :FUNCtion:GOFT:OPERation? query returns the current g(t) source operation setting.Return Format&lt;operation&gt;&lt;NL&gt;&lt;operation&gt; ::= {ADD | SUBT | MULT}See AlsoIntroduction to :FUNCtion Commands:FUNCtion:GOFT:SOURce1:FUNCtion:GOFT:SOURce2:FUNCtion:SOURce1</c><c> :FUNCtion:GOFT:SOURce1:FUNCtion Commands Name:FUNCtion:GOFT:SOURce1 � Command Syntax:FUNCtion:GOFT:SOURce1 &lt;value&gt;&lt;value&gt; ::= CHANnel&lt;n&gt;&lt;n&gt; ::= {1 | 2 | 3 | 4} for 4ch models&lt;n&gt; ::= {1 | 2} for 2ch modelsThe :FUNCtion:GOFT:SOURce1 command selects the first input channel for the g(t) source that can be used as the input to the FFT function.Query Syntax:FUNCtion:GOFT:SOURce1?The :FUNCtion:GOFT:SOURce1? query returns the current selection for the first input channel for the g(t) source.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= CHAN&lt;n&gt;&lt;n&gt; ::= {1 | 2 | 3 | 4} for the 4ch models&lt;n&gt; ::= {1 | 2} for the 2ch modelsSee AlsoIntroduction to :FUNCtion Commands:FUNCtion:GOFT:SOURce2:FUNCtion:GOFT:OPERation</c><c> :FUNCtion:GOFT:SOURce2:FUNCtion Commands Name:FUNCtion:GOFT:SOURce2 � Command Syntax:FUNCtion:GOFT:SOURce2 &lt;value&gt;&lt;value&gt; ::= CHANnel&lt;n&gt;&lt;n&gt; ::= {1 | 2 | 3 | 4} for 4ch models&lt;n&gt; ::= {1 | 2} for 2ch modelsThe :FUNCtion:GOFT:SOURce2 command selects the second input channel for the g(t) source that can be used as the input to the FFT function.Query Syntax:FUNCtion:GOFT:SOURce2?The :FUNCtion:GOFT:SOURce2? query returns the current selection for the second input channel for the g(t) source.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= CHAN&lt;n&gt;&lt;n&gt; ::= {1 | 2 | 3 | 4} for 4ch models&lt;n&gt; ::= {1 | 2} for 2ch modelsSee AlsoIntroduction to :FUNCtion Commands:FUNCtion:GOFT:SOURce1:FUNCtion:GOFT:OPERation</c><c> :FUNCtion:SOURce1:FUNCtion Commands Name:FUNCtion:SOURce1 � Command Syntax:FUNCtion:SOURce1 &lt;value&gt;&lt;value&gt; ::= {CHANnel&lt;n&gt; | GOFT}&lt;n&gt; ::= {1 | 2 | 3 | 4} for 4ch models&lt;n&gt; ::= {1 | 2} for 2ch modelsThe :FUNCtion:SOURce1 command is used for any :FUNCtion:OPERation selection (including the ADD, SUBTract, or MULTiply channel math operations and the FFT transform). This command selects the first source for channel math operations or the single source for the transforms.The GOFT parameter is only available for the FFT function. It lets you specify, as the function input source, the addition, subtraction, or multiplication of two channels. When GOFT is used, the g(t) source is specified by the :FUNCtion:GOFT:OPERation, :FUNCtion:GOFT:SOURce1, and :FUNCtion:GOFT:SOURce2 commands.Another shorthand notation for SOURce1 in this command/query (besides SOUR1) is SOUR.Query Syntax:FUNCtion:SOURce1?The :FUNCtion:SOURce1? query returns the current source1 for function operations.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {CHAN&lt;n&gt; | GOFT}&lt;n&gt; ::= {1 | 2 | 3 | 4} for 4ch models&lt;n&gt; ::= {1 | 2} for 2ch modelsSee AlsoIntroduction to :FUNCtion Commands:FUNCtion:OPERation:FUNCtion:GOFT:OPERation:FUNCtion:GOFT:SOURce1:FUNCtion:GOFT:SOURce2</c><c> :FUNCtion:OFFSet:FUNCtion Commands Name:FUNCtion:OFFSet � Command Syntax:FUNCtion:OFFSet &lt;offset&gt;&lt;offset&gt; ::= the value at center screen in NR3 format.The :FUNCtion:OFFSet command sets the voltage or vertical value represented at center screen for the selected function. The range of legal values is generally +/-10 times the current scale of the selected function, but will vary by function. If you set the offset to a value outside of the legal range, the offset value is automatically set to the nearest legal value.The :FUNCtion:OFFset command is equivalent to the :FUNCtion:REFerence command.Query Syntax:FUNCtion:OFFSet?The :FUNCtion:OFFSet? query outputs the current offset value for the selected function.Return Format&lt;offset&gt;&lt;NL&gt;&lt;offset&gt; ::= the value at center screen in NR3 format.See AlsoIntroduction to :FUNCtion Commands:FUNCtion:RANGe:FUNCtion:REFerence:FUNCtion:SCALe</c><c> :FUNCtion:OPERation:FUNCtion Commands Name:FUNCtion:OPERation � Command Syntax:FUNCtion:OPERation &lt;operation&gt;&lt;operation&gt; ::= {ADD | SUBTract | MULTiply | FFT}The :FUNCtion:OPERation command sets the desired waveform math operation:ADD � Source1 + source2.SUBTract � Source1 - source2.MULTiply � Source1 * source2.FFT � Fast Fourier Transform on the selected waveform source.When the operation is ADD, SUBTract, or MULTiply, the :FUNCtion:SOURce1 and :FUNCtion:SOURce2 commands are used to select source1 and source2. For FFT, the :FUNCtion:SOURce1 command selects the waveform source.Query Syntax:FUNCtion:OPERation?The :FUNCtion:OPERation? query returns the current operation for the selected function.Return Format&lt;operation&gt;&lt;NL&gt;&lt;operation&gt; ::= {ADD | SUBT | MULT | FFT}See AlsoIntroduction to :FUNCtion Commands:FUNCtion:SOURce1:FUNCtion:SOURce2</c><c> :FUNCtion:RANGe:FUNCtion Commands Name:FUNCtion:RANGe � Command Syntax:FUNCtion:RANGe &lt;range&gt;&lt;range&gt; ::= the full-scale vertical axis value in NR3 format.The :FUNCtion:RANGe command defines the full-scale vertical axis for the selected function.Query Syntax:FUNCtion:RANGe?The :FUNCtion:RANGe? query returns the current full-scale range value for the selected function.Return Format&lt;range&gt;&lt;NL&gt;&lt;range&gt; ::= the full-scale vertical axis value in NR3 format.See AlsoIntroduction to :FUNCtion Commands:FUNCtion:SCALe</c><c> :FUNCtion:SCALe:FUNCtion Commands Name:FUNCtion:SCALe � Command Syntax:FUNCtion:SCALe &lt;scale value&gt;[&lt;suffix&gt;]&lt;scale value&gt; ::= integer in NR1 format&lt;suffix&gt; ::= {V | dB}The :FUNCtion:SCALe command sets the vertical scale, or units per division, of the selected function. Legal values for the scale depend on the selected function.Query Syntax:FUNCtion:SCALe?The :FUNCtion:SCALe? query returns the current scale value for the selected function.Return Format&lt;scale value&gt;&lt;NL&gt;&lt;scale value&gt; ::= integer in NR1 formatSee AlsoIntroduction to :FUNCtion Commands:FUNCtion:RANGe</c><c> :FUNCtion:SOURce2:FUNCtion Commands Name:FUNCtion:SOURce2 � Command Syntax:FUNCtion:SOURce2 &lt;value&gt;&lt;value&gt; ::= {CHANnel&lt;n&gt; | NONE}&lt;n&gt; ::= {{1 | 2} | {3 | 4}} for 4ch models, depending on SOURce1 selection&lt;n&gt; ::= {1 | 2} for 2ch modelsThe :FUNCtion:SOURce2 command specifies the second source for math operations that have two sources (see the :FUNCtion:OPERation command), in other words, ADD, SUBTract, or MULTiply. (The :FUNCtion:SOURce1 command specifies the first source.)If CHANnel1 or CHANnel2 is selected for :FUNCtion:SOURce1, the SOURce2 selection can be CHANnel1 or CHANnel2. Likewise, if CHANnel3 or CHANnel4 is selected for :FUNCtion:SOURce1, the SOURce2 selection can be CHANnel3 or CHANnel4.The :FUNCtion:SOURce2 setting is not used when the :FUNCtion:OPERation is FFT (Fast Fourier Transform).Query Syntax:FUNCtion:SOURce2?The :FUNCtion:SOURce2? query returns the currently specified second source for math operations.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {CHAN&lt;n&gt; | NONE}&lt;n&gt; ::= {{1 | 2} | {3 | 4}} for 4ch models, depending on SOURce1 selection&lt;n&gt; ::= {1 | 2} for 2ch modelsSee AlsoIntroduction to :FUNCtion Commands:FUNCtion:OPERation:FUNCtion:SOURce1</c><c> :FUNCtion:REFerence:FUNCtion Commands Name:FUNCtion:REFerence � Command Syntax:FUNCtion:REFerence &lt;level&gt;&lt;level&gt; ::= the current reference level in NR3 format.The :FUNCtion:REFerence command sets the voltage or vertical value represented at center screen for the selected function. The range of legal values is generally +/-10 times the current scale of the selected function, but will vary by function. If you set the reference level to a value outside of the legal range, the level is automatically set to the nearest legal value.The FUNCtion:REFerence command is equivalent to the :FUNCtion:OFFSet command.Query Syntax:FUNCtion:REFerence?The :FUNCtion:REFerence? query outputs the current reference level value for the selected function.Return Format&lt;level&gt;&lt;NL&gt;&lt;level&gt; ::= the current reference level in NR3 format.See AlsoIntroduction to :FUNCtion Commands:FUNCtion:OFFSet:FUNCtion:RANGe:FUNCtion:SCALe</c><c>Introduction to :HARDcopy CommandsThe HARDcopy subsystem provides commands to set and query the selection of hardcopy device and formatting options such as inclusion of instrument settings (FACTors) and generation of formfeed (FFEed).:HARDC is an acceptable short form for :HARDcopy.Reporting the Setup. Use :HARDcopy? to query setup information for the HARDcopy subsystem.Return Format. The following is a sample response from the :HARDcopy? query. In this case, the query was issued following the *RST command.:HARD:APR "";AREA SCR;FACT 0;FFE 0;INKS 1;PAL NONE;LAY PORT</c><c> :HARDcopy:APRinter:HARDcopy Commands Name:HARDcopy:APRinter � Command Syntax:HARDcopy:APRinter &lt;active_printer&gt;&lt;active_printer&gt; ::= {&lt;index&gt; | &lt;name&gt;}&lt;index&gt; ::= integer index of printer in list&lt;name&gt; ::= name of printer in listThe :HARDcopy:APRinter command sets the active printer.Query Syntax:HARDcopy:APRinter?The :HARDcopy:APRinter? query returns the name of the active printer.Return Format&lt;name&gt;&lt;NL&gt;&lt;name&gt; ::= name of printer in listSee AlsoIntroduction to :HARDcopy Commands:HARDcopy:PRINter:LIST:HARDcopy:STARt</c><c> :HARDcopy:AREA:HARDcopy Commands Name:HARDcopy:AREA � Command Syntax:HARDcopy:AREA &lt;area&gt;&lt;area&gt; ::= SCReenThe :HARDcopy:AREA command controls what part of the display area is printed. Currently, the only legal choice is SCReen.Query Syntax:HARDcopy:AREA?The :HARDcopy:AREA? query returns the selected display area.Return Format&lt;area&gt;&lt;NL&gt;&lt;area&gt; ::= SCRSee AlsoIntroduction to :HARDcopy Commands:HARDcopy:STARt:HARDcopy:APRinter:HARDcopy:PRINter:LIST:HARDcopy:FACTors:HARDcopy:FFEed:HARDcopy:INKSaver:HARDcopy:LAYout:HARDcopy:PALette</c><c> :HARDcopy:FACTors:HARDcopy Commands Name:HARDcopy:FACTors � Command Syntax:HARDcopy:FACTors &lt;factors&gt;&lt;factors&gt; ::= {{OFF | 0} | {ON | 1}}The HARDcopy:FACTors command controls whether the scale factors are output on the hardcopy dump.Query Syntax:HARDcopy:FACTors?The :HARDcopy:FACTors? query returns a flag indicating whether oscilloscope instrument settings are output on the hardcopy.Return Format&lt;factors&gt;&lt;NL&gt;&lt;factors&gt; ::= {0 | 1}See AlsoIntroduction to :HARDcopy Commands:HARDcopy:STARt:HARDcopy:FFEed:HARDcopy:INKSaver:HARDcopy:LAYout:HARDcopy:PALette</c><c> :HARDcopy:FFEed:HARDcopy Commands Name:HARDcopy:FFEed � Command Syntax:HARDcopy:FFEed &lt;ffeed&gt;&lt;ffeed&gt; ::= {{OFF | 0} | {ON | 1}}The HARDcopy:FFEed command controls whether a formfeed is output between the screen image and factors of a hardcopy dump.Query Syntax:HARDcopy:FFEed?The :HARDcopy:FFEed? query returns a flag indicating whether a formfeed is output at the end of the hardcopy dump.Return Format&lt;ffeed&gt;&lt;NL&gt;&lt;ffeed&gt; ::= {0 | 1}See AlsoIntroduction to :HARDcopy Commands:HARDcopy:STARt:HARDcopy:FACTors:HARDcopy:INKSaver:HARDcopy:LAYout:HARDcopy:PALette</c><c> :HARDcopy:INKSaver:HARDcopy Commands Name:HARDcopy:INKSaver � Command Syntax:HARDcopy:INKSaver &lt;value&gt;&lt;value&gt; ::= {{OFF | 0} | {ON | 1}}The HARDcopy:INKSaver command controls whether the graticule colors are inverted or not.Query Syntax:HARDcopy:INKSaver?The :HARDcopy:INKSaver? query returns a flag indicating whether graticule colors are inverted or not.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {0 | 1}See AlsoIntroduction to :HARDcopy Commands:HARDcopy:STARt:HARDcopy:FACTors:HARDcopy:FFEed:HARDcopy:LAYout:HARDcopy:PALette</c><c> :HARDcopy:LAYout:HARDcopy Commands Name:HARDcopy:LAYout � Command Syntax:HARDcopy:LAYout &lt;layout&gt;&lt;layout&gt; ::= {LANDscape | PORTrait}The :HARDcopy:LAYout command sets the hardcopy layout mode.Query Syntax:HARDcopy:LAYout?The :HARDcopy:LAYout? query returns the selected hardcopy layout mode.Return Format&lt;layout&gt;&lt;NL&gt;&lt;layout&gt; ::= {LAND | PORT}See AlsoIntroduction to :HARDcopy Commands:HARDcopy:STARt:HARDcopy:FACTors:HARDcopy:PALette:HARDcopy:FFEed:HARDcopy:INKSaver</c><c> :HARDcopy:NETWork:ADDRess:HARDcopy Commands Name:HARDcopy:NETWork:ADDRess � Command Syntax:HARDcopy:NETWork:ADDRess &lt;address&gt;&lt;address&gt; ::= quoted ASCII stringThe :HARDcopy:NETWork:ADDRess command sets the address for a network printer slot. The address is the server/computer name and the printer's share name in the \\server\share format.The network printer slot is selected by the :HARDcopy:NETWork:SLOT command.To apply the entered address, use the :HARDcopy:NETWork:APPLy command.Query Syntax:HARDcopy:NETWork:ADDRess?The :HARDcopy:NETWork:ADDRess? query returns the specified address for the currently selected network printer slot.Return Format&lt;address&gt;&lt;NL&gt;&lt;address&gt; ::= quoted ASCII stringSee AlsoIntroduction to :HARDcopy Commands:HARDcopy:NETWork:SLOT:HARDcopy:NETWork:APPLy:HARDcopy:NETWork:DOMain:HARDcopy:NETWork:USERname:HARDcopy:NETWork:PASSword</c><c> :HARDcopy:NETWork:APPLy:HARDcopy Commands Name:HARDcopy:NETWork:APPLy � Command Syntax:HARDcopy:NETWork:APPLyThe :HARDcopy:NETWork:APPLy command applies the network printer settings and makes the printer connection.See AlsoIntroduction to :HARDcopy Commands:HARDcopy:NETWork:SLOT:HARDcopy:NETWork:ADDRess:HARDcopy:NETWork:DOMain:HARDcopy:NETWork:USERname:HARDcopy:NETWork:PASSword</c><c> :HARDcopy:NETWork:DOMain:HARDcopy Commands Name:HARDcopy:NETWork:DOMain � Command Syntax:HARDcopy:NETWork:DOMain &lt;domain&gt;&lt;domain&gt; ::= quoted ASCII stringThe :HARDcopy:NETWork:DOMain command sets the Windows network domain name.The domain name setting is a common setting for both network printer slots.Query Syntax:HARDcopy:NETWork:DOMain?The :HARDcopy:NETWork:DOMain? query returns the current Windows network domain name.Return Format&lt;domain&gt;&lt;NL&gt;&lt;domain&gt; ::= quoted ASCII stringSee AlsoIntroduction to :HARDcopy Commands:HARDcopy:NETWork:SLOT:HARDcopy:NETWork:APPLy:HARDcopy:NETWork:ADDRess:HARDcopy:NETWork:USERname:HARDcopy:NETWork:PASSword</c><c> :HARDcopy:NETWork:PASSword:HARDcopy Commands Name:HARDcopy:NETWork:PASSword � Command Syntax:HARDcopy:NETWork:PASSword &lt;password&gt;&lt;password&gt; ::= quoted ASCII stringThe :HARDcopy:NETWork:PASSword command sets the password for the specified Windows network domain and user name.The password setting is a common setting for both network printer slots.See AlsoIntroduction to :HARDcopy Commands:HARDcopy:NETWork:USERname:HARDcopy:NETWork:DOMain:HARDcopy:NETWork:SLOT:HARDcopy:NETWork:APPLy:HARDcopy:NETWork:ADDRess</c><c> :HARDcopy:NETWork:SLOT:HARDcopy Commands Name:HARDcopy:NETWork:SLOT � Command Syntax:HARDcopy:NETWork:SLOT &lt;slot&gt;&lt;slot&gt; ::= {NET0 | NET1}The :HARDcopy:NETWork:SLOT command selects the network printer slot used for the address and apply commands. There are two network printer slots to choose from.Query Syntax:HARDcopy:NETWork:SLOT?The :HARDcopy:NETWork:SLOT? query returns the currently selected network printer slot.Return Format&lt;slot&gt;&lt;NL&gt;&lt;slot&gt; ::= {NET0 | NET1}See AlsoIntroduction to :HARDcopy Commands:HARDcopy:NETWork:APPLy:HARDcopy:NETWork:ADDRess:HARDcopy:NETWork:DOMain:HARDcopy:NETWork:USERname:HARDcopy:NETWork:PASSword</c><c> :HARDcopy:NETWork:USERname:HARDcopy Commands Name:HARDcopy:NETWork:USERname � Command Syntax:HARDcopy:NETWork:USERname &lt;username&gt;&lt;username&gt; ::= quoted ASCII stringThe :HARDcopy:NETWork:USERname command sets the user name to use when connecting to the Windows network domain.The user name setting is a common setting for both network printer slots.Query Syntax:HARDcopy:NETWork:USERname?The :HARDcopy:NETWork:USERname? query returns the currently set user name.Return Format&lt;username&gt;&lt;NL&gt;&lt;username&gt; ::= quoted ASCII stringSee AlsoIntroduction to :HARDcopy Commands:HARDcopy:NETWork:DOMain:HARDcopy:NETWork:PASSword:HARDcopy:NETWork:SLOT:HARDcopy:NETWork:APPLy:HARDcopy:NETWork:ADDRess</c><c> :HARDcopy:PALette:HARDcopy Commands Name:HARDcopy:PALette � Command Syntax:HARDcopy:PALette &lt;palette&gt;&lt;palette&gt; ::= {COLor | GRAYscale | NONE}The :HARDcopy:PALette command sets the hardcopy palette color.The oscilloscope's print driver cannot print color images to color laser printers, so the COLor option is not available when connected to laser printers.Query Syntax:HARDcopy:PALette?The :HARDcopy:PALette? query returns the selected hardcopy palette color.Return Format&lt;palette&gt;&lt;NL&gt;&lt;palette&gt; ::= {COL | GRAY | NONE}See AlsoIntroduction to :HARDcopy Commands:HARDcopy:STARt:HARDcopy:FACTors:HARDcopy:LAYout:HARDcopy:FFEed:HARDcopy:INKSaver</c><c> :HARDcopy:PRINter:LIST:HARDcopy Commands Name:HARDcopy:PRINter:LIST � Query Syntax:HARDcopy:PRINter:LIST?The :HARDcopy:PRINter:LIST? query returns a list of available printers. The list can be empty.Return Format&lt;list&gt;&lt;NL&gt;&lt;list&gt; ::= [&lt;printer_spec&gt;] ... [printer_spec&gt;]&lt;printer_spec&gt; ::= "&lt;index&gt;,&lt;active&gt;,&lt;name&gt;;"&lt;index&gt; ::= integer index of printer&lt;active&gt; ::= {Y | N}&lt;name&gt; ::= name of printer (for example "DESKJET 950C")See AlsoIntroduction to :HARDcopy Commands:HARDcopy:APRinter:HARDcopy:STARt</c><c> :HARDcopy:STARt:HARDcopy Commands Name:HARDcopy:STARt � Command Syntax:HARDcopy:STARtThe :HARDcopy:STARt command starts a print job.See AlsoIntroduction to :HARDcopy Commands:HARDcopy:APRinter:HARDcopy:PRINter:LIST:HARDcopy:FACTors:HARDcopy:FFEed:HARDcopy:INKSaver:HARDcopy:LAYout:HARDcopy:PALette</c><c> :LISTer:DATA:LISTer Commands Name:LISTer:DATA � Query Syntax:LISTer:DATA?The :LISTer:DATA? query returns the lister data.Return Format&lt;binary block&gt;&lt;NL&gt;&lt;binary_block&gt; ::= comma-separated data with newlines at the end of each rowSee AlsoIntroduction to :LISTer Commands:LISTer:DISPlayDefinite-Length Block Response Data</c><c> :LISTer:DISPlay:LISTer Commands Name:LISTer:DISPlay � Command Syntax:LISTer:DISPlay &lt;value&gt;&lt;value&gt; ::= {{OFF | 0} | {SBUS1 | ON | 1} | ALL}The :LISTer:DISPlay command configures which of the serial buses to display in the Lister, or whether the Lister is off. "ON" or "1" is the same as "SBUS1".When set to "ALL", the decode information for different buses is interleaved in time.Serial bus decode must be on before it can be displayed in the Lister.Query Syntax:LISTer:DISPlay?The :LISTer:DISPlay? query returns the Lister display setting.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {OFF | SBUS1 | ALL}See AlsoIntroduction to :LISTer Commands:SBUS&lt;n&gt;:DISPlay:LISTer:DATA</c><c> :LISTer:REFerence:LISTer Commands Name:LISTer:REFerence � Command Syntax:LISTer:REFerence &lt;time_ref&gt;&lt;time_ref&gt; ::= {TRIGger | PREVious}The :LISTer:REFerence command selects whether the time value for a Lister row is relative to the trigger ot the previous Lister row.Query Syntax:LISTer:REFerence?The :LISTer:REFerence? query returns the Lister time reference setting.Return Format&lt;time_ref&gt;&lt;NL&gt;&lt;time_ref&gt; ::= {TRIGger | PREVious}See AlsoIntroduction to :LISTer Commands:SBUS&lt;n&gt;:DISPlay:LISTer:DATA:LISTer:DISPlay</c><c>Introduction to :MARKer CommandsThe MARKer subsystem commands set and query the settings of X-axis markers (X1 and X2 cursors) and the Y-axis markers (Y1 and Y2 cursors). You can set and query the marker mode and source, the position of the X and Y cursors, and query delta X and delta Y cursor values.Reporting the Setup. Use :MARKer? to query setup information for the MARKer subsystem.Return Format. The following is a sample response from the :MARKer? query. In this case, the query was issued following a *RST and ":MARKer:MODE MANual" command.:MARK:X1Y1 CHAN1;X2Y2 CHAN1;MODE MAN</c><c> :MARKer:MODE:MARKer Commands Name:MARKer:MODE � Command Syntax:MARKer:MODE &lt;mode&gt;&lt;mode&gt; ::= {OFF | MEASurement | MANual | WAVeform}The :MARKer:MODE command sets the cursors mode:OFF � removes the cursor information from the display.MANual � enables manual placement of the X and Y cursors.If the front-panel cursors are off, or are set to the front-panel Hex or Binary mode, setting :MARKer:MODE MANual will put the cursors in the front-panel Normal mode.MEASurement � cursors track the most recent measurement.Setting the mode to MEASurement sets the marker sources (:MARKer:X1Y1source and :MARKer:X2Y2source) to the measurement source (:MEASure:SOURce). Setting the measurement source remotely always sets the marker sources.WAVeform � the Y1 cursor tracks the voltage value at the X1 cursor of the waveform specified by the X1Y1source, and the Y2 cursor does the same for the X2 cursor and its X2Y2source.Query Syntax:MARKer:MODE?The :MARKer:MODE? query returns the current cursors mode.Return Format&lt;mode&gt;&lt;NL&gt;&lt;mode&gt; ::= {OFF | MEAS | MAN | WAV}See AlsoIntroduction to :MARKer Commands:MARKer:X1Y1source:MARKer:X2Y2source:MEASure:SOURce:MARKer:X1Position:MARKer:X2Position:MARKer:Y1Position:MARKer:Y2Position</c><c> :MARKer:X1Position:MARKer Commands Name:MARKer:X1Position � Command Syntax:MARKer:X1Position &lt;position&gt; [suffix]&lt;position&gt; ::= X1 cursor position in NR3 format&lt;suffix&gt; ::= {s | ms | us | ns | ps | Hz | kHz | MHz}The :MARKer:X1Position command:Sets :MARKer:MODE to MANual if it is not currently set to WAVeform (see :MARKer:MODE).Sets the X1 cursor position to the specified value.X cursor units are set by the :MARKer:XUNits command.Query Syntax:MARKer:X1Position?The :MARKer:X1Position? query returns the current X1 cursor position. This is functionally equivalent to the obsolete :MEASure:TSTArt command/query.If the front-panel cursors are off, the marker position values are not defined and an error is generated. Make sure to set :MARKer:MODE to MANual or WAVeform to put the cursors in the front-panel Normal mode.Return Format&lt;position&gt;&lt;NL&gt;&lt;position&gt; ::= X1 cursor position in NR3 formatSee AlsoIntroduction to :MARKer Commands:MARKer:MODE:MARKer:X2Position:MARKer:X1Y1source:MARKer:X2Y2source:MARKer:XUNits:MEASure:TSTArt</c><c> :MARKer:X1Y1source:MARKer Commands Name:MARKer:X1Y1source � Command Syntax:MARKer:X1Y1source &lt;source&gt;&lt;source&gt; ::= {CHANnel&lt;n&gt; | FUNCtion | MATH | WMEMory&lt;r&gt;}&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;r&gt; ::= {1 | 2}The :MARKer:X1Y1source command sets the source for the cursors. The channel you specify must be enabled for cursors to be displayed. If the channel or function is not on, an error message is issued.If the marker mode is not currently WAVeform (see :MARKer:MODE):Sending a :MARKer:X1Y1source command will put the cursors in the MANual mode.Setting the source for one pair of markers (for example, X1Y1) sets the source for the other (for example, X2Y2).If the marker mode is currently WAVeform, the X1Y1 source can be set separate from the X2Y2 source.If :MARKer:MODE is set to OFF or MANual, setting :MEASure:SOURce to CHANnel&lt;n&gt;, FUNCtion, MATH, or WMEMory&lt;r&gt; will also set :MARKer:X1Y1source and :MARKer:X2Y2source to this value.MATH is an alias for FUNCtion. The query will return FUNC if the source is FUNCtion or MATH.Query Syntax:MARKer:X1Y1source?The :MARKer:X1Y1source? query returns the current source for the cursors. If all channels are off or if :MARKer:MODE is set to OFF, the query returns NONE.Return Format&lt;source&gt;&lt;NL&gt;&lt;source&gt; ::= {CHAN&lt;n&gt; | FUNC | WMEM&lt;r&gt; | NONE}See AlsoIntroduction to :MARKer Commands:MARKer:MODE:MARKer:X2Y2source:MEASure:SOURce</c><c> :MARKer:X2Y2source:MARKer Commands Name:MARKer:X2Y2source � Command Syntax:MARKer:X2Y2source &lt;source&gt;&lt;source&gt; ::= {CHANnel&lt;n&gt; | FUNCtion | MATH | WMEMory&lt;r&gt;}&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;r&gt; ::= {1 | 2}The :MARKer:X2Y2source command sets the source for the cursors. The channel you specify must be enabled for cursors to be displayed. If the channel or function is not on, an error message is issued.If the marker mode is not currently WAVeform (see :MARKer:MODE):Sending a :MARKer:X2Y2source command will put the cursors in the MANual mode.Setting the source for one pair of markers (for example, X2Y2) sets the source for the other (for example, X1Y1).If the marker mode is currently WAVeform, the X2Y2 source can be set separate from the X1Y1 source.If :MARKer:MODE is set to OFF or MANual, setting :MEASure:SOURce to CHANnel&lt;n&gt;, FUNCtion, MATH, or WMEMory&lt;r&gt; will also set :MARKer:X1Y1source and :MARKer:X2Y2source to this value.MATH is an alias for FUNCtion. The query will return FUNC if the source is FUNCtion or MATH.Query Syntax:MARKer:X2Y2source?The :MARKer:X2Y2source? query returns the current source for the cursors. If all channels are off or if :MARKer:MODE is set to OFF, the query returns NONE.Return Format&lt;source&gt;&lt;NL&gt;&lt;source&gt; ::= {CHAN&lt;n&gt; | FUNC | WMEM&lt;r&gt; | NONE}See AlsoIntroduction to :MARKer Commands:MARKer:MODE:MARKer:X1Y1source:MEASure:SOURce</c><c> :MARKer:XDELta:MARKer Commands Name:MARKer:XDELta � Query Syntax:MARKer:XDELta?The MARKer:XDELta? query returns the value difference between the current X1 and X2 cursor positions.Xdelta = (Value at X2 cursor) - (Value at X1 cursor)X cursor units are set by the :MARKer:XUNits command.If the front-panel cursors are off, the marker position values are not defined. Make sure to set :MARKer:MODE to MANual or WAVeform to put the cursors in the front-panel Normal mode.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= difference value in NR3 format.See AlsoIntroduction to :MARKer Commands:MARKer:MODE:MARKer:X1Position:MARKer:X2Position:MARKer:X1Y1source:MARKer:X2Y2source:MARKer:XUNits</c><c> :MARKer:XUNits:MARKer Commands Name:MARKer:XUNits � Command Syntax:MARKer:XUNits &lt;units&gt;&lt;units&gt; ::= {SEConds | HERTz | DEGRees | PERCent}The :MARKer:XUNits command sets the X cursors units:SEConds � for making time measurements.HERTz � for making frequency measurements.DEGRees � for making phase measurements. Use the :MARKer:XUNits:USE command to set the current X1 location as 0 degrees and the current X2 location as 360 degrees.PERCent � for making ratio measurements. Use the :MARKer:XUNits:USE command to set the current X1 location as 0 percent and the current X2 location as 100 percent.Changing X units affects the input and output values of the :MARKer:X1Position, :MARKer:X2Position, and :MARKer:XDELta commands/queries.Query Syntax:MARKer:XUNits?The :MARKer:XUNits? query returns the current X cursors units.Return Format&lt;units&gt;&lt;NL&gt;&lt;units&gt; ::= {SEC | HERT | DEGR | PERC}See AlsoIntroduction to :MARKer Commands:MARKer:XUNits:USE:MARKer:X1Y1source:MARKer:X2Y2source:MEASure:SOURce:MARKer:X1Position:MARKer:X2Position</c><c> :MARKer:XUNits:USE:MARKer Commands Name:MARKer:XUNits:USE � Command Syntax:MARKer:XUNits:USEWhen DEGRees is selected for :MARKer:XUNits, the :MARKer:XUNits:USE command sets the current X1 location as 0 degrees and the current X2 location as 360 degrees.When PERCent is selected for :MARKer:XUNits, the :MARKer:XUNits:USE command sets the current X1 location as 0 percent and the current X2 location as 100 percent.Once the 0 and 360 degree or 0 and 100 percent locations are set, inputs to and outputs from the :MARKer:X1Position, :MARKer:X2Position, and :MARKer:XDELta commands/queries are relative to the set locations.See AlsoIntroduction to :MARKer Commands:MARKer:XUNits:MARKer:X1Y1source:MARKer:X2Y2source:MEASure:SOURce:MARKer:X1Position:MARKer:X2Position:MARKer:XDELta</c><c> :MARKer:Y1Position:MARKer Commands Name:MARKer:Y1Position � Command Syntax:MARKer:Y1Position &lt;position&gt; [suffix]&lt;position&gt; ::= Y1 cursor position in NR3 format&lt;suffix&gt; ::= {mV | V | dB}If the :MARKer:MODE is not currently set to WAVeform (see :MARKer:MODE), the :MARKer:Y1Position command:Sets :MARKer:MODE to MANual.Sets the Y1 cursor position to the specified value.Y cursor units are set by the :MARKer:YUNits command.When the :MARKer:MODE is set to WAVeform, Y positions cannot be set.Query Syntax:MARKer:Y1Position?The :MARKer:Y1Position? query returns current Y1 cursor position. This is functionally equivalent to the obsolete :MEASure:VSTArt command/query.If the front-panel cursors are off or are set to Binary or Hex Mode, the marker position values are not defined and an error is generated. Make sure to set :MARKer:MODE to MANual or WAVeform to put the cursors in the front-panel Normal mode.Return Format&lt;position&gt;&lt;NL&gt;&lt;position&gt; ::= Y1 cursor position in NR3 formatSee AlsoIntroduction to :MARKer Commands:MARKer:MODE:MARKer:X1Y1source:MARKer:X2Y2source:MARKer:Y2Position:MARKer:YUNits:MEASure:VSTArt</c><c> :MARKer:YUNits:MARKer Commands Name:MARKer:YUNits � Command Syntax:MARKer:YUNits &lt;units&gt;&lt;units&gt; ::= {BASE | PERCent}The :MARKer:YUNits command sets the Y cursors units:BASE � for making measurements in the units associated with the cursors source.PERCent � for making ratio measurements. Use the :MARKer:YUNits:USE command to set the current Y1 location as 0 percent and the current Y2 location as 100 percent.Changing Y units affects the input and output values of the :MARKer:Y1Position, :MARKer:Y2Position, and :MARKer:YDELta commands/queries.Query Syntax:MARKer:YUNits?The :MARKer:YUNits? query returns the current Y cursors units.Return Format&lt;units&gt;&lt;NL&gt;&lt;units&gt; ::= {BASE | PERC}See AlsoIntroduction to :MARKer Commands:MARKer:YUNits:USE:MARKer:X1Y1source:MARKer:X2Y2source:MEASure:SOURce:MARKer:Y1Position:MARKer:Y2Position:MARKer:YDELta</c><c> :MARKer:YUNits:USE:MARKer Commands Name:MARKer:YUNits:USE � Command Syntax:MARKer:YUNits:USEWhen PERCent is selected for :MARKer:YUNits, the :MARKer:YUNits:USE command sets the current Y1 location as 0 percent and the current Y2 location as 100 percent.Once the 0 and 100 percent locations are set, inputs to and outputs from the :MARKer:Y1Position, :MARKer:Y2Position, and :MARKer:YDELta commands/queries are relative to the set locations.See AlsoIntroduction to :MARKer Commands:MARKer:YUNits:MARKer:X1Y1source:MARKer:X2Y2source:MEASure:SOURce:MARKer:Y1Position:MARKer:Y2Position:MARKer:YDELta</c><c> :MARKer:X2Position:MARKer Commands Name:MARKer:X2Position � Command Syntax:MARKer:X2Position &lt;position&gt; [suffix]&lt;position&gt; ::= X2 cursor position in NR3 format&lt;suffix&gt; ::= {s | ms | us | ns | ps | Hz | kHz | MHz}The :MARKer:X2Position command:Sets :MARKer:MODE to MANual if it is not currently set to WAVeform (see :MARKer:MODE).Sets the X2 cursor position to the specified value.X cursor units are set by the :MARKer:XUNits command.Query Syntax:MARKer:X2Position?The :MARKer:X2Position? query returns current X2 cursor position. This is functionally equivalent to the obsolete :MEASure:TSTOp command/query.If the front-panel cursors are off, the marker position values are not defined and an error is generated. Make sure to set :MARKer:MODE to MANual or WAVeform to put the cursors in the front-panel Normal mode.Return Format&lt;position&gt;&lt;NL&gt;&lt;position&gt; ::= X2 cursor position in NR3 formatSee AlsoIntroduction to :MARKer Commands:MARKer:MODE:MARKer:X1Position:MARKer:X2Y2source:MARKer:XUNits:MEASure:TSTOp</c><c> :MARKer:Y2Position:MARKer Commands Name:MARKer:Y2Position � Command Syntax:MARKer:Y2Position &lt;position&gt; [suffix]&lt;position&gt; ::= Y2 cursor position in NR3 format&lt;suffix&gt; ::= {mV | V | dB}If the :MARKer:MODE is not currently set to WAVeform (see :MARKer:MODE), the :MARKer:Y1Position command:Sets :MARKer:MODE to MANual.Sets the Y2 cursor position to the specified value.Y cursor units are set by the :MARKer:YUNits command.When the :MARKer:MODE is set to WAVeform, Y positions cannot be set.Query Syntax:MARKer:Y2Position?The :MARKer:Y2Position? query returns current Y2 cursor position. This is functionally equivalent to the obsolete :MEASure:VSTOp command/query.If the front-panel cursors are off or are set to Binary or Hex Mode, the marker position values are not defined and an error is generated. Make sure to set :MARKer:MODE to MANual or WAVeform to put the cursors in the front-panel Normal mode.Return Format&lt;position&gt;&lt;NL&gt;&lt;position&gt; ::= Y2 cursor position in NR3 formatSee AlsoIntroduction to :MARKer Commands:MARKer:MODE:MARKer:X1Y1source:MARKer:X2Y2source:MARKer:Y1Position:MARKer:YUNits:MEASure:VSTOp</c><c> :MARKer:YDELta:MARKer Commands Name:MARKer:YDELta � Query Syntax:MARKer:YDELta?The :MARKer:YDELta? query returns the value difference between the current Y1 and Y2 cursor positions.Ydelta = (Value at Y2 cursor) - (Value at Y1 cursor)If the front-panel cursors are off or are set to Binary or Hex Mode, the marker position values are not defined. Make sure to set :MARKer:MODE to MANual or WAVeform to put the cursors in the front-panel Normal mode.Y cursor units are set by the :MARKer:YUNits command.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= difference value in NR3 formatSee AlsoIntroduction to :MARKer Commands:MARKer:MODE:MARKer:X1Y1source:MARKer:X2Y2source:MARKer:Y1Position:MARKer:Y2Position:MARKer:YUNits</c><c>Introduction to :MEASure CommandsThe commands in the MEASure subsystem are used to make parametric measurements on displayed waveforms.Measurement Setup. To make a measurement, the portion of the waveform required for that measurement must be displayed on the oscilloscope screen.Measurement TypePortion of waveform that must be displayedperiod, duty cycle, or frequencyat least one complete cyclepulse widththe entire pulserise timerising edge, top and bottom of pulsefall timefalling edge, top and bottom of pulseMeasurement Error. If a measurement cannot be made (typically because the proper portion of the waveform is not displayed), the value +9.9E+37 is returned for that measurement.Making Measurements. If more than one waveform, edge, or pulse is displayed, time measurements are made on the portion of the displayed waveform closest to the trigger reference (left, center, or right).When making measurements in the zoomed (delayed) time base mode (:TIMebase:MODE WINDow), the oscilloscope will attempt to make the measurement inside the zoomed sweep window. If the measurement is an average and there are not three edges, the oscilloscope will revert to the mode of making the measurement at the start of the main sweep.When the command form is used, the measurement result is displayed on the instrument. When the query form of these measurements is used, the measurement is made one time, and the measurement result is returned over the bus.Measurements are made on the displayed waveforms specified by the :MEASure:SOURce command. The MATH source is an alias for the FUNCtion source.Not all measurements are available on the digital channels or FFT (Fast Fourier Transform).Reporting the Setup. Use the :MEASure? query to obtain setup information for the MEASure subsystem. (Currently, this is only :MEASure:SOURce.)Return Format. The following is a sample response from the :MEASure? query. In this case, the query was issued following a *RST command.:MEAS:SOUR CHAN1,CHAN2;STAT ON</c><c> :MEASure:ALL:MEASure Commands Name:MEASure:ALL � Command Syntax:MEASure:ALLThis command installs a Snapshot All measurement on the screen.See AlsoIntroduction to :MEASure Commands</c><c> :MEASure:CLEar:MEASure Commands Name:MEASure:CLEar � Command Syntax:MEASure:CLEarThis command clears all selected measurements and markers from the screen.See AlsoIntroduction to :MEASure Commands</c><c> :MEASure:DEFine:MEASure Commands Name:MEASure:DEFine � Command Syntax:MEASure:DEFine &lt;meas_spec&gt;&lt;meas_spec&gt; ::= {DELay | THResholds}The :MEASure:DEFine command sets up the definition for measurements by specifying the delta time or threshold values. Changing these values may affect the results of other measure commands. The table below identifies which measurement results that can be affected by redefining the DELay specification or the THResholds values. For example, changing the THResholds definition from the default 10%, 50%, and 90% values may change the returned measurement result.MEASure CommandDELayTHResholdsDUTYcycle xDELayxxFALLtime xFREQuency xNWIDth xOVERshoot xPERiod xPHASe xPREShoot xPWIDth xRISetime xVAVerage xVRMS x:MEASure:DEFine DELay Command Syntax:MEASure:DEFine DELay,&lt;delay spec&gt;&lt;delay spec&gt; ::= &lt;edge_spec1&gt;,&lt;edge_spec2&gt;&lt;edge_spec1&gt; ::= [&lt;slope&gt;]&lt;occurrence&gt;&lt;edge_spec2&gt; ::= [&lt;slope&gt;]&lt;occurrence&gt;&lt;slope&gt; ::= {+ | -}&lt;occurrence&gt; ::= integerThis command defines the behavior of the :MEASure:DELay? query by specifying the start and stop edge to be used. &lt;edge_spec1&gt; specifies the slope and edge number on source1. &lt;edge_spec2&gt; specifies the slope and edge number on source2. The measurement is taken as:delay = t(&lt;edge_spec2&gt;) - t(&lt;edge_spec1&gt;)The :MEASure:DELay command and the front-panel delay measurement use an auto-edge selection method to determine the actual edge used for the measurement. The :MEASure:DEFine command has no effect on these delay measurements. The edges specified by the :MEASure:DEFine command only define the edges used by the :MEASure:DELay? query.:MEASure:DEFine THResholds Command Syntax:MEASure:DEFine THResholds,&lt;threshold spec&gt;&lt;threshold spec&gt; ::= {STANdard} | {&lt;threshold mode&gt;,&lt;upper&gt;,&lt;middle&gt;,&lt;lower&gt;}&lt;threshold mode&gt; ::= {PERCent | ABSolute}for &lt;threshold mode&gt; = PERCent:&lt;upper&gt;, &lt;middle&gt;, &lt;lower&gt; ::= A number specifying the upper, middle, and lower threshold percentage values between Vbase and Vtop in NR3 format.for &lt;threshold mode&gt; = ABSolute:&lt;upper&gt;, &lt;middle&gt;, &lt;lower&gt; ::= A number specifying the upper, middle, and lower threshold absolute values in NR3 format.STANdard threshold specification sets the lower, middle, and upper measurement thresholds to 10%, 50%, and 90% values between Vbase and Vtop.Threshold mode PERCent sets the measurement thresholds to any user-defined percentages between 5% and 95% of values between Vbase and Vtop.Threshold mode ABSolute sets the measurement thresholds to absolute values. ABSolute thresholds are dependent on channel scaling (:CHANnel&lt;n&gt;:RANGe or :CHANnel&lt;n&gt;:SCALe:CHANnel&lt;n&gt;:SCALe), probe attenuation (:CHANnel&lt;n&gt;:PROBe), and probe units (:CHANnel&lt;n&gt;:UNITs). Always set these values first before setting ABSolute thresholds.Query Syntax:MEASure:DEFine? &lt;meas_spec&gt;&lt;meas_spec&gt; ::= {DELay | THResholds}The :MEASure:DEFine? query returns the current edge specification for the delay measurements setup or the current specification for the thresholds setup.Return Formatfor &lt;meas_spec&gt; = DELay:{ &lt;edge_spec1&gt; | &lt;edge_spec2&gt; | &lt;edge_spec1&gt;,&lt;edge_spec2&gt;} &lt;NL&gt;for &lt;meas_spec&gt; = THResholds and &lt;threshold mode&gt; = PERCent:THR,PERC,&lt;upper&gt;,&lt;middle&gt;,&lt;lower&gt;&lt;NL&gt;&lt;upper&gt;, &lt;middle&gt;, &lt;lower&gt; ::= A number specifying the upper, middle, and lower threshold percentage values between Vbase and Vtop in NR3 format.for &lt;meas_spec&gt; = THResholds and &lt;threshold mode&gt; = ABSolute:THR,ABS,&lt;upper&gt;,&lt;middle&gt;,&lt;lower&gt;&lt;NL&gt;&lt;upper&gt;, &lt;middle&gt;, &lt;lower&gt; ::= A number specifying the upper, middle, and lower threshold voltages in NR3 format.for &lt;threshold spec&gt; = STANdard:THR,PERC,+90.0,+50.0,+10.0See AlsoIntroduction to :MEASure Commands:MEASure:DELay:MEASure:SOURce:CHANnel&lt;n&gt;:RANGe:CHANnel&lt;n&gt;:SCALe:CHANnel&lt;n&gt;:PROBe:CHANnel&lt;n&gt;:UNITs</c><c> :MEASure:DELay:MEASure Commands Name:MEASure:DELay � Command Syntax:MEASure:DELay [&lt;source1&gt;][,&lt;source2&gt;]&lt;source1&gt;, &lt;source2&gt; ::= {CHANnel&lt;n&gt; | FUNCtion | MATH | WMEMory&lt;r&gt;}&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;r&gt; ::= 1-2 in NR1 formatThe :MEASure:DELay command places the instrument in the continuous measurement mode and starts a delay measurement.The measurement is taken as:delay = t(&lt;edge spec 2&gt;) - t(&lt;edge spec 1&gt;)where the &lt;edge spec&gt; definitions are set by the :MEASure:DEFine commandThe :MEASure:DELay command and the front-panel delay measurement differ from the :MEASure:DELay? query.The delay command or front-panel measurement run the delay measurement in auto-edge select mode. In this mode, you can select the edge polarity, but the instrument will select the edges that will make the best possible delay measurement. The source1 edge chosen will be the edge that meets the polarity specified and is closest to the trigger reference point. The source2 edge selected will be that edge of the specified polarity that gives the first of the following criteria:The smallest positive delay value that is less than source1 period.The smallest negative delay that is less than source1 period.The smallest absolute value of delay.The :MEASure:DELay? query will make the measurement using the edges specified by the :MEASure:DEFine command.Query Syntax:MEASure:DELay? [&lt;source1&gt;][,&lt;source2&gt;]The :MEASure:DELay? query measures and returns the delay between source1 and source2. The delay measurement is made from the user-defined slope and edge count of the signal connected to source1, to the defined slope and edge count of the signal connected to source2. Delay measurement slope and edge parameters are selected using the :MEASure:DEFine command.Also in the :MEASure:DEFine command, you can set upper, middle, and lower threshold values. It is the middle threshold value that is used when performing the delay query. The standard upper, middle, and lower measurement thresholds are 90%, 50%, and 10% values between Vbase and Vtop. If you want to move the delay measurement point nearer to Vtop or Vbase, you must change the threshold values with the :MEASure:DEFine THResholds command.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= floating-point number delay time in seconds in NR3 formatSee AlsoIntroduction to :MEASure Commands:MEASure:DEFine:MEASure:PHASe</c><c> :MEASure:SHOW:MEASure Commands Name:MEASure:SHOW � Command Syntax:MEASure:SHOW &lt;show&gt;&lt;show&gt; ::= {1 | ON}The :MEASure:SHOW command enables markers for tracking measurements on the display. This feature is always on.Query Syntax:MEASure:SHOW?The :MEASure:SHOW? query returns the current state of the markers.Return Format&lt;show&gt;&lt;NL&gt;&lt;show&gt; ::= 1See AlsoIntroduction to :MEASure Commands</c><c> :MEASure:SOURce:MEASure Commands Name:MEASure:SOURce � Command Syntax:MEASure:SOURce &lt;source1&gt;[,&lt;source2&gt;]&lt;source1&gt;,&lt;source2&gt; ::= {&lt;digital channels&gt; | CHANnel&lt;n&gt; | FUNCtion | MATH | WMEMory&lt;r&gt; | EXTernal}&lt;digital channels&gt; ::= DIGital&lt;d&gt; for the MSO models&lt;n&gt; ::= 1 to (# of analog channels) in NR1 format&lt;r&gt; ::= 1-2 in NR1 format&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 formatThe :MEASure:SOURce command sets the default sources for measurements. The specified sources are used as the sources for the MEASure subsystem commands if the sources are not explicitly set with the command.If a source is specified for any measurement, the current source is changed to this new value.If :MARKer:MODE is set to OFF or MANual, setting :MEASure:SOURce to CHANnel&lt;n&gt;, FUNCtion, or MATH will also set :MARKer:X1Y1source to source1 and :MARKer:X2Y2source to source2.EXTernal is only a valid source for the counter measurement (and &lt;source1&gt;).Query Syntax:MEASure:SOURce?The :MEASure:SOURce? query returns the current source selections. If source2 is not specified, the query returns "NONE" for source2. If all channels are off, the query returns "NONE,NONE". Source2 only applies to :MEASure:DELay and :MEASure:PHASe measurements.MATH is an alias for FUNCtion. The query will return FUNC if the source is FUNCtion or MATH.Return Format&lt;source1&gt;,&lt;source2&gt;&lt;NL&gt;&lt;source1&gt;,&lt;source2&gt; ::= {&lt;digital channels&gt; | CHAN&lt;n&gt; | FUNC | WMWM&lt;r&gt; | EXT | NONE}See Also:Introduction to :MEASure Commands:MARKer:MODE:MARKer:X1Y1source:MARKer:X2Y2source:MEASure:DELay:MEASure:PHASeExample Code ' MEASURE - The commands in the MEASURE subsystem are used to make ' measurements on displayed waveforms. myScope.WriteString ":MEASURE:SOURCE CHANNEL1" ' Source to measure. myScope.WriteString ":MEASURE:FREQUENCY?" ' Query for frequency. varQueryResult = myScope.ReadNumber ' Read frequency. MsgBox "Frequency:" + vbCrLf _ + FormatNumber(varQueryResult / 1000, 4) + " kHz" myScope.WriteString ":MEASURE:DUTYCYCLE?" ' Query for duty cycle. varQueryResult = myScope.ReadNumber ' Read duty cycle. MsgBox "Duty cycle:" + vbCrLf _ + FormatNumber(varQueryResult, 3) + "%" myScope.WriteString ":MEASURE:RISETIME?" ' Query for risetime. varQueryResult = myScope.ReadNumber ' Read risetime. MsgBox "Risetime:" + vbCrLf _ + FormatNumber(varQueryResult * 1000000, 4) + " us" myScope.WriteString ":MEASURE:VPP?" ' Query for Pk to Pk voltage. varQueryResult = myScope.ReadNumber ' Read VPP. MsgBox "Peak to peak voltage:" + vbCrLf _ + FormatNumber(varQueryResult, 4) + " V" myScope.WriteString ":MEASURE:VMAX?" ' Query for Vmax. varQueryResult = myScope.ReadNumber ' Read Vmax. MsgBox "Maximum voltage:" + vbCrLf _ + FormatNumber(varQueryResult, 4) + " V"See complete example programs at: Programming Examples</c><c> :MEASure:TEDGe:MEASure Commands Name:MEASure:TEDGe � Query Syntax:MEASure:TEDGe? &lt;slope&gt;&lt;occurrence&gt;[,&lt;source&gt;]&lt;slope&gt; ::= direction of the waveform. A rising slope is indicated by a space or plus sign (+). A falling edge is indicated by a minus sign (-).&lt;occurrence&gt; ::= the transition to be reported. If the occurrence number is one, the first crossing from the left screen edge is reported. If the number is two, the second crossing is reported, etc.&lt;source&gt; ::= {&lt;digital channels&gt; | CHANnel&lt;n&gt; | FUNCtion | MATH | WMEMory&lt;r&gt;}&lt;digital channels&gt; ::= DIGital&lt;d&gt; for the MSO models&lt;n&gt; ::= 1 to (# of analog channels) in NR1 format&lt;r&gt; ::= 1-2 in NR1 format&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 formatWhen the :MEASure:TEDGe query is sent, the displayed signal is searched for the specified transition. The time interval between the trigger event and this occurrence is returned as the response to the query. The sign of the slope selects a rising (+) or falling (-) edge. If no sign is specified for the slope, it is assumed to be the rising edge.The magnitude of occurrence defines the occurrence to be reported. For example, +3 returns the time for the third time the waveform crosses the midpoint threshold in the positive direction. Once this crossing is found, the oscilloscope reports the time at that crossing in seconds, with the trigger point (time zero) as the reference.If the specified crossing cannot be found, the oscilloscope reports +9.9E+37. This value is returned if the waveform does not cross the specified vertical value, or if the waveform does not cross the specified vertical value for the specific number of times in the direction specified.You can make delay and phase measurements using the MEASure:TEDGe command:Delay = time at the nth rising or falling edge of the channel - time at the same edge of another channelPhase = (delay between channels / period of channel) x 360For an example of making a delay and phase measurement, see :MEASure:TEDGe Code.If the optional source parameter is specified, the current source is modified.This query is not available if the source is FFT (Fast Fourier Transform).Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= time in seconds of the specified transition in NR3 format:MEASure:TEDGe Code ' Make a delay measurement between channel 1 and 2. Dim dblChan1Edge1 As Double Dim dblChan2Edge1 As Double Dim dblChan1Edge2 As Double Dim dblDelay As Double Dim dblPeriod As Double Dim dblPhase As Double ' Query time at 1st rising edge on ch1. myScope.WriteString ":MEASURE:TEDGE? +1, CHAN1" ' Read time at edge 1 on ch 1. dblChan1Edge1 = myScope.ReadNumber ' Query time at 1st rising edge on ch2. myScope.WriteString ":MEASURE:TEDGE? +1, CHAN2" ' Read time at edge 1 on ch 2. dblChan2Edge1 = myScope.ReadNumber ' Calculate delay time between ch1 and ch2. dblDelay = dblChan2Edge1 - dblChan1Edge1 ' Write calculated delay time to screen. MsgBox "Delay = " + vbCrLf + CStr(dblDelay) ' Make a phase difference measurement between channel 1 and 2. ' Query time at 1st rising edge on ch1. myScope.WriteString ":MEASURE:TEDGE? +2, CHAN1" ' Read time at edge 2 on ch 1. dblChan1Edge2 = myScope.ReadNumber ' Calculate period of ch 1. dblPeriod = dblChan1Edge2 - dblChan1Edge1 ' Calculate phase difference between ch1 and ch2. dblPhase = (dblDelay / dblPeriod) * 360 MsgBox "Phase = " + vbCrLf + CStr(dblPhase)See complete example programs at: Programming ExamplesSee AlsoIntroduction to :MEASure Commands:MEASure:TVALue:MEASure:VTIMe</c><c> :MEASure:TVALue:MEASure Commands Name:MEASure:TVALue � Query Syntax:MEASure:TVALue? &lt;value&gt;, [&lt;slope&gt;]&lt;occurrence&gt;[,&lt;source&gt;]&lt;value&gt; ::= the vertical value that the waveform must cross. The value can be volts or a math function value such as dB, Vs, or V/s.&lt;slope&gt; ::= direction of the waveform. A rising slope is indicated by a plus sign (+). A falling edge is indicated by a minus sign (-).&lt;occurrence&gt; ::= the transition to be reported. If the occurrence number is one, the first crossing is reported. If the number is two, the second crossing is reported, etc.&lt;source&gt; ::= {CHANnel&lt;n&gt; | FUNCtion | MATH | WMEMory&lt;r&gt;}&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;r&gt; ::= 1-2 in NR1 formatWhen the :MEASure:TVALue? query is sent, the displayed signal is searched for the specified value level and transition. The time interval between the trigger event and this defined occurrence is returned as the response to the query.The specified value can be negative or positive. To specify a negative value, use a minus sign (-). The sign of the slope selects a rising (+) or falling (-) edge. If no sign is specified for the slope, it is assumed to be the rising edge.The magnitude of the occurrence defines the occurrence to be reported. For example, +3 returns the time for the third time the waveform crosses the specified value level in the positive direction. Once this value crossing is found, the oscilloscope reports the time at that crossing in seconds, with the trigger point (time zero) as the reference.If the specified crossing cannot be found, the oscilloscope reports +9.9E+37. This value is returned if the waveform does not cross the specified value, or if the waveform does not cross the specified value for the specified number of times in the direction specified.If the optional source parameter is specified, the current source is modified.This query is not available if the source is FFT (Fast Fourier Transform).Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= time in seconds of the specified value crossing in NR3 formatSee AlsoIntroduction to :MEASure Commands:MEASure:TEDGe:MEASure:VTIMe</c><c> :MEASure:VAVerage:MEASure Commands Name:MEASure:VAVerage � Command Syntax:MEASure:VAVerage [&lt;interval&gt;][,][&lt;source&gt;]&lt;interval&gt; ::= {CYCLe | DISPlay}&lt;source&gt; ::= {CHANnel&lt;n&gt; | FUNCtion | MATH | WMEMory&lt;r&gt;}&lt;n&gt; ::= 1-2 or 1-4 (# of analog channels) in NR1 format&lt;r&gt; ::= 1-2 in NR1 formatThe :MEASure:VAVerage command installs a screen measurement and starts an average value measurement. If the optional source parameter is specified, the current source is modified.The &lt;interval&gt; option lets you specify the measurement interval: either an integral number of cycles, or the full screen. If &lt;interval&gt; is not specified, DISPlay is implied.Query Syntax:MEASure:VAVerage? [&lt;interval&gt;][,][&lt;source&gt;]The :MEASure:VAVerage? query returns the average value of an integral number of periods of the signal. If at least three edges are not present, the oscilloscope averages all data points.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= calculated average value in NR3 formatSee AlsoIntroduction to :MEASure Commands:MEASure:SOURce</c><c> :MEASure:VPP:MEASure Commands Name:MEASure:VPP � Command Syntax:MEASure:VPP [&lt;source&gt;]&lt;source&gt; ::= {CHANnel&lt;n&gt; | FUNCtion | MATH | WMEMory&lt;r&gt;}&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;r&gt; ::= 1-2 in NR1 formatThe :MEASure:VPP command installs a screen measurement and starts a vertical peak-to-peak measurement. If the optional source parameter is specified, the current source is modified.Query Syntax:MEASure:VPP? [&lt;source&gt;]The :MEASure:VPP? query measures the maximum and minimum vertical value for the selected source, then calculates the vertical peak-to-peak value and returns that value. The peak-to-peak value (Vpp) is calculated with the following formula:Vpp = Vmax - VminVmax and Vmin are the vertical maximum and minimum values present on the selected source.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= vertical peak to peak value in NR3 formatSee AlsoIntroduction to :MEASure Commands:MEASure:SOURce:MEASure:VMAX:MEASure:VMIN:MEASure:VAMPlitude</c><c> :MEASure:VRMS:MEASure Commands Name:MEASure:VRMS � Command Syntax:MEASure:VRMS [&lt;interval&gt;][,][&lt;type&gt;][,][&lt;source&gt;]&lt;interval&gt; ::= {CYCLe | DISPlay}&lt;type&gt; ::= {AC | DC}&lt;source&gt; ::= {CHANnel&lt;n&gt; | FUNCtion | MATH | WMEMory&lt;r&gt;}&lt;n&gt; ::= 1-2 or 1-4 (# of analog channels) in NR1 format&lt;r&gt; ::= 1-2 in NR1 formatThe :MEASure:VRMS command installs a screen measurement and starts an RMS value measurement. If the optional source parameter is specified, the current source is modified.The &lt;interval&gt; option lets you specify the measurement interval: either an integral number of cycles, or the full screen. If &lt;interval&gt; is not specified, DISPlay is implied.The &lt;type&gt; option lets you choose between a DC RMS measurement and an AC RMS measurement. If &lt;type&gt; is not specified, DC is implied.This command is not available if the source is FFT (Fast Fourier Transform).Query Syntax:MEASure:VRMS? [&lt;interval&gt;][,][&lt;type&gt;][,][&lt;source&gt;]The :MEASure:VRMS? query measures and outputs the dc RMS value of the selected waveform. The dc RMS value is measured on an integral number of periods of the displayed signal. If at least three edges are not present, the oscilloscope computes the RMS value on all displayed data points.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= calculated dc RMS value in NR3 formatSee AlsoIntroduction to :MEASure Commands:MEASure:SOURce</c><c> :MEASure:VTIMe:MEASure Commands Name:MEASure:VTIMe � Query Syntax:MEASure:VTIMe? &lt;vtime_argument&gt;[,&lt;source&gt;]&lt;vtime_argument&gt; ::= time from trigger in seconds&lt;source&gt; ::= {&lt;digital channels&gt; | CHANnel&lt;n&gt; | FUNCtion | MATH | WMEMory&lt;r&gt;}&lt;digital channels&gt; ::= DIGital&lt;d&gt; for the MSO models&lt;n&gt; ::= 1 to (# of analog channels) in NR1 format&lt;r&gt; ::= 1-2 in NR1 format&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 formatThe :MEASure:VTIMe? query returns the value at a specified time on the source specified with :MEASure:SOURce. The specified time must be on the screen and is referenced to the trigger event. If the optional source parameter is specified, the current source is modified.This query is not available if the source is FFT (Fast Fourier Transform).Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= value at the specified time in NR3 formatSee AlsoIntroduction to :MEASure Commands:MEASure:SOURce:MEASure:TEDGe:MEASure:TVALue</c><c> :MEASure:WINDow:MEASure Commands Name:MEASure:WINDow � Command Syntax:MEASure:WINDow &lt;type&gt;&lt;type&gt; ::= {MAIN | ZOOM | AUTO}When the zoomed time base is displayed, the :MEASure:WINDow command lets you specify the measurement window:MAIN � the measurement window is the upper, Main window.ZOOM � the measurement window is the lower, Zoom window.AUTO � the measurement is attempted in the lower, Zoom window; if it cannot be made there, the upper, Main window is used.Query Syntax:MEASure:WINDow?The :MEASure:WINDow? query returns the current measurement window setting.Return Format&lt;type&gt;&lt;NL&gt;&lt;type&gt; ::= {MAIN | ZOOM | AUTO}See AlsoIntroduction to :MEASure Commands:MEASure:SOURce</c><c> :MEASure:PHASe:MEASure Commands Name:MEASure:PHASe � Command Syntax:MEASure:PHASe [&lt;source1&gt;][,&lt;source2&gt;]&lt;source1&gt;, &lt;source2&gt; ::= {CHANnel&lt;n&gt; | FUNCtion | MATH | WMEMory&lt;r&gt;}&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;r&gt; ::= 1-2 in NR1 formatThe :MEASure:PHASe command places the instrument in the continuous measurement mode and starts a phase measurement.Query Syntax:MEASure:PHASe? [&lt;source1&gt;][,&lt;source2&gt;]The :MEASure:PHASe? query measures and returns the phase between the specified sources.A phase measurement is a combination of the period and delay measurements. First, the period is measured on source1. Then the delay is measured between source1 and source2. The edges used for delay are the source1 rising edge used for the period measurement closest to the horizontal reference and the rising edge on source 2. See :MEASure:DELay for more detail on selecting the 2nd edge.The phase is calculated as follows:phase = (delay / period of input 1) x 360Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= the phase angle value in degrees in NR3 formatSee AlsoIntroduction to :MEASure Commands:MEASure:DELay:MEASure:PERiod:MEASure:SOURce</c><c> :MEASure:DUTYcycle:MEASure Commands Name:MEASure:DUTYcycle � Command Syntax:MEASure:DUTYcycle [&lt;source&gt;]&lt;source&gt; ::= {&lt;digital channels&gt; | CHANnel&lt;n&gt; | FUNCtion | MATH | WMEMory&lt;r&gt;}&lt;digital channels&gt; ::= DIGital&lt;d&gt; for the MSO models&lt;n&gt; ::= 1 to (# of analog channels) in NR1 format&lt;r&gt; ::= 1-2 in NR1 format&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 formatThe :MEASure:DUTYcycle command installs a screen measurement and starts a duty cycle measurement on the current :MEASure:SOURce. If the optional source parameter is specified, the current source is modified.The signal must be displayed to make the measurement. This command is not available if the source is FFT (Fast Fourier Transform).Query Syntax:MEASure:DUTYcycle? [&lt;source&gt;]The :MEASure:DUTYcycle? query measures and outputs the duty cycle of the signal specified by the :MEASure:SOURce command. The value returned for the duty cycle is the ratio of the positive pulse width to the period. The positive pulse width and the period of the specified signal are measured, then the duty cycle is calculated with the following formula:duty cycle = (+pulse width/period)*100Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= ratio of positive pulse width to period in NR3 formatSee AlsoIntroduction to :MEASure Commands:MEASure:PERiod:MEASure:PWIDth:MEASure:SOURceExample CodeExample Code</c><c> :MEASure:FALLtime:MEASure Commands Name:MEASure:FALLtime � Command Syntax:MEASure:FALLtime [&lt;source&gt;]&lt;source&gt; ::= {CHANnel&lt;n&gt; | FUNCtion | MATH | WMEMory&lt;r&gt;}&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;r&gt; ::= 1-2 in NR1 formatThe :MEASure:FALLtime command installs a screen measurement and starts a fall-time measurement. For highest measurement accuracy, set the sweep speed as fast as possible, while leaving the falling edge of the waveform on the display. If the optional source parameter is specified, the current source is modified.This command is not available if the source is FFT (Fast Fourier Transform).Query Syntax:MEASure:FALLtime? [&lt;source&gt;]The :MEASure:FALLtime? query measures and outputs the fall time of the displayed falling (negative-going) edge closest to the trigger reference. The fall time is determined by measuring the time at the upper threshold of the falling edge, then measuring the time at the lower threshold of the falling edge, and calculating the fall time with the following formula:fall time = time at lower threshold - time at upper thresholdReturn Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= time in seconds between the lower threshold and upper threshold in NR3 formatSee AlsoIntroduction to :MEASure Commands:MEASure:RISetime:MEASure:SOURce</c><c> :MEASure:FREQuency:MEASure Commands Name:MEASure:FREQuency � Command Syntax:MEASure:FREQuency [&lt;source&gt;]&lt;source&gt; ::= {&lt;digital channels&gt; | CHANnel&lt;n&gt; | FUNCtion | MATH | WMEMory&lt;r&gt;}&lt;digital channels&gt; ::= DIGital&lt;d&gt; for the MSO models&lt;n&gt; ::= 1 to (# of analog channels) in NR1 format&lt;r&gt; ::= 1-2 in NR1 format&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 formatThe :MEASure:FREQuency command installs a screen measurement and starts a frequency measurement. If the optional source parameter is specified, the current source is modified.IF the edge on the screen closest to the trigger reference is rising:THEN frequency = 1/(time at trailing rising edge - time at leading rising edge)ELSE frequency = 1/(time at trailing falling edge - time at leading falling edge)This command is not available if the source is FFT (Fast Fourier Transform).Query Syntax:MEASure:FREQuency? [&lt;source&gt;]The :MEASure:FREQuency? query measures and outputs the frequency of the cycle on the screen closest to the trigger reference.Return Format&lt;source&gt;&lt;NL&gt;&lt;source&gt; ::= frequency in Hertz in NR3 formatSee AlsoIntroduction to :MEASure Commands:MEASure:SOURce:MEASure:PERiodExample CodeExample Code</c><c> :MEASure:NWIDth:MEASure Commands Name:MEASure:NWIDth � Command Syntax:MEASure:NWIDth [&lt;source&gt;]&lt;source&gt; ::= {&lt;digital channels&gt; | CHANnel&lt;n&gt; | FUNCtion | MATH | WMEMory&lt;r&gt;}&lt;digital channels&gt; ::= DIGital&lt;d&gt; for the MSO models&lt;n&gt; ::= 1 to (# of analog channels) in NR1 format&lt;r&gt; ::= 1-2 in NR1 format&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 formatThe :MEASure:NWIDth command installs a screen measurement and starts a negative pulse width measurement. If the optional source parameter is not specified, the current source is modified.This command is not available if the source is FFT (Fast Fourier Transform).Query Syntax:MEASure:NWIDth? [&lt;source&gt;]The :MEASure:NWIDth? query measures and outputs the width of the negative pulse on the screen closest to the trigger reference using the midpoint between the upper and lower thresholds.FOR the negative pulse closest to the trigger point:width = (time at trailing rising edge - time at leading falling edge)Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= negative pulse width in seconds in NR3 formatSee AlsoIntroduction to :MEASure Commands:MEASure:SOURce:MEASure:PWIDth:MEASure:PERiod</c><c> :MEASure:OVERshoot:MEASure Commands Name:MEASure:OVERshoot � Command Syntax:MEASure:OVERshoot [&lt;source&gt;]&lt;source&gt; ::= {CHANnel&lt;n&gt; | FUNCtion | MATH | WMEMory&lt;r&gt;}&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;r&gt; ::= 1-2 in NR1 formatThe :MEASure:OVERshoot command installs a screen measurement and starts an overshoot measurement. If the optional source parameter is specified, the current source is modified.This command is not available if the source is FFT (Fast Fourier Transform).Query Syntax:MEASure:OVERshoot? [&lt;source&gt;]The :MEASure:OVERshoot? query measures and returns the overshoot of the edge closest to the trigger reference, displayed on the screen. The method used to determine overshoot is to make three different vertical value measurements: Vtop, Vbase, and either Vmax or Vmin, depending on whether the edge is rising or falling.For a rising edge:overshoot = ((Vmax-Vtop) / (Vtop-Vbase)) x 100For a falling edge:overshoot = ((Vbase-Vmin) / (Vtop-Vbase)) x 100Vtop and Vbase are taken from the normal histogram of all waveform vertical values. The extremum of Vmax or Vmin is taken from the waveform interval right after the chosen edge, halfway to the next edge. This more restricted definition is used instead of the normal one, because it is conceivable that a signal may have more preshoot than overshoot, and the normal extremum would then be dominated by the preshoot of the following edge.Return Format&lt;overshoot&gt;&lt;NL&gt;&lt;overshoot&gt;::= the percent of the overshoot of the selected waveform in NR3 formatSee AlsoIntroduction to :MEASure Commands:MEASure:PREShoot:MEASure:SOURce:MEASure:VMAX:MEASure:VTOP:MEASure:VBASe:MEASure:VMIN</c><c> :MEASure:PERiod:MEASure Commands Name:MEASure:PERiod � Command Syntax:MEASure:PERiod [&lt;source&gt;]&lt;source&gt; ::= {&lt;digital channels&gt; | CHANnel&lt;n&gt; | FUNCtion | MATH | WMEMory&lt;r&gt;}&lt;digital channels&gt; ::= DIGital&lt;d&gt; for the MSO models&lt;n&gt; ::= 1 to (# of analog channels) in NR1 format&lt;r&gt; ::= 1-2 in NR1 format&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 formatThe :MEASure:PERiod command installs a screen measurement and starts the period measurement. If the optional source parameter is specified, the current source is modified.This command is not available if the source is FFT (Fast Fourier Transform).Query Syntax:MEASure:PERiod? [&lt;source&gt;]The :MEASure:PERiod? query measures and outputs the period of the cycle closest to the trigger reference on the screen. The period is measured at the midpoint of the upper and lower thresholds.IF the edge closest to the trigger reference on screen is rising:THEN period = (time at trailing rising edge - time at leading rising edge)ELSE period = (time at trailing falling edge - time at leading falling edge)Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= waveform period in seconds in NR3 formatSee AlsoIntroduction to :MEASure Commands:MEASure:SOURce:MEASure:NWIDth:MEASure:PWIDth:MEASure:FREQuencyExample CodeExample Code</c><c> :MEASure:PREShoot:MEASure Commands Name:MEASure:PREShoot � Command Syntax:MEASure:PREShoot [&lt;source&gt;]&lt;source&gt; ::= {CHANnel&lt;n&gt; | FUNCtion | MATH | WMEMory&lt;r&gt;}&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;r&gt; ::= 1-2 in NR1 formatThe :MEASure:PREShoot command installs a screen measurement and starts a preshoot measurement. If the optional source parameter is specified, the current source is modified.Query Syntax:MEASure:PREShoot? [&lt;source&gt;]The :MEASure:PREShoot? query measures and returns the preshoot of the edge closest to the trigger, displayed on the screen. The method used to determine preshoot is to make three different vertical value measurements: Vtop, Vbase, and either Vmin or Vmax, depending on whether the edge is rising or falling.For a rising edge:preshoot = ((Vmin-Vbase) / (Vtop-Vbase)) x 100For a falling edge:preshoot = ((Vmax-Vtop) / (Vtop-Vbase)) x 100Vtop and Vbase are taken from the normal histogram of all waveform vertical values. The extremum of Vmax or Vmin is taken from the waveform interval right before the chosen edge, halfway back to the previous edge. This more restricted definition is used instead of the normal one, because it is likely that a signal may have more overshoot than preshoot, and the normal extremum would then be dominated by the overshoot of the preceding edge.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= the percent of preshoot of the selected waveform in NR3 formatSee AlsoIntroduction to :MEASure Commands:MEASure:SOURce:MEASure:VMIN:MEASure:VMAX:MEASure:VTOP:MEASure:VBASe</c><c> :MEASure:PWIDth:MEASure Commands Name:MEASure:PWIDth � Command Syntax:MEASure:PWIDth [&lt;source&gt;]&lt;source&gt; ::= {&lt;digital channels&gt; | CHANnel&lt;n&gt; | FUNCtion | MATH | WMEMory&lt;r&gt;}&lt;digital channels&gt; ::= DIGital&lt;d&gt; for the MSO models&lt;n&gt; ::= 1 to (# of analog channels) in NR1 format&lt;r&gt; ::= 1-2 in NR1 format&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 formatThe :MEASure:PWIDth command installs a screen measurement and starts the positive pulse width measurement. If the optional source parameter is specified, the current source is modified.This command is not available if the source is FFT (Fast Fourier Transform).Query Syntax:MEASure:PWIDth? [&lt;source&gt;]The :MEASure:PWIDth? query measures and outputs the width of the displayed positive pulse closest to the trigger reference. Pulse width is measured at the midpoint of the upper and lower thresholds.IF the edge on the screen closest to the trigger is falling:THEN width = (time at trailing falling edge - time at leading rising edge)ELSE width = (time at leading falling edge - time at leading rising edge)Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= width of positive pulse in seconds in NR3 formatSee AlsoIntroduction to :MEASure Commands:MEASure:SOURce:MEASure:NWIDth:MEASure:PERiod</c><c> :MEASure:RISetime:MEASure Commands Name:MEASure:RISetime � Command Syntax:MEASure: RISetime [&lt;source&gt;]&lt;source&gt; ::= {CHANnel&lt;n&gt; | FUNCtion | MATH | WMEMory&lt;r&gt;}&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;r&gt; ::= 1-2 in NR1 formatThe :MEASure:RISetime command installs a screen measurement and starts a rise-time measurement. If the optional source parameter is specified, the current source is modified.This command is not available if the source is FFT (Fast Fourier Transform).Query Syntax:MEASure: RISetime? [&lt;source&gt;]The :MEASure:RISetime? query measures and outputs the rise time of the displayed rising (positive-going) edge closest to the trigger reference. For maximum measurement accuracy, set the sweep speed as fast as possible while leaving the leading edge of the waveform on the display. The rise time is determined by measuring the time at the lower threshold of the rising edge and the time at the upper threshold of the rising edge, then calculating the rise time with the following formula:rise time = time at upper threshold - time at lower thresholdReturn Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= rise time in seconds in NR3 formatSee AlsoIntroduction to :MEASure Commands:MEASure:SOURce:MEASure:FALLtime</c><c> :MEASure:VAMPlitude:MEASure Commands Name:MEASure:VAMPlitude � Command Syntax:MEASure:VAMPlitude [&lt;source&gt;]&lt;source&gt; ::= {CHANnel&lt;n&gt; | FUNCtion | MATH | WMEMory&lt;r&gt;}&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;r&gt; ::= 1-2 in NR1 formatThe :MEASure:VAMPlitude command installs a screen measurement and starts a vertical amplitude measurement. If the optional source parameter is specified, the current source is modified.Query Syntax:MEASure:VAMPlitude? [&lt;source&gt;]The :MEASure:VAMPlitude? query measures and returns the vertical amplitude of the waveform. To determine the amplitude, the instrument measures Vtop and Vbase, then calculates the amplitude as follows:vertical amplitude = Vtop - VbaseReturn Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= the amplitude of the selected waveform in NR3 formatSee AlsoIntroduction to :MEASure Commands:MEASure:SOURce:MEASure:VBASe:MEASure:VTOP:MEASure:VPP</c><c> :MEASure:VBASe:MEASure Commands Name:MEASure:VBASe � Command Syntax:MEASure:VBASe [&lt;source&gt;]&lt;source&gt; ::= {CHANnel&lt;n&gt; | FUNCtion | MATH | WMEMory&lt;r&gt;}&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;r&gt; ::= 1-2 in NR1 formatThe :MEASure:VBASe command installs a screen measurement and starts a waveform base value measurement. If the optional source parameter is specified, the current source is modified.This command is not available if the source is FFT (Fast Fourier Transform).Query Syntax:MEASure:VBASe? [&lt;source&gt;]The :MEASure:VBASe? query returns the vertical value at the base of the waveform. The base value of a pulse is normally not the same as the minimum value.Return Format&lt;base_voltage&gt;&lt;NL&gt;&lt;base_voltage&gt; ::= value at the base of the selected waveform in NR3 formatSee AlsoIntroduction to :MEASure Commands:MEASure:SOURce:MEASure:VTOP:MEASure:VAMPlitude:MEASure:VMIN</c><c> :MEASure:VMAX:MEASure Commands Name:MEASure:VMAX � Command Syntax:MEASure:VMAX [&lt;source&gt;]&lt;source&gt; ::= {CHANnel&lt;n&gt; | FUNCtion | MATH | WMEMory&lt;r&gt;}&lt;n&gt; ::= 1-2 or 1-4 (# of analog channels) in NR1 format&lt;r&gt; ::= 1-2 in NR1 formatThe :MEASure:VMAX command installs a screen measurement and starts a maximum vertical value measurement. If the optional source parameter is specified, the current source is modified.Query Syntax:MEASure:VMAX? [&lt;source&gt;]The :MEASure:VMAX? query measures and outputs the maximum vertical value present on the selected waveform.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= maximum vertical value of the selected waveform in NR3 formatSee AlsoIntroduction to :MEASure Commands:MEASure:SOURce:MEASure:VMIN:MEASure:VPP:MEASure:VTOP</c><c> :MEASure:VMIN:MEASure Commands Name:MEASure:VMIN � Command Syntax:MEASure:VMIN [&lt;source&gt;]&lt;source&gt; ::= {CHANnel&lt;n&gt; | FUNCtion | MATH | WMEMory&lt;r&gt;}&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;r&gt; ::= 1-2 in NR1 formatThe :MEASure:VMIN command installs a screen measurement and starts a minimum vertical value measurement. If the optional source parameter is specified, the current source is modified.Query Syntax:MEASure:VMIN? [&lt;source&gt;]The :MEASure:VMIN? query measures and outputs the minimum vertical value present on the selected waveform.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= minimum vertical value of the selected waveform in NR3 formatSee AlsoIntroduction to :MEASure Commands:MEASure:SOURce:MEASure:VBASe:MEASure:VMAX:MEASure:VPP</c><c> :MEASure:VTOP:MEASure Commands Name:MEASure:VTOP � Command Syntax:MEASure:VTOP [&lt;source&gt;]&lt;source&gt; ::= {CHANnel&lt;n&gt; | FUNCtion | MATH}&lt;n&gt; ::= 1-2 or 1-4 (# of analog channels) in NR1 format&lt;r&gt; ::= 1-2 in NR1 formatThe :MEASure:VTOP command installs a screen measurement and starts a waveform top value measurement.This query is not available if the source is FFT (Fast Fourier Transform).Query Syntax:MEASure:VTOP? [&lt;source&gt;]The :MEASure:VTOP? query returns the vertical value at the top of the waveform. The top value of the pulse is normally not the same as the maximum value.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= vertical value at the top of the waveform in NR3 formatSee AlsoIntroduction to :MEASure Commands:MEASure:SOURce:MEASure:VMAX:MEASure:VAMPlitude:MEASure:VBASe</c><c> :MTEenable (Mask Test Event Enable Register)Root (:) Commands Name:MTEenable (Mask Test Event Enable Register) � Command Syntax:MTEenable &lt;mask&gt;&lt;mask&gt; ::= 16-bit integerThe :MTEenable command sets a mask in the Mask Test Event Enable register. Set any of the following bits to "1" to enable bit 9 in the Operation Status Condition Register and potentially cause an SRQ (Service Request interrupt to be generated.Mask Test Event Enable Register (MTEenable):BitNameDescriptionWhen Set (1 = High = True), Enables:15-11------(Not used.)10Auto MaskAuto Mask CreatedAuto mask creation completed.9------(Not used.)8StartedMask Testing StartedMask testing started.7-2------(Not used.)1FailMask Test FailMask test failed.0CompleteMask Test CompleteMask test is complete.Query Syntax:MTEenable?The :MTEenable? query returns the current value contained in the Mask Test Event Enable register as an integer number.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= integer in NR1 format.See AlsoIntroduction to Root (:) Commands:AER (Arm Event Register):CHANnel&lt;n&gt;:PROTection:OPERegister[:EVENt] (Operation Status Event Register):OVLenable (Overload Event Enable Register):OVLRegister (Overload Event Register)*STB (Read Status Byte)*SRE (Service Request Enable)</c><c> :MTERegister[:EVENt] (Mask Test Event Event Register)Root (:) Commands Name:MTERegister[:EVENt] (Mask Test Event Event Register) � Query Syntax:MTERegister[:EVENt]?The :MTERegister[:EVENt]? query returns the integer value contained in the Mask Test Event Event Register and clears the register.Mask Test Event Event Register:BitNameDescriptionWhen Set (1 = High = True), Indicates:15-11------(Not used.)10Auto MaskAuto Mask CreatedAuto mask creation completed.9------(Not used.)8StartedMask Testing StartedMask testing started.7-2------(Not used.)1FailMask Test FailThe mask test failed.0CompleteMask Test CompleteThe mask test is complete.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= integer in NR1 format.See AlsoIntroduction to Root (:) Commands:CHANnel&lt;n&gt;:PROTection:OPEE (Operation Status Enable Register):OPERegister:CONDition (Operation Status Condition Register):OVLenable (Overload Event Enable Register):OVLRegister (Overload Event Register)*STB (Read Status Byte)*SRE (Service Request Enable)</c><c>Introduction to :MTESt CommandsMask testing automatically compares the current displayed waveform with the boundaries of a set of polygons that you define. Any waveform or sample that falls within the boundaries of one or more polygons is recorded as a failure.Reporting the Setup. Use :MTESt? to query setup information for the MTESt subsystem.Return Format. The following is a sample response from the :MTESt? query. In this case, the query was issued following a *RST command.:MTES:SOUR CHAN1;ENAB 0;LOCK 1;:MTES:AMAS:SOUR CHAN1;UNIT DIV;XDEL +2.50000000E-001;YDEL +2.50000000E-001;:MTES:SCAL:X1 +200.000E-06;XDEL +400.000E-06;Y1 -3.00000E+00;Y2 +3.00000E+00;BIND 0;:MTES:RMOD FOR;RMOD:TIME +1E+00;WAV 1000;SIGM +6.0E+00;:MTES:RMOD:FACT:STOP 0;PRIN 0;SAVE 0Example Code' Mask testing commands example. ' ------------------------------------------------------------------- Option Explicit Public myMgr As VisaComLib.ResourceManager Public myScope As VisaComLib.FormattedIO488 Public varQueryResult As Variant Public strQueryResult As String Private Declare Sub Sleep Lib "kernel32" (ByVal dwMilliseconds As Long) Sub Main() On Error GoTo VisaComError ' Create the VISA COM I/O resource. Set myMgr = New VisaComLib.ResourceManager Set myScope = New VisaComLib.FormattedIO488 Set myScope.IO = _ myMgr.Open("USB0::0x0957::0x17A6::US50210029::0::INSTR") myScope.IO.Clear ' Clear the interface. ' Make sure oscilloscope is running. myScope.WriteString ":RUN" ' Set mask test termination conditions. myScope.WriteString ":MTESt:RMODe SIGMa" myScope.WriteString ":MTESt:RMODe?" strQueryResult = myScope.ReadString Debug.Print "Mask test termination mode: " + strQueryResult myScope.WriteString ":MTESt:RMODe:SIGMa 4.2" myScope.WriteString ":MTESt:RMODe:SIGMa?" varQueryResult = myScope.ReadNumber Debug.Print "Mask test termination 'test sigma': " + _ FormatNumber(varQueryResult) ' Use auto-mask to create mask. myScope.WriteString ":MTESt:AMASk:SOURce CHANnel1" myScope.WriteString ":MTESt:AMASk:SOURce?" strQueryResult = myScope.ReadString Debug.Print "Mask test auto-mask source: " + strQueryResult myScope.WriteString ":MTESt:AMASk:UNITs DIVisions" myScope.WriteString ":MTESt:AMASk:UNITs?" strQueryResult = myScope.ReadString Debug.Print "Mask test auto-mask units: " + strQueryResult myScope.WriteString ":MTESt:AMASk:XDELta 0.1" myScope.WriteString ":MTESt:AMASk:XDELta?" varQueryResult = myScope.ReadNumber Debug.Print "Mask test auto-mask X delta: " + _ FormatNumber(varQueryResult) myScope.WriteString ":MTESt:AMASk:YDELta 0.1" myScope.WriteString ":MTESt:AMASk:YDELta?" varQueryResult = myScope.ReadNumber Debug.Print "Mask test auto-mask Y delta: " + _ FormatNumber(varQueryResult) ' Enable "Auto Mask Created" event (bit 10, &amp;H400) myScope.WriteString "*CLS" myScope.WriteString ":MTEenable " + CStr(CInt("&amp;H400")) ' Create mask. myScope.WriteString ":MTESt:AMASk:CREate" Debug.Print "Auto-mask created, mask test automatically enabled." ' Set up timeout variables. Dim lngTimeout As Long ' Max millisecs to wait. Dim lngElapsed As Long lngTimeout = 60000 ' 60 seconds. ' Wait until mask is created. lngElapsed = 0 Do While lngElapsed &lt;= lngTimeout myScope.WriteString ":OPERegister:CONDition?" varQueryResult = myScope.ReadNumber ' Operation Status Condition Register MTE bit (bit 9, &amp;H200). If (varQueryResult And &amp;H200) &lt;&gt; 0 Then Exit Do Else Sleep 100 ' Small wait to prevent excessive queries. lngElapsed = lngElapsed + 100 End If Loop ' Look for RUN bit = stopped (mask test termination). lngElapsed = 0 Do While lngElapsed &lt;= lngTimeout myScope.WriteString ":OPERegister:CONDition?" varQueryResult = myScope.ReadNumber ' Operation Status Condition Register RUN bit (bit 3, &amp;H8). If (varQueryResult And &amp;H8) = 0 Then Exit Do Else Sleep 100 ' Small wait to prevent excessive queries. lngElapsed = lngElapsed + 100 End If Loop ' Get total waveforms, failed waveforms, and test time. myScope.WriteString ":MTESt:COUNt:WAVeforms?" strQueryResult = myScope.ReadString Debug.Print "Mask test total waveforms: " + strQueryResult myScope.WriteString ":MTESt:COUNt:FWAVeforms?" strQueryResult = myScope.ReadString Debug.Print "Mask test failed waveforms: " + strQueryResult myScope.WriteString ":MTESt:COUNt:TIME?" strQueryResult = myScope.ReadString Debug.Print "Mask test elapsed seconds: " + strQueryResult Exit Sub VisaComError: MsgBox "VISA COM Error:" + vbCrLf + Err.Description End Sub</c><c> :MTESt:ALL:MTESt Commands Name:MTESt:ALL � Command Syntax:MTESt:ALL &lt;on_off&gt;&lt;on_off&gt; ::= {{1 | ON} | {0 | OFF}}The :MTESt:ALL command specifies the channel(s) that are included in the mask test:ON � All displayed analog channels are included in the mask test.OFF � Just the selected source channel is included in the test.Query Syntax:MTESt:ENABle?The :MTESt:ENABle? query returns the current setting.Return Format&lt;on_off&gt;&lt;NL&gt;&lt;on_off&gt; ::= {1 | 0}See AlsoIntroduction to :MTESt Commands</c><c> :MTESt:AMASk:CREate:MTESt Commands Name:MTESt:AMASk:CREate � Command Syntax:MTESt:AMASk:CREateThe :MTESt:AMASk:CREate command automatically constructs a mask around the current selected channel, using the tolerance parameters defined by the :MTESt:AMASk:XDELta, :MTESt:AMASk:YDELta, and :MTESt:AMASk:UNITs commands. The mask only encompasses the portion of the waveform visible on the display, so you must ensure that the waveform is acquired and displayed consistently to obtain repeatable results.The :MTESt:SOURce command selects the channel and should be set before using this command.See AlsoIntroduction to :MTESt Commands:MTESt:AMASk:XDELta:MTESt:AMASk:YDELta:MTESt:AMASk:UNITs:MTESt:AMASk:SOURce:MTESt:SOURceExample CodeExample Code</c><c> :MTESt:AMASk:SOURce:MTESt Commands Name:MTESt:AMASk:SOURce � Command Syntax:MTESt:AMASk:SOURce &lt;source&gt;&lt;source&gt; ::= CHANnel&lt;n&gt;&lt;n&gt; ::= 1 to (# analog channels) in NR1 formatThe :MTESt:AMASk:SOURce command selects the source for the interpretation of the :MTESt:AMASk:XDELta and :MTESt:AMASk:YDELta parameters when :MTESt:AMASk:UNITs is set to CURRent.When UNITs are CURRent, the XDELta and YDELta parameters are defined in terms of the channel units, as set by the :CHANnel&lt;n&gt;:UNITs command, of the selected source.Suppose that UNITs are CURRent and that you set SOURce to CHANNEL1, which is using units of volts. Then you can define AMASk:XDELta in terms of volts and AMASk:YDELta in terms of seconds.This command is the same as the :MTESt:SOURce command.Query Syntax:MTESt:AMASk:SOURce?The :MTESt:AMASk:SOURce? query returns the currently set source.Return Format&lt;source&gt; ::= CHAN&lt;n&gt;&lt;n&gt; ::= 1 to (# analog channels) in NR1 formatSee AlsoIntroduction to :MTESt Commands:MTESt:AMASk:XDELta:MTESt:AMASk:YDELta:MTESt:AMASk:UNITs:MTESt:SOURceExample CodeExample Code</c><c> :MTESt:AMASk:UNITs:MTESt Commands Name:MTESt:AMASk:UNITs � Command Syntax:MTESt:AMASk:UNITs &lt;units&gt;&lt;units&gt; ::= {CURRent | DIVisions}The :MTESt:AMASk:UNITs command alters the way the mask test subsystem interprets the tolerance parameters for automasking as defined by :MTESt:AMASk:XDELta and :MTESt:AMASk:YDELta commands.CURRent � the mask test subsystem uses the units as set by the :CHANnel&lt;n&gt;:UNITs command, usually time for ΔX and voltage for ΔY.DIVisions � the mask test subsystem uses the graticule as the measurement system, so tolerance settings are specified as parts of a screen division. The mask test subsystem maintains separate XDELta and YDELta settings for CURRent and DIVisions. Thus, XDELta and YDELta are not converted to new values when the UNITs setting is changed.Query Syntax:MTESt:AMASk:UNITs?The :MTESt:AMASk:UNITs query returns the current measurement units setting for the mask test automask feature.Return Format&lt;units&gt;&lt;NL&gt;&lt;units&gt; ::= {CURR | DIV}See AlsoIntroduction to :MTESt Commands:MTESt:AMASk:XDELta:MTESt:AMASk:YDELta:CHANnel&lt;n&gt;:UNITs:MTESt:AMASk:SOURce:MTESt:SOURceExample CodeExample Code</c><c> :MTESt:AMASk:XDELta:MTESt Commands Name:MTESt:AMASk:XDELta � Command Syntax:MTESt:AMASk:XDELta &lt;value&gt;&lt;value&gt; ::= X delta value in NR3 formatThe :MTESt:AMASk:XDELta command sets the tolerance in the X direction around the waveform for the automasking feature. The absolute value of the tolerance will be added and subtracted to horizontal values of the waveform to determine the boundaries of the mask.The horizontal tolerance value is interpreted based on the setting specified by the :MTESt:AMASk:UNITs command; thus, if you specify 250-E3, the setting for :MTESt:AMASk:UNITs is CURRent, and the current setting specifies time in the horizontal direction, the tolerance will be �250 ms. If the setting for :MTESt:AMASk:UNITs is DIVisions, the same X delta value will set the tolerance to �250 millidivisions, or 1/4 of a division.Query Syntax:MTESt:AMASk:XDELta?The :MTEST:AMASk:XDELta? query returns the current setting of the ΔX tolerance for automasking. If your computer program will interpret this value, it should also request the current measurement system using the :MTESt:AMASk:UNITs query.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= X delta value in NR3 formatSee AlsoIntroduction to :MTESt Commands:MTESt:AMASk:UNITs:MTESt:AMASk:YDELta:MTESt:AMASk:SOURce:MTESt:SOURceExample CodeExample Code</c><c> :MTESt:AMASk:YDELta:MTESt Commands Name:MTESt:AMASk:YDELta � Command Syntax:MTESt:AMASk:YDELta &lt;value&gt;&lt;value&gt; ::= Y delta value in NR3 formatThe :MTESt:AMASk:YDELta command sets the vertical tolerance around the waveform for the automasking feature. The absolute value of the tolerance will be added and subtracted to vertical values of the waveform to determine the boundaries of the mask.The vertical tolerance value is interpreted based on the setting specified by the :MTESt:AMASk:UNITs command; thus, if you specify 250-E3, the setting for :MTESt:AMASk:UNITs is CURRent, and the current setting specifies voltage in the vertical direction, the tolerance will be �250 mV. If the setting for :MTESt:AMASk:UNITs is DIVisions, the same Y delta value will set the tolerance to �250 millidivisions, or 1/4 of a division.Query Syntax:MTESt:AMASk:YDELta?The :MTESt:AMASk:YDELta? query returns the current setting of the ΔY tolerance for automasking. If your computer program will interpret this value, it should also request the current measurement system using the :MTESt:AMASk:UNITs query.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= Y delta value in NR3 formatSee AlsoIntroduction to :MTESt Commands:MTESt:AMASk:UNITs:MTESt:AMASk:XDELta:MTESt:AMASk:SOURce:MTESt:SOURceExample CodeExample Code</c><c> :MTESt:COUNt:FWAVeforms:MTESt Commands Name:MTESt:COUNt:FWAVeforms � Query Syntax:MTESt:COUNt:FWAVeforms? [CHANnel&lt;n&gt;]&lt;n&gt; ::= 1 to (# analog channels) in NR1 formatThe :MTESt:COUNt:FWAVeforms? query returns the total number of failed waveforms in the current mask test run. This count is for all regions and all waveforms collected on the channel specified by the optional parameter or collected on the currently specified source channel (:MTESt:SOURce) if there is no parameter.Return Format&lt;failed&gt;&lt;NL&gt;&lt;failed&gt; ::= number of failed waveforms in NR1 format.See AlsoIntroduction to :MTESt Commands:MTESt:COUNt:WAVeforms:MTESt:COUNt:TIME:MTESt:COUNt:RESet:MTESt:SOURceExample CodeExample Code</c><c> :MTESt:COUNt:RESet:MTESt Commands Name:MTESt:COUNt:RESet � Command Syntax:MTESt:COUNt:RESetThe :MTESt:COUNt:RESet command resets the mask statistics.See AlsoIntroduction to :MTESt Commands:MTESt:COUNt:WAVeforms:MTESt:COUNt:FWAVeforms:MTESt:COUNt:TIME</c><c> :MTESt:COUNt:TIME:MTESt Commands Name:MTESt:COUNt:TIME � Query Syntax:MTESt:COUNt:TIME?The :MTESt:COUNt:TIME? query returns the elapsed time in the current mask test run.Return Format&lt;time&gt;&lt;NL&gt;&lt;time&gt; ::= elapsed seconds in NR3 format.See AlsoIntroduction to :MTESt Commands:MTESt:COUNt:WAVeforms:MTESt:COUNt:FWAVeforms:MTESt:COUNt:RESetExample CodeExample Code</c><c> :MTESt:COUNt:WAVeforms:MTESt Commands Name:MTESt:COUNt:WAVeforms � Query Syntax:MTESt:COUNt:WAVeforms?The :MTESt:COUNt:WAVeforms? query returns the total number of waveforms acquired in the current mask test run.Return Format&lt;count&gt;&lt;NL&gt;&lt;count&gt; ::= number of waveforms in NR1 format.See AlsoIntroduction to :MTESt Commands:MTESt:COUNt:FWAVeforms:MTESt:COUNt:TIME:MTESt:COUNt:RESetExample CodeExample Code</c><c> :MTESt:DATA:MTESt Commands Name:MTESt:DATA � Command Syntax:MTESt:DATA &lt;mask&gt;&lt;mask&gt; ::= binary block data in IEEE 488.2 # format.The :MTESt:DATA command loads a mask from binary block data. These are the data bytes found in a *.msk file.Query Syntax:MTESt:DATA?The :MTESt:DATA? query returns a mask in binary block data format. The format for the data transmission is the # definite-length format defined in the IEEE 488.2 specification.Return Format&lt;mask&gt;&lt;NL&gt;&lt;mask&gt; ::= binary block data in IEEE 488.2 # formatSee Also:SAVE:MASK[:STARt]:RECall:MASK[:STARt]</c><c> :MTESt:DELete:MTESt Commands Name:MTESt:DELete � Command Syntax:MTESt:DELeteThe :MTESt:DELete command clears the currently loaded mask.See AlsoIntroduction to :MTESt Commands:MTESt:AMASk:CREate</c><c> :MTESt:ENABle:MTESt Commands Name:MTESt:ENABle � Command Syntax:MTESt:ENABle &lt;on_off&gt;&lt;on_off&gt; ::= {{1 | ON} | {0 | OFF}}The :MTESt:ENABle command enables or disables the mask test features.ON � Enables the mask test features.OFF � Disables the mask test features.Query Syntax:MTESt:ENABle?The :MTESt:ENABle? query returns the current state of mask test features.Return Format&lt;on_off&gt;&lt;NL&gt;&lt;on_off&gt; ::= {1 | 0}See AlsoIntroduction to :MTESt Commands</c><c> :MTESt:LOCK:MTESt Commands Name:MTESt:LOCK � Command Syntax:MTESt:LOCK &lt;on_off&gt;&lt;on_off&gt; ::= {{1 | ON} | {0 | OFF}}The :MTESt:LOCK command enables or disables the mask lock feature:ON � Locks a mask to the SOURce. As the vertical or horizontal scaling or position of the SOURce changes, the mask is redrawn accordingly.OFF � The mask is static and does not move.Query Syntax:MTESt:LOCK?The :MTESt:LOCK? query returns the current mask lock setting.Return Format&lt;on_off&gt;&lt;NL&gt;&lt;on_off&gt; ::= {1 | 0}See AlsoIntroduction to :MTESt Commands:MTESt:SOURce</c><c> :MTESt:RMODe:MTESt Commands Name:MTESt:RMODe � Command Syntax:MTESt:RMODe &lt;rmode&gt;&lt;rmode&gt; ::= {FORever | SIGMa | TIME | WAVeforms}The :MTESt:RMODe command specifies the termination conditions for the mask test:FORever � the mask test runs until it is turned off.SIGMa � the mask test runs until the Sigma level is reached. This level is set by the :MTESt:RMODe:SIGMa command.TIME � the mask test runs for a fixed amount of time. The amount of time is set by the :MTESt:RMODe:TIME command.WAVeforms � the mask test runs until a fixed number of waveforms are acquired. The number of waveforms is set by the :MTESt:RMODe:WAVeforms command.Query Syntax:MTESt:RMODe?The :MTESt:RMODe? query returns the currently set termination condition.Return Format&lt;rmode&gt;&lt;NL&gt;&lt;rmode&gt; ::= {FOR | SIGM | TIME | WAV}See AlsoIntroduction to :MTESt Commands:MTESt:RMODe:SIGMa:MTESt:RMODe:TIME:MTESt:RMODe:WAVeformsExample CodeExample Code</c><c> :MTESt:RMODe:FACTion:MEASure:MTESt Commands Name:MTESt:RMODe:FACTion:MEASure � Command Syntax:MTESt:RMODe:FACTion:MEASure &lt;on_off&gt;&lt;on_off&gt; ::= {{1 | ON} | {0 | OFF}}The :MTESt:RMODe:FACTion:MEASure command sets measuring only mask failures on or off.When ON, measurements and measurement statistics run only on waveforms that contain a mask violation; passing waveforms do not affect measurements and measurement statistics.This mode is not available when the acquisition mode is set to Averaging.Query Syntax:MTESt:RMODe:FACTion:MEASure?The :MTESt:RMODe:FACTion:MEASure? query returns the current mask failure measure setting.Return Format&lt;on_off&gt;&lt;NL&gt;&lt;on_off&gt; ::= {1 | 0}See AlsoIntroduction to :MTESt Commands:MTESt:RMODe:FACTion:PRINt:MTESt:RMODe:FACTion:SAVE:MTESt:RMODe:FACTion:STOP</c><c> :MTESt:RMODe:FACTion:PRINt:MTESt Commands Name:MTESt:RMODe:FACTion:PRINt � Command Syntax:MTESt:RMODe:FACTion:PRINt &lt;on_off&gt;&lt;on_off&gt; ::= {{1 | ON} | {0 | OFF}}The :MTESt:RMODe:FACTion:PRINt command sets printing on mask failures on or off.Setting :MTESt:RMODe:FACTion:PRINt ON automatically sets :MTESt:RMODe:FACTion:SAVE OFF.See :HARDcopy Commands for more information on setting the hardcopy device and formatting options.Query Syntax:MTESt:RMODe:FACTion:PRINt?The :MTESt:RMODe:FACTion:PRINt? query returns the current mask failure print setting.Return Format&lt;on_off&gt;&lt;NL&gt;&lt;on_off&gt; ::= {1 | 0}See AlsoIntroduction to :MTESt Commands:MTESt:RMODe:FACTion:MEASure:MTESt:RMODe:FACTion:SAVE:MTESt:RMODe:FACTion:STOP</c><c> :MTESt:RMODe:FACTion:SAVE:MTESt Commands Name:MTESt:RMODe:FACTion:SAVE � Command Syntax:MTESt:RMODe:FACTion:SAVE &lt;on_off&gt;&lt;on_off&gt; ::= {{1 | ON} | {0 | OFF}}The :MTESt:RMODe:FACTion:SAVE command sets saving on mask failures on or off.Setting :MTESt:RMODe:FACTion:SAVE ON automatically sets :MTESt:RMODe:FACTion:PRINt OFF.See :SAVE Commands for more information on save options.Query Syntax:MTESt:RMODe:FACTion:SAVE?The :MTESt:RMODe:FACTion:SAVE? query returns the current mask failure save setting.Return Format&lt;on_off&gt;&lt;NL&gt;&lt;on_off&gt; ::= {1 | 0}See AlsoIntroduction to :MTESt Commands:MTESt:RMODe:FACTion:MEASure:MTESt:RMODe:FACTion:PRINt:MTESt:RMODe:FACTion:STOP</c><c> :MTESt:RMODe:FACTion:STOP:MTESt Commands Name:MTESt:RMODe:FACTion:STOP � Command Syntax:MTESt:RMODe:FACTion:STOP &lt;on_off&gt;&lt;on_off&gt; ::= {{1 | ON} | {0 | OFF}}The :MTESt:RMODe:FACTion:STOP command sets stopping on a mask failure on or off. When this setting is ON and a mask violation is detected, the mask test is stopped and the acquisition system is stopped.Query Syntax:MTESt:RMODe:FACTion:STOP?The :MTESt:RMODe:FACTion:STOP? query returns the current mask failure stop setting.Return Format&lt;on_off&gt;&lt;NL&gt;&lt;on_off&gt; ::= {1 | 0}See AlsoIntroduction to :MTESt Commands:MTESt:RMODe:FACTion:MEASure:MTESt:RMODe:FACTion:PRINt:MTESt:RMODe:FACTion:SAVE</c><c> :MTESt:RMODe:SIGMa:MTESt Commands Name:MTESt:RMODe:SIGMa � Command Syntax:MTESt:RMODe:SIGMa &lt;level&gt;&lt;level&gt; ::= from 0.1 to 9.3 in NR3 formatWhen the :MTESt:RMODe command is set to SIGMa, the :MTESt:RMODe:SIGMa command sets the test sigma level to which a mask test runs. Test sigma is the best achievable process sigma, assuming no failures. (Process sigma is calculated using the number of failures per test.) The test sigma level indirectly specifies the number of waveforms that must be tested (in order to reach the sigma level).Query Syntax:MTESt:RMODe:SIGMa?The :MTESt:RMODe:SIGMa? query returns the current Sigma level setting.Return Format&lt;level&gt;&lt;NL&gt;&lt;level&gt; ::= from 0.1 to 9.3 in NR3 formatSee AlsoIntroduction to :MTESt Commands:MTESt:RMODeExample CodeExample Code</c><c> :MTESt:RMODe:TIME:MTESt Commands Name:MTESt:RMODe:TIME � Command Syntax:MTESt:RMODe:TIME &lt;seconds&gt;&lt;seconds&gt; ::= from 1 to 86400 in NR3 formatWhen the :MTESt:RMODe command is set to TIME, the :MTESt:RMODe:TIME command sets the number of seconds for a mask test to run.Query Syntax:MTESt:RMODe:TIME?The :MTESt:RMODe:TIME? query returns the number of seconds currently set.Return Format&lt;seconds&gt;&lt;NL&gt;&lt;seconds&gt; ::= from 1 to 86400 in NR3 formatSee AlsoIntroduction to :MTESt Commands:MTESt:RMODe</c><c> :MTESt:RMODe:WAVeforms:MTESt Commands Name:MTESt:RMODe:WAVeforms � Command Syntax:MTESt:RMODe:WAVeforms &lt;count&gt;&lt;count&gt; ::= number of waveforms in NR1 format from 1 to 2,000,000,000When the :MTESt:RMODe command is set to WAVeforms, the :MTESt:RMODe:WAVeforms command sets the number of waveform acquisitions that are mask tested.Query Syntax:MTESt:RMODe:WAVeforms?The :MTESt:RMODe:WAVeforms? query returns the number of waveforms currently set.Return Format&lt;count&gt;&lt;NL&gt;&lt;count&gt; ::= number of waveforms in NR1 format from 1 to 2,000,000,000See AlsoIntroduction to :MTESt Commands:MTESt:RMODe</c><c> :MTESt:SCALe:BIND:MTESt Commands Name:MTESt:SCALe:BIND � Command Syntax:MTESt:SCALe:BIND &lt;on_off&gt;&lt;on_off&gt; ::= {{1 | ON} | {0 | OFF}}The :MTESt:SCALe:BIND command enables or disables Bind 1 &amp; 0 Levels (Bind -1 &amp; 0 Levels for inverted masks) control:ON �If the Bind 1 &amp; 0 Levels control is enabled, the 1 Level and the 0 Level controls track each other. Adjusting either the 1 Level or the 0 Level control shifts the position of the mask up or down without changing its size.If the Bind -1 &amp; 0 Levels control is enabled, the -1 Level and the 0 Level controls track each other. Adjusting either the -1 Level or the 0 Level control shifts the position of the mask up or down without changing its size.OFF �If the Bind 1 &amp; 0 Levels control is disabled, adjusting either the 1 Level or the 0 Level control changes the vertical height of the mask.If the Bind -1 &amp; 0 Levels control is disabled, adjusting either the -1 Level or the 0 Level control changes the vertical height of the mask.Query Syntax:MTESt:SCALe:BIND?The :MTESt:SCALe:BIND? query returns the value of the Bind 1&amp;0 control (Bind -1&amp;0 for inverted masks).Return Format&lt;on_off&gt;&lt;NL&gt;&lt;on_off&gt; ::= {1 | 0}See AlsoIntroduction to :MTESt Commands:MTESt:SCALe:X1:MTESt:SCALe:XDELta:MTESt:SCALe:Y1:MTESt:SCALe:Y2</c><c> :MTESt:SCALe:X1:MTESt Commands Name:MTESt:SCALe:X1 � Command Syntax:MTESt:SCALe:X1 &lt;x1_value&gt;&lt;x1_value&gt; ::= X1 value in NR3 formatThe :MTESt:SCALe:X1 command defines where X=0 in the base coordinate system used for mask testing. The other X-coordinate is defined by the :MTESt:SCALe:XDELta command. Once the X1 and XDELta coordinates are set, all X values of vertices in the mask regions are defined with respect to this value, according to the equation:X = (X * ΔX) + X1Thus, if you set X1 to 100 ms, and XDELta to 100 ms, an X value of 0.100 is a vertex at 110 ms.The oscilloscope uses this equation to normalize vertices. This simplifies reprogramming to handle different data rates. For example, if you halve the period of the waveform of interest, you need only to adjust the XDELta value to set up the mask for the new waveform.The X1 value is a time value specifying the location of the X1 coordinate, which will then be treated as X=0 for mask regions coordinates.Query Syntax:MTESt:SCALe:X1?The :MTESt:SCALe:X1? query returns the current X1 coordinate setting.Return Format&lt;x1_value&gt;&lt;NL&gt;&lt;x1_value&gt; ::= X1 value in NR3 formatSee AlsoIntroduction to :MTESt Commands:MTESt:SCALe:BIND:MTESt:SCALe:XDELta:MTESt:SCALe:Y1:MTESt:SCALe:Y2</c><c> :MTESt:SCALe:XDELta:MTESt Commands Name:MTESt:SCALe:XDELta � Command Syntax:MTESt:SCALe:XDELta &lt;xdelta_value&gt;&lt;xdelta_value&gt; ::= X delta value in NR3 formatThe :MTESt:SCALe:XDELta command defines the position of the X2 marker with respect to the X1 marker. In the mask test coordinate system, the X1 marker defines where X=0; thus, the X2 marker defines where X=1.Because all X vertices of the regions defined for mask testing are normalized with respect to X1 and ΔX, redefining ΔX also moves those vertices to stay in the same locations with respect to X1 and ΔX. Thus, in many applications, it is best if you define XDELta as a pulse width or bit period. Then, a change in data rate without corresponding changes in the waveform can easily be handled by changing ΔX.The X-coordinate of polygon vertices is normalized using this equation:X = (X * ΔX) + X1The X delta value is a time value specifying the distance of the X2 marker with respect to the X1 marker.For example, if the period of the waveform you wish to test is 1 ms, setting ΔX to 1 ms ensures that the waveform's period is between the X1 and X2 markers.Query Syntax:MTESt:SCALe:XDELta?The :MTESt:SCALe:XDELta? query returns the current value of ΔX.Return Format&lt;xdelta_value&gt;&lt;NL&gt;&lt;xdelta_value&gt; ::= X delta value in NR3 formatSee AlsoIntroduction to :MTESt Commands:MTESt:SCALe:BIND:MTESt:SCALe:X1:MTESt:SCALe:Y1:MTESt:SCALe:Y2</c><c> :MTESt:SCALe:Y1:MTESt Commands Name:MTESt:SCALe:Y1 � Command Syntax:MTESt:SCALe:Y1 &lt;y1_value&gt;&lt;y1_value&gt; ::= Y1 value in NR3 formatThe :MTESt:SCALe:Y1 command defines where Y=0 in the coordinate system for mask testing. All Y values of vertices in the coordinate system are defined with respect to the boundaries set by SCALe:Y1 and SCALe:Y2 according to the equation:Y = (Y * (Y2 - Y1)) + Y1Thus, if you set Y1 to 100 mV, and Y2 to 1 V, a Y value of 0.100 in a vertex is at 190 mV.The Y1 value is a voltage value specifying the point at which Y=0.Query Syntax:MTESt:SCALe:Y1?The :MTESt:SCALe:Y1? query returns the current setting of the Y1 marker.Return Format&lt;y1_value&gt;&lt;NL&gt;&lt;y1_value&gt; ::= Y1 value in NR3 formatSee AlsoIntroduction to :MTESt Commands:MTESt:SCALe:BIND:MTESt:SCALe:X1:MTESt:SCALe:XDELta:MTESt:SCALe:Y2</c><c> :MTESt:SCALe:Y2:MTESt Commands Name:MTESt:SCALe:Y2 � Command Syntax:MTESt:SCALe:Y2 &lt;y2_value&gt;&lt;y2_value&gt; ::= Y2 value in NR3 formatThe :MTESt:SCALe:Y2 command defines the Y2 marker in the coordinate system for mask testing. All Y values of vertices in the coordinate system are defined with respect to the boundaries defined by SCALe:Y1 and SCALe:Y2 according to the following equation:Y = (Y * (Y2 - Y1)) + Y1Thus, if you set Y1 to 100 mV, and Y2 to 1 V, a Y value of 0.100 in a vertex is at 190 mV.The Y2 value is a voltage value specifying the location of the Y2 marker.Query Syntax:MTESt:SCALe:Y2?The :MTESt:SCALe:Y2? query returns the current setting of the Y2 marker.Return Format&lt;y2_value&gt;&lt;NL&gt;&lt;y2_value&gt; ::= Y2 value in NR3 formatSee AlsoIntroduction to :MTESt Commands:MTESt:SCALe:BIND:MTESt:SCALe:X1:MTESt:SCALe:XDELta:MTESt:SCALe:Y1</c><c> :MTESt:SOURce:MTESt Commands Name:MTESt:SOURce � Command Syntax:MTESt:SOURce &lt;source&gt;&lt;source&gt; ::= CHANnel&lt;n&gt;&lt;n&gt; ::= 1 to (# analog channels) in NR1 formatThe :MTESt:SOURce command selects the channel which is configured by the commands contained in a mask file when it is loaded.Query Syntax:MTESt:SOURce?The :MTESt:SOURce? query returns the channel which is configured by the commands contained in the current mask file.Return Format&lt;source&gt;&lt;NL&gt;&lt;source&gt; ::= {CHAN&lt;n&gt; | NONE}&lt;n&gt; ::= 1 to (# analog channels) in NR1 formatSee AlsoIntroduction to :MTESt Commands:MTESt:AMASk:SOURce</c><c> :MTESt:TITLe:MTESt Commands Name:MTESt:TITLe � Query Syntax:MTESt:TITLe?The :MTESt:TITLe? query returns the mask title which is a string of up to 128 characters. The title is displayed in the mask test dialog box and mask test tab when a mask file is loaded.Return Format&lt;title&gt;&lt;NL&gt;&lt;title&gt; ::= a string of up to 128 ASCII characters.See AlsoIntroduction to :MTESt Commands</c><c> :OPEE (Operation Status Enable Register)Root (:) Commands Name:OPEE (Operation Status Enable Register) � Command Syntax:OPEE &lt;mask&gt;&lt;mask&gt; ::= 15-bit integerThe :OPEE command sets a mask in the Operation Status Enable register. Set any of the following bits to "1" to enable bit 7 in the Status Byte Register and potentially cause an SRQ (Service Request interrupt to be generated.Operation Status Enable Register (OPEE):BitNameDescriptionWhen Set (1 = High = True), Enables:14-12------(Not used.)11OVLROverloadEvent when 50Ω input overload occurs.10------(Not used.)9MTEMask Test EventEvent when mask test event occurs.8-6------(Not used.)5Wait TrigWait TrigEvent when the trigger is armed.4------(Not used.)3RunRunningEvent when the oscilloscope is running (not stopped).2-0------(Not used.)Query Syntax:OPEE?The :OPEE? query returns the current value contained in the Operation Status Enable register as an integer number.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= integer in NR1 format.See AlsoIntroduction to Root (:) Commands:AER (Arm Event Register):CHANnel&lt;n&gt;:PROTection:OPERegister[:EVENt] (Operation Status Event Register):OVLenable (Overload Event Enable Register):OVLRegister (Overload Event Register)*STB (Read Status Byte)*SRE (Service Request Enable)</c><c> :OPERegister:CONDition (Operation Status Condition Register)Root (:) Commands Name:OPERegister:CONDition (Operation Status Condition Register) � Query Syntax:OPERegister:CONDition?The :OPERegister:CONDition? query returns the integer value contained in the Operation Status Condition Register.Operation Status Condition Register:BitNameDescriptionWhen Set (1 = High = True), Indicates:14-12------(Not used.)11OVLROverloadA 50Ω input overload has occurred.10------(Not used.)9MTEMask Test EventA mask test event has occurred.8-6------(Not used.)5Wait TrigWait TrigThe trigger is armed (set by the Trigger Armed Event Register (TER)).4------(Not used.)3RunRunningThe oscilloscope is running (not stopped).2-0------(Not used.)Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= integer in NR1 format.See AlsoIntroduction to Root (:) Commands:CHANnel&lt;n&gt;:PROTection:OPEE (Operation Status Enable Register):OPERegister[:EVENt] (Operation Status Event Register):OVLenable (Overload Event Enable Register):OVLRegister (Overload Event Register)*STB (Read Status Byte)*SRE (Service Request Enable):MTERegister[:EVENt] (Mask Test Event Event Register):MTEenable (Mask Test Event Enable Register)</c><c> :OPERegister[:EVENt] (Operation Status Event Register)Root (:) Commands Name:OPERegister[:EVENt] (Operation Status Event Register) � Query Syntax:OPERegister[:EVENt]?The :OPERegister[:EVENt]? query returns the integer value contained in the Operation Status Event Register.Operation Status Event Register:BitNameDescriptionWhen Set (1 = High = True), Indicates:14-12------(Not used.)11OVLROverloadA 50Ω input overload has occurred.10------(Not used.)9MTEMask Test EventA mask test event has occurred.8-6------(Not used.)5Wait TrigWait TrigThe trigger is armed (set by the Trigger Armed Event Register (TER)).4------(Not used.)3RunRunningThe oscilloscope has gone from a stop state to a single or running state.2-0------(Not used.)Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= integer in NR1 format.See AlsoIntroduction to Root (:) Commands:CHANnel&lt;n&gt;:PROTection:OPEE (Operation Status Enable Register):OPERegister:CONDition (Operation Status Condition Register):OVLenable (Overload Event Enable Register):OVLRegister (Overload Event Register)*STB (Read Status Byte)*SRE (Service Request Enable):MTERegister[:EVENt] (Mask Test Event Event Register):MTEenable (Mask Test Event Enable Register)</c><c> :OVLenable (Overload Event Enable Register)Root (:) Commands Name:OVLenable (Overload Event Enable Register) � Command Syntax:OVLenable &lt;enable_mask&gt;&lt;enable_mask&gt; ::= 16-bit integerThe overload enable mask is an integer representing an input as described in the following table.The :OVLenable command sets the mask in the Overload Event Enable Register and enables the reporting of the Overload Event Register. If an overvoltage is sensed on a 50Ω input, the input will automatically switch to 1 MΩ input impedance. If enabled, such an event will set bit 11 in the Operation Status Register.You can set analog channel input impedance to 50Ω on the 300 MHz, 500 MHz, and 1 GHz bandwidth oscilloscope models. On these same bandwidth models, if there are only two analog channels, you can also set external trigger input impedance to 50Ω.Overload Event Enable Register (OVL):BitDescriptionWhen Set (1 = High = True), Enables:15-10---(Not used.)9Channel 4 FaultEvent when fault occurs on Channel 4 input.8Channel 3 FaultEvent when fault occurs on Channel 3 input.7Channel 2 FaultEvent when fault occurs on Channel 2 input.6Channel 1 FaultEvent when fault occurs on Channel 1 input.5-4---(Not used.)3Channel 4 OVLEvent when overload occurs on Channel 4 input.2Channel 3 OVLEvent when overload occurs on Channel 3 input.1Channel 2 OVLEvent when overload occurs on Channel 2 input.0Channel 1 OVLEvent when overload occurs on Channel 1 input.Query Syntax:OVLenable?The :OVLenable query returns the current enable mask value contained in the Overload Event Enable Register.Return Format&lt;enable_mask&gt;&lt;NL&gt;&lt;enable_mask&gt; ::= integer in NR1 format.See AlsoIntroduction to Root (:) Commands:CHANnel&lt;n&gt;:PROTection:OPEE (Operation Status Enable Register):OPERegister:CONDition (Operation Status Condition Register):OPERegister[:EVENt] (Operation Status Event Register):OVLRegister (Overload Event Register)*STB (Read Status Byte)*SRE (Service Request Enable)</c><c> :OVLRegister (Overload Event Register)Root (:) Commands Name:OVLRegister (Overload Event Register) � Query Syntax:OVLRegister?The :OVLRegister query returns the overload protection value stored in the Overload Event Register (OVLR). If an overvoltage is sensed on a 50Ω input, the input will automatically switch to 1 MΩ input impedance. A "1" indicates an overload has occurred.You can set analog channel input impedance to 50Ω on the 300 MHz, 500 MHz, and 1 GHz bandwidth oscilloscope models. On these same bandwidth models, if there are only two analog channels, you can also set external trigger input impedance to 50Ω.Overload Event Register (OVLR):BitDescriptionWhen Set (1 = High = True), Indicates:15-10---(Not used.)9Channel 4 FaultFault has occurred on Channel 4 input.8Channel 3 FaultFault has occurred on Channel 3 input.7Channel 2 FaultFault has occurred on Channel 2 input.6Channel 1 FaultFault has occurred on Channel 1 input.5-4---(Not used.)3Channel 4 OVLOverload has occurred on Channel 4 input.2Channel 3 OVLOverload has occurred on Channel 3 input.1Channel 2 OVLOverload has occurred on Channel 2 input.0Channel 1 OVLOverload has occurred on Channel 1 input.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= integer in NR1 format.See AlsoIntroduction to Root (:) Commands:CHANnel&lt;n&gt;:PROTection:OPEE (Operation Status Enable Register):OVLenable (Overload Event Enable Register)*STB (Read Status Byte)*SRE (Service Request Enable)</c><c>Introduction to :POD&lt;n&gt; Commands&lt;n&gt; ::= 1The POD subsystem commands control the viewing and threshold of groups of digital channels.POD1 ::= D0-D7These commands are only valid for the MSO models.Reporting the Setup. Use :POD1? to query setup information for the POD subsystem.Return Format. The following is a sample response from the :POD1? query. In this case, the query was issued following a *RST command.:POD1:DISP 0;THR 1.40E+00</c><c> :POD&lt;n&gt;:DISPlay:POD Commands Name:POD&lt;n&gt;:DISPlay � Command Syntax:POD&lt;n&gt;:DISPlay &lt;display&gt;&lt;display&gt; ::= {{1 | ON} | {0 | OFF}}&lt;n&gt; ::= An integer, 1, is attached as a suffix to the command and defines the group of channels that are affected by the command.POD1 ::= D0-D7The :POD&lt;n&gt;:DISPlay command turns displaying of the specified group of channels on or off.This command is only valid for the MSO models.Query Syntax:POD&lt;n&gt;:DISPlay?The :POD&lt;n&gt;:DISPlay? query returns the current display setting of the specified group of channels.Return Format&lt;display&gt;&lt;NL&gt;&lt;display&gt; ::= {0 | 1}See AlsoIntroduction to :POD&lt;n&gt; Commands:DIGital&lt;d&gt;:DISPlay:CHANnel&lt;n&gt;:DISPlay:VIEW:BLANk:STATus</c><c> :POD&lt;n&gt;:SIZE:POD Commands Name:POD&lt;n&gt;:SIZE � Command Syntax:POD&lt;n&gt;:SIZE &lt;value&gt;&lt;n&gt; ::= An integer, 1, is attached as a suffix to the command and defines the group of channels that are affected by the command.POD1 ::= D0-D7&lt;value&gt; ::= {SMALl | MEDium | LARGe}The :POD&lt;n&gt;:SIZE command specifies the size of digital channels on the display.This command is only valid for the MSO models.Query Syntax:POD&lt;n&gt;:SIZE?The :POD&lt;n&gt;:SIZE? query returns the digital channels size setting.Return Format&lt;size_value&gt;&lt;NL&gt;&lt;size_value&gt; ::= {SMAL | MED | LARG}See AlsoIntroduction to :POD&lt;n&gt; Commands:DIGital&lt;d&gt;:SIZE:DIGital&lt;d&gt;:POSition</c><c> :POD&lt;n&gt;:THReshold:POD Commands Name:POD&lt;n&gt;:THReshold � Command Syntax:POD&lt;n&gt;:THReshold &lt;type&gt;[&lt;suffix&gt;]&lt;n&gt; ::= An integer, 1, is attached as a suffix to the command and defines the group of channels that are affected by the command.&lt;type&gt; ::= {CMOS | ECL | TTL | &lt;user defined value&gt;}&lt;user defined value&gt; ::= -8.00 to +8.00 in NR3 format&lt;suffix&gt; ::= {V | mV | uV}POD1 ::= D0-D7TTL ::= 1.4VCMOS ::= 2.5VECL ::= -1.3VThe :POD&lt;n&gt;:THReshold command sets the threshold for the specified group of channels. The threshold is used for triggering purposes and for displaying the digital data as high (above the threshold) or low (below the threshold).This command is only valid for the MSO models.Query Syntax:POD&lt;n&gt;:THReshold?The :POD&lt;n&gt;:THReshold? query returns the threshold value for the specified group of channels.Return Format&lt;threshold&gt;&lt;NL&gt;&lt;threshold&gt; ::= Floating point number in NR3 formatSee AlsoIntroduction to :POD&lt;n&gt; Commands:DIGital&lt;d&gt;:THReshold:TRIGger[:EDGE]:LEVelExample Code ' THRESHOLD - This command is used to set the voltage threshold for ' the waveforms. There are three preset values (TTL, CMOS, and ECL) ' and you can also set a user-defined threshold value between ' -8.0 volts and +8.0 volts. ' ' In this example, we set channels 0-7 to CMOS, and then set the ' external trigger to TTL. Of course, you only need to set the ' thresholds for the channels you will be using in your program. ' Set channels 0-7 to CMOS threshold. myScope.WriteString ":POD1:THRESHOLD CMOS" ' Set external channel to TTL threshold (short form). myScope.WriteString ":TRIG:LEV TTL,EXT"See complete example programs at: Programming Examples</c><c> :PRINtRoot (:) Commands Name:PRINt � Command Syntax:PRINt [&lt;options&gt;]&lt;options&gt; ::= [&lt;print option&gt;][,..,&lt;print option&gt;]&lt;print option&gt; ::= {COLor | GRAYscale | PRINter0 | PRINter1 | BMP8bit | BMP | PNG | NOFactors | FACTors}The &lt;print option&gt; parameter may be repeated up to 5 times.The PRINt command formats the output according to the currently selected format (device). If an option is not specified, the value selected in the Print Config menu is used.See AlsoIntroduction to Root (:) CommandsIntroduction to :HARDcopy Commands:HARDcopy:FACTors:HARDcopy:GRAYscale:DISPlay:DATA</c><c> :RECall:FILename:RECall Commands Name:RECall:FILename � Command Syntax:RECall:FILename &lt;base_name&gt;&lt;base_name&gt; ::= quoted ASCII stringThe :RECall:FILename command specifies the source for any RECall operations.This command specifies a file's base name only, without path information or an extension.Query Syntax:RECall:FILename?The :RECall:FILename? query returns the current RECall filename.Return Format&lt;base_name&gt;&lt;NL&gt;&lt;base_name&gt; ::= quoted ASCII stringSee AlsoIntroduction to :RECall Commands:RECall:SETup[:STARt]:SAVE:FILename</c><c> :RECall:MASK[:STARt]:RECall Commands Name:RECall:MASK[:STARt] � Command Syntax:RECall:MASK[:STARt] [&lt;file_spec&gt;]&lt;file_spec&gt; ::= {&lt;internal_loc&gt; | &lt;file_name&gt;}&lt;internal_loc&gt; ::= 0-3; an integer in NR1 format&lt;file_name&gt; ::= quoted ASCII stringThe :RECall:MASK[:STARt] command recalls a mask.If a file extension is provided as part of a specified &lt;file_name&gt;, it must be ".msk".See AlsoIntroduction to :RECall Commands:RECall:FILename:SAVE:MASK[:STARt]:MTESt:DATA</c><c> :RECall:PWD:RECall Commands Name:RECall:PWD � Command Syntax:RECall:PWD &lt;path_name&gt;&lt;path_name&gt; ::= quoted ASCII stringThe :RECall:PWD command sets the present working directory for recall operations.Query Syntax:RECall:PWD?The :RECall:PWD? query returns the currently set working directory for recall operations.Return Format&lt;path_name&gt;&lt;NL&gt;&lt;path_name&gt; ::= quoted ASCII stringSee AlsoIntroduction to :RECall Commands:SAVE:PWD</c><c> :RECall:SETup[:STARt]:RECall Commands Name:RECall:SETup[:STARt] � Command Syntax:RECall:SETup[:STARt] [&lt;file_spec&gt;]&lt;file_spec&gt; ::= {&lt;internal_loc&gt; | &lt;file_name&gt;}&lt;internal_loc&gt; ::= 0-9; an integer in NR1 format&lt;file_name&gt; ::= quoted ASCII stringThe :RECall:SETup[:STARt] command recalls an oscilloscope setup.If a file extension is provided as part of a specified &lt;file_name&gt;, it must be ".scp".See AlsoIntroduction to :RECall Commands:RECall:FILename:SAVE:SETup[:STARt]</c><c> :RECall:WMEMory&lt;r&gt;[:STARt]:RECall Commands Name:RECall:WMEMory&lt;r&gt;[:STARt] � Command Syntax:RECall:WMEMory&lt;r&gt;[:STARt] [&lt;file_name&gt;]&lt;r&gt; ::= 1-2 in NR1 format&lt;file_name&gt; ::= quoted ASCII stringThe :RECall:WMEMory&lt;r&gt;[:STARt] command recalls a reference waveform.If a file extension is provided as part of a specified &lt;file_name&gt;, it must be ".h5".See AlsoIntroduction to :RECall Commands:RECall:FILename:SAVE:WMEMory[:STARt]</c><c> :RUNRoot (:) Commands Name:RUN � Command Syntax:RUNThe :RUN command starts repetitive acquisitions. This is the same as pressing the Run key on the front panel.See AlsoIntroduction to Root (:) Commands:SINGle:STOPExample Code ' RUN_STOP - (not executed in this example) ' - RUN starts the data acquisition for the active waveform display. ' - STOP stops the data acquisition and turns off AUTOSTORE. ' myScope.WriteString ":RUN" ' Start data acquisition. ' myScope.WriteString ":STOP" ' Stop the data acquisition.See complete example programs at: Programming Examples</c><c> :SAVE:FILename:SAVE Commands Name:SAVE:FILename � Command Syntax:SAVE:FILename &lt;base_name&gt;&lt;base_name&gt; ::= quoted ASCII stringThe :SAVE:FILename command specifies the source for any SAVE operations.This command specifies a file's base name only, without path information or an extension.Query Syntax:SAVE:FILename?The :SAVE:FILename? query returns the current SAVE filename.Return Format&lt;base_name&gt;&lt;NL&gt;&lt;base_name&gt; ::= quoted ASCII stringSee AlsoIntroduction to :SAVE Commands:SAVE:IMAGe[:STARt]:SAVE:SETup[:STARt]:SAVE:WAVeform[:STARt]:SAVE:PWD:RECall:FILename</c><c> :SAVE:IMAGe:FACTors:SAVE Commands Name:SAVE:IMAGe:FACTors � Command Syntax:SAVE:IMAGe:FACTors &lt;factors&gt;&lt;factors&gt; ::= {{OFF | 0} | {ON | 1}}The :SAVE:IMAGe:FACTors command controls whether the oscilloscope factors are output along with the image.Factors are written to a separate file with the same path and base name but with the ".txt" extension.Query Syntax:SAVE:IMAGe:FACTors?The :SAVE:IMAGe:FACTors? query returns a flag indicating whether oscilloscope factors are output along with the image.Return Format&lt;factors&gt;&lt;NL&gt;&lt;factors&gt; ::= {0 | 1}See AlsoIntroduction to :SAVE Commands:SAVE:IMAGe[:STARt]:SAVE:IMAGe:FORMat:SAVE:IMAGe:INKSaver:SAVE:IMAGe:PALette</c><c> :SAVE:IMAGe:FORMat:SAVE Commands Name:SAVE:IMAGe:FORMat � Command Syntax:SAVE:IMAGe:FORMat &lt;format&gt;&lt;format&gt; ::= {{BMP | BMP24bit} | BMP8bit | PNG}The :SAVE:IMAGe:FORMat command sets the image format type.Query Syntax:SAVE:IMAGe:FORMat?The :SAVE:IMAGe:FORMat? query returns the selected image format type.Return Format&lt;format&gt;&lt;NL&gt;&lt;format&gt; ::= {BMP | BMP8 | PNG | NONE}When NONE is returned, it indicates that a waveform data file format is currently selected.See AlsoIntroduction to :SAVE Commands:SAVE:IMAGe[:STARt]:SAVE:IMAGe:FACTors:SAVE:IMAGe:INKSaver:SAVE:IMAGe:PALette:SAVE:WAVeform:FORMat</c><c> :SAVE:IMAGe:INKSaver:SAVE Commands Name:SAVE:IMAGe:INKSaver � Command Syntax:SAVE:IMAGe:INKSaver &lt;value&gt;&lt;value&gt; ::= {{OFF | 0} | {ON | 1}}The :SAVE:IMAGe:INKSaver command controls whether the graticule colors are inverted or not.Query Syntax:SAVE:IMAGe:INKSaver?The :SAVE:IMAGe:INKSaver? query returns a flag indicating whether graticule colors are inverted or not.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {0 | 1}See AlsoIntroduction to :SAVE Commands:SAVE:IMAGe[:STARt]:SAVE:IMAGe:FACTors:SAVE:IMAGe:FORMat:SAVE:IMAGe:PALette</c><c> :SAVE:IMAGe:PALette:SAVE Commands Name:SAVE:IMAGe:PALette � Command Syntax:SAVE:IMAGe:PALette &lt;palette&gt;&lt;palette&gt; ::= {COLor | GRAYscale}The :SAVE:IMAGe:PALette command sets the image palette color.Query Syntax:SAVE:IMAGe:PALette?The :SAVE:IMAGe:PALette? query returns the selected image palette color.Return Format&lt;palette&gt;&lt;NL&gt;&lt;palette&gt; ::= {COL | GRAY}See AlsoIntroduction to :SAVE Commands:SAVE:IMAGe[:STARt]:SAVE:IMAGe:FACTors:SAVE:IMAGe:FORMat:SAVE:IMAGe:INKSaver</c><c> :SAVE:IMAGe[:STARt]:SAVE Commands Name:SAVE:IMAGe[:STARt] � Command Syntax:SAVE:IMAGe[:STARt] [&lt;file_name&gt;]&lt;file_name&gt; ::= quoted ASCII stringThe :SAVE:IMAGe[:STARt] command saves an image.Be sure to set the :SAVE:IMAGe:FORMat before saving an image. If the format is NONE, the save image command will not succeed.If a file extension is provided as part of a specified &lt;file_name&gt;, and it does not match the extension expected by the format specified in :SAVE:IMAGe:FORMat, the format will be changed if the extension is a valid image file extension.If the extension ".bmp" is used and the current :SAVE:IMAGe:FORMat is not BMP or BMP8, the format will be changed to BMP.See AlsoIntroduction to :SAVE Commands:SAVE:IMAGe:FACTors:SAVE:IMAGe:FORMat:SAVE:IMAGe:INKSaver:SAVE:IMAGe:PALette:SAVE:FILename</c><c> :SAVE:LISTer[:STARt]:SAVE Commands Name:SAVE:LISTer[:STARt] � Command Syntax:SAVE:LISTer[:STARt] [&lt;file_name&gt;]&lt;file_name&gt; ::= quoted ASCII stringThe :SAVE:LISTer[:STARt] command saves the Lister display data to a file.If a file extension is provided as part of a specified &lt;file_name&gt;, it must be ".csv".See AlsoIntroduction to :SAVE Commands:SAVE:FILename:LISTer Commands</c><c> :SAVE:MASK[:STARt]:SAVE Commands Name:SAVE:MASK[:STARt] � Command Syntax:SAVE:MASK[:STARt] [&lt;file_spec&gt;]&lt;file_spec&gt; ::= {&lt;internal_loc&gt; | &lt;file_name&gt;}&lt;internal_loc&gt; ::= 0-3; an integer in NR1 format&lt;file_name&gt; ::= quoted ASCII stringThe :SAVE:MASK[:STARt] command saves a mask.If a file extension is provided as part of a specified &lt;file_name&gt;, it must be ".msk".See AlsoIntroduction to :SAVE Commands:SAVE:FILename:RECall:MASK[:STARt]:MTESt:DATA</c><c> :SAVE:MULTi[:STARt]:SAVE Commands Name:SAVE:MULTi[:STARt] � Command Syntax:SAVE:MULTi[:STARt] [&lt;file_name&gt;]&lt;file_name&gt; ::= quoted ASCII stringThe :SAVE:MULTi[:STARt] command saves multi-channel waveform data to a file. This file can be opened by the N8900A InfiniiView oscilloscope analysis software.If a file extension is provided as part of a specified &lt;file_name&gt;, it must be ".h5".See AlsoIntroduction to :SAVE Commands:SAVE:FILename:SAVE:PWD</c><c> :SAVE:PWD:SAVE Commands Name:SAVE:PWD � Command Syntax:SAVE:PWD &lt;path_name&gt;&lt;path_name&gt; ::= quoted ASCII stringThe :SAVE:PWD command sets the present working directory for save operations.Query Syntax:SAVE:PWD?The :SAVE:PWD? query returns the currently set working directory for save operations.Return Format&lt;path_name&gt;&lt;NL&gt;&lt;path_name&gt; ::= quoted ASCII stringSee AlsoIntroduction to :SAVE Commands:SAVE:FILename:RECall:PWD</c><c> :SAVE:SETup[:STARt]:SAVE Commands Name:SAVE:SETup[:STARt] � Command Syntax:SAVE:SETup[:STARt] [&lt;file_spec&gt;]&lt;file_spec&gt; ::= {&lt;internal_loc&gt; | &lt;file_name&gt;}&lt;internal_loc&gt; ::= 0-9; an integer in NR1 format&lt;file_name&gt; ::= quoted ASCII stringThe :SAVE:SETup[:STARt] command saves an oscilloscope setup.If a file extension is provided as part of a specified &lt;file_name&gt;, it must be ".scp".See AlsoIntroduction to :SAVE Commands:SAVE:FILename:RECall:SETup[:STARt]</c><c> :SAVE:WAVeform:FORMat:SAVE Commands Name:SAVE:WAVeform:FORMat � Command Syntax:SAVE:WAVeform:FORMat &lt;format&gt;&lt;format&gt; ::= {ASCiixy | CSV | BINary}The :SAVE:WAVeform:FORMat command sets the waveform data format type:ASCiixy � creates comma-separated value files for each analog channel that is displayed (turned on). The proper file extension for this format is ".csv".CSV � creates one comma-separated value file that contains information for all analog channels that are displayed (turned on). The proper file extension for this format is ".csv".BINary � creates an oscilloscope binary data format file. See the User's Guide for a description of this format. The proper file extension for this format is ".bin".Query Syntax:SAVE:WAVeform:FORMat?The :SAVE:WAVeform:FORMat? query returns the selected waveform data format type.Return Format&lt;format&gt;&lt;NL&gt;&lt;format&gt; ::= {ASC | CSV | BIN | NONE}When NONE is returned, it indicates that an image file format is currently selected.See AlsoIntroduction to :SAVE Commands:SAVE:WAVeform[:STARt]:SAVE:WAVeform:LENGth:SAVE:IMAGe:FORMat</c><c> :SAVE:WAVeform:LENGth:SAVE Commands Name:SAVE:WAVeform:LENGth � Command Syntax:SAVE:WAVeform:LENGth &lt;length&gt;&lt;length&gt; ::= 100 to max. length; an integer in NR1 formatWhen the :SAVE:WAVeform:LENGth:MAX setting is OFF, the :SAVE:WAVeform:LENGth command sets the waveform data length (that is, the number of points saved).When the :SAVE:WAVeform:LENGth:MAX setting is ON, the :SAVE:WAVeform:LENGth setting has no effect.Query Syntax:SAVE:WAVeform:LENGth?The :SAVE:WAVeform:LENGth? query returns the current waveform data length setting.Return Format&lt;length&gt;&lt;NL&gt;&lt;length&gt; ::= 100 to max. length; an integer in NR1 formatSee AlsoIntroduction to :SAVE Commands:SAVE:WAVeform:LENGth:MAX:SAVE:WAVeform[:STARt]:WAVeform:POINts:SAVE:WAVeform:FORMat</c><c> :SAVE:WAVeform:LENGth:MAX:SAVE Commands Name:SAVE:WAVeform:LENGth:MAX � Command Syntax:SAVE:WAVeform:LENGth:MAX &lt;setting&gt;&lt;setting&gt; ::= {{OFF | 0} | {ON | 1}}The :SAVE:WAVeform:LENGth:MAX command specifies whether maximum number of waveform data points is saved.When OFF, the :SAVE:WAVeform:LENGth command specifies the number of waveform data points saved.Query Syntax:SAVE:WAVeform:LENGth:MAX?The :SAVE:WAVeform:LENGth:MAX? query returns the current setting.Return Format&lt;setting&gt;&lt;NL&gt;&lt;setting&gt; ::= {0 | 1}See AlsoIntroduction to :SAVE Commands:SAVE:WAVeform[:STARt]:SAVE:WAVeform:LENGth</c><c> :SAVE:WAVeform:SEGMented:SAVE Commands Name:SAVE:WAVeform:SEGMented � Command Syntax:SAVE:WAVeform:SEGMented &lt;option&gt;&lt;option&gt; ::= {ALL | CURRent}When segmented memory is used for acquisitions, the :SAVE:WAVeform:SEGMented command specifies which segments are included when the waveform is saved:ALL � all acquired segments are saved.CURRent � only the currently selected segment is saved.Query Syntax:SAVE:WAVeform:SEGMented?The :SAVE:WAVeform:SEGMented? query returns the current segmented waveform save option setting.Return Format&lt;option&gt;&lt;NL&gt;&lt;option&gt; ::= {ALL | CURR}See AlsoIntroduction to :SAVE Commands:SAVE:WAVeform[:STARt]:SAVE:WAVeform:FORMat:SAVE:WAVeform:LENGth</c><c> :SAVE:WAVeform[:STARt]:SAVE Commands Name:SAVE:WAVeform[:STARt] � Command Syntax:SAVE:WAVeform[:STARt] [&lt;file_name&gt;]&lt;file_name&gt; ::= quoted ASCII stringThe :SAVE:WAVeform[:STARt] command saves oscilloscope waveform data to a file.Be sure to set the :SAVE:WAVeform:FORMat before saving waveform data. If the format is NONE, the save waveform command will not succeed.If a file extension is provided as part of a specified &lt;file_name&gt;, and it does not match the extension expected by the format specified in :SAVE:WAVeform:FORMat, the format will be changed if the extension is a valid waveform file extension.See AlsoIntroduction to :SAVE Commands:SAVE:WAVeform:FORMat:SAVE:WAVeform:LENGth:SAVE:FILename:RECall:SETup[:STARt]</c><c> :SAVE:WMEMory:SOURce:SAVE Commands Name:SAVE:WMEMory:SOURce � Command Syntax:SAVE:WMEMory:SOURce &lt;source&gt;&lt;source&gt; ::= {CHANnel&lt;n&gt; | FUNCtion | MATH | WMEMory&lt;r&gt;}&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;r&gt; ::= {1 | 2}The :SAVE:WMEMory:SOURce command selects the source to be saved as a reference waveform file.Only ADD or SUBtract math operations can be saved as reference waveforms.MATH is an alias for FUNCtion. The query will return FUNC if the source is FUNCtion or MATH.Query Syntax:SAVE:WMEMory:SOURce?The :SAVE:WMEMory:SOURce? query returns the source to be saved as a reference waveform file.Return Format&lt;source&gt;&lt;NL&gt;&lt;source&gt; ::= {CHAN&lt;n&gt; | FUNC | WMEM&lt;r&gt; | NONE}See AlsoIntroduction to :SAVE Commands:SAVE:WMEMory[:STARt]:RECall:WMEMory&lt;r&gt;[:STARt]</c><c> :SAVE:WMEMory[:STARt]:SAVE Commands Name:SAVE:WMEMory[:STARt] � Command Syntax:SAVE:WMEMory[:STARt] [&lt;file_name&gt;]&lt;file_name&gt; ::= quoted ASCII stringThe :SAVE:WMEMory[:STARt] command saves oscilloscope waveform data to a reference waveform file.If a file extension is provided as part of a specified &lt;file_name&gt;, it must be ".h5".See AlsoIntroduction to :SAVE Commands:SAVE:WMEMory:SOURce:RECall:WMEMory&lt;r&gt;[:STARt]</c><c> :SBUS&lt;n&gt;:CAN:COUNt:ERRor:SBUS&lt;n&gt;:CAN Commands Name:SBUS&lt;n&gt;:CAN:COUNt:ERRor � Query Syntax:SBUS&lt;n&gt;:CAN:COUNt:ERRor?Returns the error frame count.Return Format&lt;frame_count&gt;&lt;NL&gt;&lt;frame_count&gt; ::= integer in NR1 formatErrors-241, Hardware missingSee Also:SBUS&lt;n&gt;:CAN:COUNt:RESetIntroduction to :SBUS&lt;n&gt; Commands:SBUS&lt;n&gt;:MODE:SBUS&lt;n&gt;:CAN Commands</c><c> :SBUS&lt;n&gt;:CAN:COUNt:OVERload:SBUS&lt;n&gt;:CAN Commands Name:SBUS&lt;n&gt;:CAN:COUNt:OVERload � Query Syntax:SBUS&lt;n&gt;:CAN:COUNt:OVERload?Returns the overload frame count.Return Format&lt;frame_count&gt;&lt;NL&gt;&lt;frame_count&gt; ::= integer in NR1 formatErrors-241, Hardware missingSee Also:SBUS&lt;n&gt;:CAN:COUNt:RESetIntroduction to :SBUS&lt;n&gt; Commands:SBUS&lt;n&gt;:MODE:SBUS&lt;n&gt;:CAN Commands</c><c> :SBUS&lt;n&gt;:CAN:COUNt:RESet:SBUS&lt;n&gt;:CAN Commands Name:SBUS&lt;n&gt;:CAN:COUNt:RESet � Command Syntax:SBUS&lt;n&gt;:CAN:COUNt:RESetResets the frame counters.Errors-241, Hardware missingSee Also:SBUS&lt;n&gt;:CAN:COUNt:ERRor:SBUS&lt;n&gt;:CAN:COUNt:OVERload:SBUS&lt;n&gt;:CAN:COUNt:TOTal:SBUS&lt;n&gt;:CAN:COUNt:UTILizationIntroduction to :SBUS&lt;n&gt; Commands:SBUS&lt;n&gt;:MODE:SBUS&lt;n&gt;:CAN Commands</c><c> :SBUS&lt;n&gt;:CAN:COUNt:TOTal:SBUS&lt;n&gt;:CAN Commands Name:SBUS&lt;n&gt;:CAN:COUNt:TOTal � Query Syntax:SBUS&lt;n&gt;:CAN:COUNt:TOTal?Returns the total frame count.Return Format&lt;frame_count&gt;&lt;NL&gt;&lt;frame_count&gt; ::= integer in NR1 formatErrors-241, Hardware missingSee Also:SBUS&lt;n&gt;:CAN:COUNt:RESetIntroduction to :SBUS&lt;n&gt; Commands:SBUS&lt;n&gt;:MODE:SBUS&lt;n&gt;:CAN Commands</c><c> :SBUS&lt;n&gt;:CAN:COUNt:UTILization:SBUS&lt;n&gt;:CAN Commands Name:SBUS&lt;n&gt;:CAN:COUNt:UTILization � Query Syntax:SBUS&lt;n&gt;:CAN:COUNt:UTILization?Returns the percent utilization.Return Format&lt;percent&gt;&lt;NL&gt;&lt;percent&gt; ::= floating-point in NR3 formatErrors-241, Hardware missingSee Also:SBUS&lt;n&gt;:CAN:COUNt:RESetIntroduction to :SBUS&lt;n&gt; Commands:SBUS&lt;n&gt;:MODE:SBUS&lt;n&gt;:CAN Commands</c><c> :SBUS&lt;n&gt;:CAN:SAMPlepoint:SBUS&lt;n&gt;:CAN Commands Name:SBUS&lt;n&gt;:CAN:SAMPlepoint � Command Syntax:SBUS&lt;n&gt;:CAN:SAMPlepoint &lt;value&gt;&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {60 | 62.5 | 68 | 70 | 75 | 80 | 87.5} in NR3 formatThe :SBUS&lt;n&gt;:CAN:SAMPlepoint command sets the point during the bit time where the bit level is sampled to determine whether the bit is dominant or recessive. The sample point represents the percentage of time between the beginning of the bit time to the end of the bit time.Query Syntax:SBUS&lt;n&gt;:CAN:SAMPlepoint?The :SBUS&lt;n&gt;:CAN:SAMPlepoint? query returns the current CAN sample point setting.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {60 | 62.5 | 68 | 70 | 75 | 80 | 87.5} in NR3 formatSee AlsoIntroduction to :TRIGger Commands:SBUS&lt;n&gt;:MODE:SBUS&lt;n&gt;:CAN:TRIGger</c><c> :SBUS&lt;n&gt;:CAN:SIGNal:BAUDrate:SBUS&lt;n&gt;:CAN Commands Name:SBUS&lt;n&gt;:CAN:SIGNal:BAUDrate � Command Syntax:SBUS&lt;n&gt;:CAN:SIGNal:BAUDrate &lt;baudrate&gt;&lt;baudrate&gt; ::= integer from 10000 to 4000000 in 100 b/s increments, or 5000000The :SBUS&lt;n&gt;:CAN:SIGNal:BAUDrate command sets the standard baud rate of the CAN signal from 10 kb/s to 4 Mb/s in 100 b/s increments. If you enter a baud rate that is not divisible by 100 b/s, the baud rate is set to the nearest baud rate divisible by 100 b/s.You can also set the baud rate of the CAN signal to 5 Mb/s. Fractional baud rates between 4 Mb/s and 5 Mb/s are not allowed.If the baud rate you select does not match the system baud rate, false triggers may occur.Query Syntax:SBUS&lt;n&gt;:CAN:SIGNal:BAUDrate?The :SBUS&lt;n&gt;:CAN:SIGNal:BAUDrate? query returns the current CAN baud rate setting.Return Format&lt;baudrate&gt;&lt;NL&gt;&lt;baudrate&gt; ::= integer from 10000 to 4000000 in 100 b/s increments, or 5000000See AlsoIntroduction to :TRIGger Commands:SBUS&lt;n&gt;:MODE:SBUS&lt;n&gt;:CAN:TRIGger:SBUS&lt;n&gt;:CAN:SIGNal:DEFinition:SBUS&lt;n&gt;:CAN:SOURce</c><c> :SBUS&lt;n&gt;:CAN:SIGNal:DEFinition:SBUS&lt;n&gt;:CAN Commands Name:SBUS&lt;n&gt;:CAN:SIGNal:DEFinition � Command Syntax:SBUS&lt;n&gt;:CAN:SIGNal:DEFinition &lt;value&gt;&lt;value&gt; ::= {CANH | CANL | RX | TX | DIFFerential | DIFL | DIFH}The :SBUS&lt;n&gt;:CAN:SIGNal:DEFinition command sets the CAN signal type when :SBUS&lt;n&gt;:CAN:TRIGger is set to SOF (start of frame). These signals can be set to:Dominant high signals:CANH � the actual CAN_H differential bus signal.DIFH � the CAN differential (H-L) bus signal connected to an analog source channel using a differential probe.Dominant low signals:CANL � the actual CAN_L differential bus signal.RX � the Receive signal from the CAN bus transceiver.TX � the Transmit signal to the CAN bus transceiver.DIFL � the CAN differential (L-H) bus signal connected to an analog source channel using a differential probe.DIFFerential � the CAN differential bus signal connected to an analog source channel using a differential probe. This is the same as DIFL.Query Syntax:SBUS&lt;n&gt;:CAN:SIGNal:DEFinition?The :SBUS&lt;n&gt;:CAN:SIGNal:DEFinition? query returns the current CAN signal type.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {CANH | CANL | RX | TX | DIFL | DIFH}See AlsoIntroduction to :TRIGger Commands:SBUS&lt;n&gt;:MODE:SBUS&lt;n&gt;:CAN:SIGNal:BAUDrate:SBUS&lt;n&gt;:CAN:SOURce:SBUS&lt;n&gt;:CAN:TRIGger</c><c> :SBUS&lt;n&gt;:CAN:SOURce:SBUS&lt;n&gt;:CAN Commands Name:SBUS&lt;n&gt;:CAN:SOURce � Command Syntax:SBUS&lt;n&gt;:CAN:SOURce &lt;source&gt;&lt;source&gt; ::= {CHANnel&lt;n&gt; | EXTernal} for the DSO models&lt;source&gt; ::= {CHANnel&lt;n&gt; | DIGital&lt;d&gt;} for the MSO models&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 formatThe :SBUS&lt;n&gt;:CAN:SOURce command sets the source for the CAN signal.Query Syntax:SBUS&lt;n&gt;:CAN:SOURce?The :SBUS&lt;n&gt;:CAN:SOURce? query returns the current source for the CAN signal.Return Format&lt;source&gt;&lt;NL&gt;See AlsoIntroduction to :TRIGger Commands:SBUS&lt;n&gt;:MODE:SBUS&lt;n&gt;:CAN:TRIGger:SBUS&lt;n&gt;:CAN:SIGNal:DEFinition</c><c> :SBUS&lt;n&gt;:CAN:TRIGger:SBUS&lt;n&gt;:CAN Commands Name:SBUS&lt;n&gt;:CAN:TRIGger � Command Syntax:SBUS&lt;n&gt;:CAN:TRIGger &lt;condition&gt;&lt;condition&gt; ::= {SOF | DATA | ERRor | IDData | IDEither | IDRemote | ALLerrors | OVERload | ACKerror}The :SBUS&lt;n&gt;:CAN:TRIGger command sets the CAN trigger on condition:SOF - will trigger on the Start of Frame (SOF) bit of a Data frame, Remote Transfer Request (RTR) frame, or an Overload frame.DATA - will trigger on CAN Data frames matching the specified Id, Data, and the DLC (Data length code).ERRor - will trigger on CAN Error frame.IDData - will trigger on CAN frames matching the specified Id of a Data frame.IDEither - will trigger on the specified Id, regardless if it is a Remote frame or a Data frame.IDRemote - will trigger on CAN frames matching the specified Id of a Remote frame.ALLerrors - will trigger on CAN active error frames and unknown bus conditions.OVERload - will trigger on CAN overload frames.ACKerror - will trigger on a data or remote frame acknowledge bit that is recessive.The table below shows the programming parameter and the corresponding front-panel softkey selection:Remote &lt;condition&gt; parameterFront-panel Trigger on: softkey selection (softkey text - softkey popup text)SOFSOF - Start of FrameDATAID &amp; Data - Data Frame ID and DataERRorError - Error frameIDDataID &amp; ~RTR - Data Frame ID (~RTR)IDEitherID - Remote or Data Frame IDIDRemoteID &amp; RTR - Remote Frame ID (RTR)ALLerrorsAll Errors - All ErrorsOVERloadOverload - Overload FrameACKerrorAck Error - Acknowledge ErrorCAN Id specification is set by the :SBUS&lt;n&gt;:CAN:TRIGger:PATTern:ID and:SBUS&lt;n&gt;:CAN:TRIGger:PATTern:ID:MODE commands.CAN Data specification is set by the :SBUS&lt;n&gt;:CAN:TRIGger:PATTern:DATA command.CAN Data Length Code is set by the :SBUS&lt;n&gt;:CAN:TRIGger:PATTern:DATA:LENGth command.Query Syntax:SBUS&lt;n&gt;:CAN:TRIGger?The :SBUS&lt;n&gt;:CAN:TRIGger? query returns the current CAN trigger on condition.Return Format&lt;condition&gt;&lt;NL&gt;&lt;condition&gt; ::= {SOF | DATA | ERR | IDD | IDE | IDR | ALL | OVER | ACK}Errors-241, Hardware missingSee AlsoIntroduction to :SBUS&lt;n&gt; Commands:SBUS&lt;n&gt;:MODE:SBUS&lt;n&gt;:CAN:TRIGger:PATTern:DATA:SBUS&lt;n&gt;:CAN:TRIGger:PATTern:DATA:LENGth:SBUS&lt;n&gt;:CAN:TRIGger:PATTern:ID:SBUS&lt;n&gt;:CAN:TRIGger:PATTern:ID:MODE:SBUS&lt;n&gt;:CAN:SIGNal:DEFinition:SBUS&lt;n&gt;:CAN:SOURce</c><c> :SBUS&lt;n&gt;:CAN:TRIGger:PATTern:DATA:SBUS&lt;n&gt;:CAN Commands Name:SBUS&lt;n&gt;:CAN:TRIGger:PATTern:DATA � Command Syntax:SBUS&lt;n&gt;:CAN:TRIGger:PATTern:DATA &lt;string&gt;&lt;string&gt; ::= "nn...n" where n ::= {0 | 1 | X | $}&lt;string ::= "0xnn...n" where n ::= {0,..,9 | A,..,F | X | $}The :SBUS&lt;n&gt;:CAN:TRIGger:PATTern:DATA command defines the CAN data pattern resource according to the string parameter. This pattern, along with the data length (set by the :SBUS&lt;n&gt;:CAN:TRIGger:PATTern:DATA:LENGth command), control the data pattern searched for in each CAN message.If the string parameter starts with "0x", it is a hexadecimal string made up of hexadecimal and X (don't care) characters; otherwise, it is a binary string made up of 0, 1, and X (don't care) characters.If more bits are sent for &lt;string&gt; than specified by the :SBUS&lt;n&gt;:CAN:TRIGger:PATTern:DATA:LENGth command, the most significant bits will be truncated. If the data length is changed after the &lt;string&gt; is programmed, the added or deleted bits will be added to or deleted from the least significant bits.Query Syntax:SBUS&lt;n&gt;:CAN:TRIGger:PATTern:DATA?The :SBUS&lt;n&gt;:CAN:TRIGger:PATTern:DATA? query returns the current settings of the specified CAN data pattern resource in the binary string format.Return Format&lt;string&gt;&lt;NL&gt; in nondecimal formatErrors-241, Hardware missingSee AlsoIntroduction to :TRIGger Commands:SBUS&lt;n&gt;:CAN:TRIGger:PATTern:DATA:LENGth:SBUS&lt;n&gt;:CAN:TRIGger:PATTern:ID</c><c> :SBUS&lt;n&gt;:CAN:TRIGger:PATTern:DATA:LENGth:SBUS&lt;n&gt;:CAN Commands Name:SBUS&lt;n&gt;:CAN:TRIGger:PATTern:DATA:LENGth � Command Syntax:SBUS&lt;n&gt;:CAN:TRIGger:PATTern:DATA:LENGth &lt;length&gt;&lt;length&gt; ::= integer from 1 to 8 in NR1 formatThe :SBUS&lt;n&gt;:CAN:TRIGger:PATTern:DATA:LENGth command sets the number of 8-bit bytes in the CAN data string. The number of bytes in the string can be anywhere from 1 bytes to 8 bytes (64 bits). The value for these bytes is set by the :SBUS&lt;n&gt;:CAN:TRIGger:PATTern:DATA command.Query Syntax:SBUS&lt;n&gt;:CAN:TRIGger:PATTern:DATA:LENGth?The :SBUS&lt;n&gt;:CAN:TRIGger:PATTern:DATA:LENGth? query returns the current CAN data pattern length setting.Return Format&lt;count&gt;&lt;NL&gt;&lt;count&gt; ::= integer from 1 to 8 in NR1 formatErrors-241, Hardware missingSee AlsoIntroduction to :TRIGger Commands:SBUS&lt;n&gt;:CAN:TRIGger:PATTern:DATA:SBUS&lt;n&gt;:CAN:SOURce</c><c> :SBUS&lt;n&gt;:CAN:TRIGger:PATTern:ID:SBUS&lt;n&gt;:CAN Commands Name:SBUS&lt;n&gt;:CAN:TRIGger:PATTern:ID � Command Syntax:SBUS&lt;n&gt;:CAN:TRIGger:PATTern:ID &lt;string&gt;&lt;string&gt; ::= "nn...n" where n ::= {0 | 1 | X | $}&lt;string ::= "0xnn...n" where n ::= {0,..,9 | A,..,F | X | $}The :SBUS&lt;n&gt;:CAN:TRIGger:PATTern:ID command defines the CAN identifier pattern resource according to the string parameter. This pattern, along with the identifier mode (set by the :SBUS&lt;n&gt;:CAN:TRIGger:PATTern:ID:MODE command), control the identifier pattern searched for in each CAN message.If the string parameter starts with "0x", it is a hexadecimal string made up of hexadecimal and X (don't care) characters; otherwise, it is a binary string made up of 0, 1, and X (don't care) characters.The ID pattern resource string is always 29 bits. Only 11 of these bits are used when the :SBUS&lt;n&gt;:CAN:TRIGger:PATTern:ID:MODE is STANdard.A string longer than 29 bits is truncated to 29 bits when setting the ID pattern resource.Query Syntax:SBUS&lt;n&gt;:CAN:TRIGger:PATTern:ID?The :SBUS&lt;n&gt;:CAN:TRIGger:PATTern:ID? query returns the current settings of the specified CAN identifier pattern resource in the 29-bit binary string format.Return Format&lt;string&gt;&lt;NL&gt; in 29-bit binary string formatErrors-241, Hardware missingSee AlsoIntroduction to :TRIGger Commands:SBUS&lt;n&gt;:CAN:TRIGger:PATTern:ID:MODE:SBUS&lt;n&gt;:CAN:TRIGger:PATTern:DATA</c><c> :SBUS&lt;n&gt;:CAN:TRIGger:PATTern:ID:MODE:SBUS&lt;n&gt;:CAN Commands Name:SBUS&lt;n&gt;:CAN:TRIGger:PATTern:ID:MODE � Command Syntax:SBUS&lt;n&gt;:CAN:TRIGger:PATTern:ID:MODE &lt;value&gt;&lt;value&gt; ::= {STANdard | EXTended}The :SBUS&lt;n&gt;:CAN:TRIGger:PATTern:ID:MODE command sets the CAN identifier mode. STANdard selects the standard 11-bit identifier. EXTended selects the extended 29-bit identifier. The CAN identifier is set by the :SBUS&lt;n&gt;:CAN:TRIGger:PATTern:ID command.Query Syntax:SBUS&lt;n&gt;:CAN:TRIGger:PATTern:ID:MODE?The :SBUS&lt;n&gt;:CAN:TRIGger:PATTern:ID:MODE? query returns the current setting of the CAN identifier mode.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {STAN | EXT}Errors-241, Hardware missingSee AlsoIntroduction to :TRIGger Commands:SBUS&lt;n&gt;:MODE:SBUS&lt;n&gt;:CAN:TRIGger:PATTern:DATA:SBUS&lt;n&gt;:CAN:TRIGger:PATTern:DATA:LENGth:SBUS&lt;n&gt;:CAN:TRIGger:PATTern:ID</c><c> :SBUS&lt;n&gt;:DISPlayGeneral :SBUS&lt;n&gt; Commands Name:SBUS&lt;n&gt;:DISPlay � Command Syntax:SBUS&lt;n&gt;:DISPlay &lt;display&gt;&lt;display&gt; ::= {{1 | ON} | {0 | OFF}}The :SBUS&lt;n&gt;:DISPlay command turns displaying of the serial decode bus on or off.This command is only valid when a serial decode option has been licensed.Two I2S buses or two SPI buses cannot be decoded on both SBUS1 and SBUS2 at the same time.Query Syntax:SBUS&lt;n&gt;:DISPlay?The :SBUS&lt;n&gt;:DISPlay? query returns the current display setting of the serial decode bus.Return Format&lt;display&gt;&lt;NL&gt;&lt;display&gt; ::= {0 | 1}Errors-241, Hardware missingSee AlsoIntroduction to :SBUS&lt;n&gt; Commands:CHANnel&lt;n&gt;:DISPlay:DIGital&lt;d&gt;:DISPlay:POD&lt;n&gt;:DISPlay:VIEW:BLANk:STATus</c><c> :SBUS&lt;n&gt;:IIC:ASIZe:SBUS&lt;n&gt;:IIC Commands Name:SBUS&lt;n&gt;:IIC:ASIZe � Command Syntax:SBUS&lt;n&gt;:IIC:ASIZe &lt;size&gt;&lt;size&gt; ::= {BIT7 | BIT8}The :SBUS&lt;n&gt;:IIC:ASIZe command determines whether the Read/Write bit is included as the LSB in the display of the IIC address field of the decode bus.Query Syntax:SBUS&lt;n&gt;:IIC:ASIZe?The :SBUS&lt;n&gt;:IIC:ASIZe? query returns the current IIC address width setting.Return Format&lt;mode&gt;&lt;NL&gt;&lt;mode&gt; ::= {BIT7 | BIT8}Errors-241, Hardware missingSee AlsoIntroduction to :SBUS&lt;n&gt; Commands:SBUS&lt;n&gt;:IIC Commands</c><c> :SBUS&lt;n&gt;:IIC[:SOURce]:CLOCk:SBUS&lt;n&gt;:IIC Commands Name:SBUS&lt;n&gt;:IIC[:SOURce]:CLOCk � Command Syntax:SBUS&lt;n&gt;:IIC:[SOURce:]CLOCk &lt;source&gt;&lt;source&gt; ::= {CHANnel&lt;n&gt; | EXTernal} for the DSO models&lt;source&gt; ::= {CHANnel&lt;n&gt; | DIGital&lt;d&gt;} for the MSO models&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 formatThe :SBUS&lt;n&gt;:IIC:[SOURce:]CLOCk command sets the source for the IIC serial clock (SCL).Query Syntax:SBUS&lt;n&gt;:IIC:[SOURce:]CLOCk?The :SBUS&lt;n&gt;:IIC:[SOURce:]CLOCk? query returns the current source for the IIC serial clock.Return Format&lt;source&gt;&lt;NL&gt;See AlsoIntroduction to :TRIGger Commands:SBUS&lt;n&gt;:IIC[:SOURce]:DATA</c><c> :SBUS&lt;n&gt;:IIC[:SOURce]:DATA:SBUS&lt;n&gt;:IIC Commands Name:SBUS&lt;n&gt;:IIC[:SOURce]:DATA � Command Syntax:SBUS&lt;n&gt;:IIC:[SOURce:]DATA &lt;source&gt;&lt;source&gt; ::= {CHANnel&lt;n&gt; | EXTernal} for the DSO models&lt;source&gt; ::= {CHANnel&lt;n&gt; | DIGital&lt;d&gt;} for the MSO models&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 formatThe :SBUS&lt;n&gt;:IIC:[SOURce:]DATA command sets the source for IIC serial data (SDA).Query Syntax:SBUS&lt;n&gt;:IIC:[SOURce:]DATA?The :SBUS&lt;n&gt;:IIC:[SOURce:]DATA? query returns the current source for IIC serial data.Return Format&lt;source&gt;&lt;NL&gt;See AlsoIntroduction to :TRIGger Commands:SBUS&lt;n&gt;:IIC[:SOURce]:CLOCk</c><c> :SBUS&lt;n&gt;:IIC:TRIGger:PATTern:ADDRess:SBUS&lt;n&gt;:IIC Commands Name:SBUS&lt;n&gt;:IIC:TRIGger:PATTern:ADDRess � Command Syntax:SBUS&lt;n&gt;:IIC:TRIGger:PATTern:ADDRess &lt;value&gt;&lt;value&gt; ::= integer or &lt;string&gt;&lt;string&gt; ::= "0xnn" where n ::= {0,..,9 | A,..,F}The :SBUS&lt;n&gt;:IIC:TRIGger:PATTern:ADDRess command sets the address for IIC data.The address can range from 0x00 to 0x7F (7-bit) or 0x3FF (10-bit) hexadecimal. Use the don't care address (-1 or 0xFFFFFFFF) to ignore the address value.Query Syntax:SBUS&lt;n&gt;:IIC:TRIGger:PATTern:ADDRess?The :SBUS&lt;n&gt;:IIC:TRIGger:PATTern:ADDRess? query returns the current address for IIC data.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= integerSee AlsoIntroduction to :TRIGger Commands:SBUS&lt;n&gt;:IIC:TRIGger:PATTern:DATA:SBUS&lt;n&gt;:IIC:TRIGger:PATTern:DATa2:SBUS&lt;n&gt;:IIC:TRIGger[:TYPE]</c><c>Command Syntax:SBUS&lt;n&gt;:IIC:TRIGger:PATTern:DATa2 &lt;value&gt;&lt;value&gt; ::= integer or &lt;string&gt;&lt;string&gt; ::= "0xnn" where n ::= {0,..,9 | A,..,F}The :SBUS&lt;n&gt;:IIC:TRIGger:PATTern:DATa2 command sets IIC data 2. The data value can range from 0x00 to 0x0FF (hexadecimal). Use the don't care data pattern (-1 or 0xFFFFFFFF) to ignore the data value.Query Syntax:SBUS&lt;n&gt;:IIC:TRIGger:PATTern:DATa2?The :SBUS&lt;n&gt;:IIC:TRIGger:PATTern:DATa2? query returns the current pattern for IIC data 2.Return Format&lt;value&gt;&lt;NL&gt;See AlsoIntroduction to :TRIGger Commands:SBUS&lt;n&gt;:IIC:TRIGger:PATTern:ADDRess:SBUS&lt;n&gt;:IIC:TRIGger:PATTern:DATA:SBUS&lt;n&gt;:IIC:TRIGger[:TYPE]</c><c> :SBUS&lt;n&gt;:IIC:TRIGger:PATTern:DATA:SBUS&lt;n&gt;:IIC Commands Name:SBUS&lt;n&gt;:IIC:TRIGger:PATTern:DATA � Command Syntax:SBUS&lt;n&gt;:IIC:TRIGger:PATTern:DATA &lt;value&gt;&lt;value&gt; ::= integer or &lt;string&gt;&lt;string&gt; ::= "0xnn" where n ::= {0,..,9 | A,..,F}The :SBUS&lt;n&gt;:IIC:TRIGger:PATTern:DATA command sets IIC data. The data value can range from 0x00 to 0x0FF (hexadecimal). Use the don't care data pattern (-1 or 0xFFFFFFFF) to ignore the data value.Query Syntax:SBUS&lt;n&gt;:IIC:TRIGger:PATTern:DATA?The :SBUS&lt;n&gt;:IIC:TRIGger:PATTern:DATA? query returns the current pattern for IIC data.Return Format&lt;value&gt;&lt;NL&gt;See AlsoIntroduction to :TRIGger Commands:SBUS&lt;n&gt;:IIC:TRIGger:PATTern:ADDRess:SBUS&lt;n&gt;:IIC:TRIGger:PATTern:DATa2:SBUS&lt;n&gt;:IIC:TRIGger[:TYPE]</c><c> :SBUS&lt;n&gt;:IIC:TRIGger:QUALifier:SBUS&lt;n&gt;:IIC Commands Name:SBUS&lt;n&gt;:IIC:TRIGger:QUALifier � Command Syntax:SBUS&lt;n&gt;:IIC:TRIGger:QUALifier &lt;value&gt;&lt;value&gt; ::= {EQUal | NOTequal | LESSthan | GREaterthan}The :SBUS&lt;n&gt;:IIC:TRIGger:QUALifier command sets the IIC data qualifier when TRIGger:IIC:TRIGger[:TYPE] is set to READEprom.Query Syntax:SBUS&lt;n&gt;:IIC:TRIGger:QUALifier?The :SBUS&lt;n&gt;:IIC:TRIGger:QUALifier? query returns the current IIC data qualifier value.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {EQUal | NOTequal | LESSthan | GREaterthan}See AlsoIntroduction to :TRIGger Commands:TRIGger:MODE:SBUS&lt;n&gt;:IIC:TRIGger[:TYPE]</c><c> :SBUS&lt;n&gt;:IIC:TRIGger[:TYPE]:SBUS&lt;n&gt;:IIC Commands Name:SBUS&lt;n&gt;:IIC:TRIGger[:TYPE] � Command Syntax:SBUS&lt;n&gt;:IIC:TRIGger[:TYPE] &lt;value&gt;&lt;value&gt; ::= {STARt | STOP | READ7 | READEprom | WRITe7 | WRITe10 | NACKnowledge | ANACk | R7Data2 | W7Data2 | RESTart}The :SBUS&lt;n&gt;:IIC:TRIGger[:TYPE] command sets the IIC trigger type:STARt � Start condition.STOP � Stop condition.READ7 � 7-bit address frame containing (Start:Address7:Read:Ack:Data). The value READ is also accepted for READ7.R7Data2 � 7-bit address frame containing (Start:Address7:Read:Ack:Data:Ack:Data2).READEprom � EEPROM data read.WRITe7 � 7-bit address frame containing (Start:Address7:Write:Ack:Data). The value WRITe is also accepted for WRITe7.W7Data2 � 7-bit address frame containing (Start:Address7:Write:Ack:Data:Ack:Data2).WRITe10 � 10-bit address frame containing (Start:Address byte1:Write:Ack:Address byte 2:Data).NACKnowledge � Missing acknowledge.ANACk � Address with no acknowledge.RESTart � Another start condition occurs before a stop condition.The short form of READ7 (READ7), READEprom (READE), WRITe7 (WRIT7), and WRITe10 (WRIT10) do not follow the defined Long Form to Short Form Truncation Rules.Query Syntax:SBUS&lt;n&gt;:IIC:TRIGger[:TYPE]?The :SBUS&lt;n&gt;:IIC:TRIGger[:TYPE]? query returns the current IIC trigger type value.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {STAR | STOP | READ7 | READE | WRIT7 | WRIT10 | NACK | ANAC | R7D2 | W7D2 | REST}See AlsoIntroduction to :TRIGger Commands:TRIGger:MODE:SBUS&lt;n&gt;:IIC:TRIGger:PATTern:ADDRess:SBUS&lt;n&gt;:IIC:TRIGger:PATTern:DATA:SBUS&lt;n&gt;:IIC:TRIGger:PATTern:DATa2:SBUS&lt;n&gt;:IIC:TRIGger:QUALifierLong Form to Short Form Truncation Rules</c><c> :SBUS&lt;n&gt;:LIN:PARity:SBUS&lt;n&gt;:LIN Commands Name:SBUS&lt;n&gt;:LIN:PARity � Command Syntax:SBUS&lt;n&gt;:LIN:PARity &lt;display&gt;&lt;display&gt; ::= {{1 | ON} | {0 | OFF}}The :SBUS&lt;n&gt;:LIN:PARity command determines whether the parity bits are included as the most significant bits (MSB) in the display of the Frame Id field in the LIN decode bus.Query Syntax:SBUS&lt;n&gt;:LIN:PARity?The :SBUS&lt;n&gt;:LIN:PARity? query returns the current LIN parity bits display setting of the serial decode bus.Return Format&lt;display&gt;&lt;NL&gt;&lt;display&gt; ::= {0 | 1}Errors-241, Hardware missingSee AlsoIntroduction to :SBUS&lt;n&gt; Commands:SBUS&lt;n&gt;:LIN Commands</c><c> :SBUS&lt;n&gt;:LIN:SAMPlepoint:SBUS&lt;n&gt;:LIN Commands Name:SBUS&lt;n&gt;:LIN:SAMPlepoint � Command Syntax:SBUS&lt;n&gt;:LIN:SAMPlepoint &lt;value&gt;&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {60 | 62.5 | 68 | 70 | 75 | 80 | 87.5} in NR3 formatThe :SBUS&lt;n&gt;:LIN:SAMPlepoint command sets the point during the bit time where the bit level is sampled to determine whether the bit is dominant or recessive. The sample point represents the percentage of time between the beginning of the bit time to the end of the bit time.The sample point values are not limited by the baud rate.Query Syntax:SBUS&lt;n&gt;:LIN:SAMPlepoint?The :SBUS&lt;n&gt;:LIN:SAMPlepoint? query returns the current LIN sample point setting.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {60 | 62.5 | 68 | 70 | 75 | 80 | 87.5} in NR3 formatSee AlsoIntroduction to :TRIGger Commands:TRIGger:MODE:SBUS&lt;n&gt;:LIN:TRIGger</c><c> :SBUS&lt;n&gt;:LIN:SIGNal:BAUDrate:SBUS&lt;n&gt;:LIN Commands Name:SBUS&lt;n&gt;:LIN:SIGNal:BAUDrate � Command Syntax:SBUS&lt;n&gt;:LIN:SIGNal:BAUDrate &lt;baudrate&gt;&lt;baudrate&gt; ::= integer from 2400 to 625000 in 100 b/s incrementsThe :SBUS&lt;n&gt;:LIN:SIGNal:BAUDrate command sets the standard baud rate of the LIN signal from 2400 b/s to 625 kb/s in 100 b/s increments. If you enter a baud rate that is not divisible by 100 b/s, the baud rate is set to the nearest baud rate divisible by 100 b/s.Query Syntax:SBUS&lt;n&gt;:LIN:SIGNal:BAUDrate?The :SBUS&lt;n&gt;:LIN:SIGNal:BAUDrate? query returns the current LIN baud rate setting.Return Format&lt;baudrate&gt;&lt;NL&gt;&lt;baudrate&gt; ::= integer from 2400 to 625000 in 100 b/s incrementsSee AlsoIntroduction to :TRIGger Commands:TRIGger:MODE:SBUS&lt;n&gt;:LIN:TRIGger:SBUS&lt;n&gt;:LIN:SOURce</c><c> :SBUS&lt;n&gt;:LIN:SOURce:SBUS&lt;n&gt;:LIN Commands Name:SBUS&lt;n&gt;:LIN:SOURce � Command Syntax:SBUS&lt;n&gt;:LIN:SOURce &lt;source&gt;&lt;source&gt; ::= {CHANnel&lt;n&gt; | EXTernal} for the DSO models&lt;source&gt; ::= {CHANnel&lt;n&gt; | DIGital&lt;d&gt;} for the MSO models&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 formatThe :SBUS&lt;n&gt;:LIN:SOURce command sets the source for the LIN signal.Query Syntax:SBUS&lt;n&gt;:LIN:SOURce?The :SBUS&lt;n&gt;:LIN:SOURce? query returns the current source for the LIN signal.Return Format&lt;source&gt;&lt;NL&gt;See AlsoIntroduction to :TRIGger Commands:TRIGger:MODE:SBUS&lt;n&gt;:LIN:TRIGger</c><c> :SBUS&lt;n&gt;:LIN:STANdard:SBUS&lt;n&gt;:LIN Commands Name:SBUS&lt;n&gt;:LIN:STANdard � Command Syntax:SBUS&lt;n&gt;:LIN:STANdard &lt;std&gt;&lt;std&gt; ::= {LIN13 | LIN20}The :SBUS&lt;n&gt;:LIN:STANdard command sets the LIN standard in effect for triggering and decoding to be LIN1.3 or LIN2.0.Query Syntax:SBUS&lt;n&gt;:LIN:STANdard?The :SBUS&lt;n&gt;:LIN:STANdard? query returns the current LIN standard setting.Return Format&lt;std&gt;&lt;NL&gt;&lt;std&gt; ::= {LIN13 | LIN20}See AlsoIntroduction to :TRIGger Commands:TRIGger:MODE:SBUS&lt;n&gt;:LIN:SOURce</c><c> :SBUS&lt;n&gt;:LIN:SYNCbreak:SBUS&lt;n&gt;:LIN Commands Name:SBUS&lt;n&gt;:LIN:SYNCbreak � Command Syntax:SBUS&lt;n&gt;:LIN:SYNCbreak &lt;value&gt;&lt;value&gt; ::= integer = {11 | 12 | 13}The :SBUS&lt;n&gt;:LIN:SYNCbreak command sets the length of the LIN sync break to be greater than or equal to 11, 12, or 13 clock lengths. The sync break is the idle period in the bus activity at the beginning of each packet that distinguishes one information packet from the previous one.Query Syntax:SBUS&lt;n&gt;:LIN:SYNCbreak?The :SBUS&lt;n&gt;:LIN:SYNCbreak? query returns the current LIN sync break setting.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {11 | 12 | 13}See AlsoIntroduction to :TRIGger Commands:TRIGger:MODE:SBUS&lt;n&gt;:LIN:SOURce</c><c> :SBUS&lt;n&gt;:LIN:TRIGger:SBUS&lt;n&gt;:LIN Commands Name:SBUS&lt;n&gt;:LIN:TRIGger � Command Syntax:SBUS&lt;n&gt;:LIN:TRIGger &lt;condition&gt;&lt;condition&gt; ::= {SYNCbreak | ID | DATA}The :SBUS&lt;n&gt;:LIN:TRIGger command sets the LIN trigger condition to be:SYNCbreak � Sync Break.ID � Frame ID.Use the :SBUS&lt;n&gt;:LIN:TRIGger:ID command to specify the frame ID.DATA � Frame ID and Data.Use the :SBUS&lt;n&gt;:LIN:TRIGger:ID command to specify the frame ID.Use the :SBUS&lt;n&gt;:LIN:TRIGger:PATTern:DATA:LENGth and :SBUS&lt;n&gt;:LIN:TRIGger:PATTern:DATA commands to specify the data string length and value.Query Syntax:SBUS&lt;n&gt;:LIN:TRIGger?The :SBUS&lt;n&gt;:LIN:TRIGger? query returns the current LIN trigger value.Return Format&lt;condition&gt;&lt;NL&gt;&lt;condition&gt; ::= {SYNC | ID | DATA}Errors-241, Hardware missingSee AlsoIntroduction to :TRIGger Commands:TRIGger:MODE:SBUS&lt;n&gt;:LIN:TRIGger:ID:SBUS&lt;n&gt;:LIN:TRIGger:PATTern:DATA:LENGth:SBUS&lt;n&gt;:LIN:TRIGger:PATTern:DATA:SBUS&lt;n&gt;:LIN:SOURce</c><c> :SBUS&lt;n&gt;:LIN:TRIGger:ID:SBUS&lt;n&gt;:LIN Commands Name:SBUS&lt;n&gt;:LIN:TRIGger:ID � Command Syntax:SBUS&lt;n&gt;:LIN:TRIGger:ID &lt;value&gt;&lt;value&gt; ::= 7-bit integer in decimal, &lt;nondecimal&gt;, or &lt;string&gt; from 0-63 or 0x00-0x3f&lt;nondecimal&gt; ::= #Hnn where n ::= {0,..,9 | A,..,F} for hexadecimal&lt;nondecimal&gt; ::= #Bnn...n where n ::= {0 | 1} for binary&lt;string&gt; ::= "0xnn" where n ::= {0,..,9 | A,..,F} for hexadecimalThe :SBUS&lt;n&gt;:LIN:TRIGger:ID command defines the LIN identifier searched for in each CAN message when the LIN trigger mode is set to frame ID.Setting the ID to a value of "-1" results in "0xXX" which is equivalent to all IDs.Query Syntax:SBUS&lt;n&gt;:LIN:TRIGger:ID?The :SBUS&lt;n&gt;:LIN:TRIGger:ID? query returns the current LIN identifier setting.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= integer in decimalErrors-241, Hardware missingSee AlsoIntroduction to :TRIGger Commands:TRIGger:MODE:SBUS&lt;n&gt;:LIN:TRIGger:SBUS&lt;n&gt;:LIN:SOURce</c><c> :SBUS&lt;n&gt;:LIN:TRIGger:PATTern:DATA:SBUS&lt;n&gt;:LIN Commands Name:SBUS&lt;n&gt;:LIN:TRIGger:PATTern:DATA � Command Syntax:SBUS&lt;n&gt;:LIN:TRIGger:PATTern:DATA &lt;string&gt;&lt;string&gt; ::= "n" where n ::= 32-bit integer in unsigned decimal when &lt;base&gt; = DECimal&lt;string&gt; ::= "nn...n" where n ::= {0 | 1 | X | $} when &lt;base&gt; = BINary&lt;string&gt; ::= "0xnn...n" where n ::= {0,..,9 | A,..,F | X | $} when &lt;base&gt; = HEX&lt;base&gt; is specified with the :SBUS&lt;n&gt;:LIN:TRIGger:PATTern:FORMat command. The default &lt;base&gt; is BINary.The :SBUS&lt;n&gt;:LIN:TRIGger:PATTern:DATA command specifies the LIN trigger data pattern searched for in each LIN data field.Set a &lt;string&gt; bit to "0" or "1" to set the corresponding bit in the data pattern to low or high, respectively.Set a &lt;string&gt; bit to "X" to ignore (mask off) that bit in the data pattern.Use the "$" character to indicate that the value of the corresponding bit will not be changed (the existing bit value is used).When &lt;base&gt; = DECimal, the "X" and "$" characters cannot be entered. When queried, the "$" character is returned when any bits in the pattern have the value of "X" and &lt;base&gt; = DECimal. When any bits in a given nibble have the value of "X" and &lt;base&gt; = HEX, the "$" character is returned for the corresponding nibble.The length of the trigger data value is determined by the :SBUS&lt;n&gt;:LIN:TRIGger:PATTern:DATA:LENGth command.If more bits are sent for &lt;string&gt; than the specified trigger pattern data length, the most significant bits will be truncated. If the data length size is changed after the &lt;string&gt; is programmed, the added or deleted bits will be added to or deleted from the least significant bits.Query Syntax:SBUS&lt;n&gt;:LIN:TRIGger:PATTern:DATA?The :SBUS&lt;n&gt;:LIN:TRIGger:PATTern:DATA? query returns the currently specified LIN trigger data pattern.Return Format&lt;string&gt;&lt;NL&gt;See AlsoIntroduction to :TRIGger Commands:SBUS&lt;n&gt;:LIN:TRIGger:PATTern:FORMat:SBUS&lt;n&gt;:LIN:TRIGger:SBUS&lt;n&gt;:LIN:TRIGger:PATTern:DATA:LENGth</c><c> :SBUS&lt;n&gt;:LIN:TRIGger:PATTern:DATA:LENGth:SBUS&lt;n&gt;:LIN Commands Name:SBUS&lt;n&gt;:LIN:TRIGger:PATTern:DATA:LENGth � Command Syntax:SBUS&lt;n&gt;:LIN:TRIGger:PATTern:DATA:LENGth &lt;length&gt;&lt;length&gt; ::= integer from 1 to 8 in NR1 formatThe :SBUS&lt;n&gt;:LIN:TRIGger:PATTern:DATA:LENGth command sets the number of 8-bit bytes in the LIN data string. The number of bytes in the string can be anywhere from 1 bytes to 8 bytes (64 bits). The value for these bytes is set by the :SBUS&lt;n&gt;:LIN:TRIGger:PATTern:DATA command.Query Syntax:SBUS&lt;n&gt;:LIN:TRIGger:PATTern:DATA:LENGth?The :SBUS&lt;n&gt;:LIN:TRIGger:PATTern:DATA:LENGth? query returns the current LIN data pattern length setting.Return Format&lt;count&gt;&lt;NL&gt;&lt;count&gt; ::= integer from 1 to 8 in NR1 formatErrors-241, Hardware missingSee AlsoIntroduction to :TRIGger Commands:SBUS&lt;n&gt;:LIN:TRIGger:PATTern:DATA:SBUS&lt;n&gt;:LIN:SOURce</c><c> :SBUS&lt;n&gt;:LIN:TRIGger:PATTern:FORMat:SBUS&lt;n&gt;:LIN Commands Name:SBUS&lt;n&gt;:LIN:TRIGger:PATTern:FORMat � Command Syntax:SBUS&lt;n&gt;:LIN:TRIGger:PATTern:FORMat &lt;base&gt;&lt;base&gt; ::= {BINary | HEX | DECimal}The :SBUS&lt;n&gt;:LIN:TRIGger:PATTern:FORMat command sets the entry (and query) number base used by the :SBUS&lt;n&gt;:LIN:TRIGger:PATTern:DATA command. The default &lt;base&gt; is BINary.Query Syntax:SBUS&lt;n&gt;:LIN:TRIGger:PATTern:FORMat?The :SBUS&lt;n&gt;:LIN:TRIGger:PATTern:FORMat? query returns the currently set number base for LIN pattern data.Return Format&lt;base&gt;&lt;NL&gt;&lt;base&gt; ::= {BIN | HEX | DEC}See AlsoIntroduction to :TRIGger Commands:SBUS&lt;n&gt;:LIN:TRIGger:PATTern:DATA:SBUS&lt;n&gt;:LIN:TRIGger:PATTern:DATA:LENGth</c><c> :SBUS&lt;n&gt;:MODEGeneral :SBUS&lt;n&gt; Commands Name:SBUS&lt;n&gt;:MODE � Command Syntax:SBUS&lt;n&gt;:MODE &lt;mode&gt;&lt;mode&gt; ::= {CAN | IIC | LIN | SPI | UART}The :SBUS&lt;n&gt;:MODE command determines the decode mode for the serial bus.This command is only valid when a serial decode option has been licensed.Query Syntax:SBUS&lt;n&gt;:MODE?The :SBUS&lt;n&gt;:MODE? query returns the current serial bus decode mode setting.Return Format&lt;mode&gt;&lt;NL&gt;&lt;mode&gt; ::= {CAN | IIC | LIN | SPI | UART | NONE}Errors-241, Hardware missingSee AlsoIntroduction to :SBUS&lt;n&gt; Commands:SBUS&lt;n&gt;:CAN Commands:SBUS&lt;n&gt;:IIC Commands:SBUS&lt;n&gt;:LIN Commands:SBUS&lt;n&gt;:SPI Commands:SBUS&lt;n&gt;:UART Commands</c><c> :SBUS&lt;n&gt;:SPI:BITorder:SBUS&lt;n&gt;:SPI Commands Name:SBUS&lt;n&gt;:SPI:BITorder � Command Syntax:SBUS&lt;n&gt;:SPI:BITorder &lt;order&gt;&lt;order&gt; ::= {LSBFirst | MSBFirst}The :SBUS&lt;n&gt;:SPI:BITorder command selects the bit order, most significant bit first (MSB) or least significant bit first (LSB), used when displaying data in the serial decode waveform and in the Lister.Query Syntax:SBUS&lt;n&gt;:SPI:BITorder?The :SBUS&lt;n&gt;:SPI:BITorder? query returns the current SPI decode bit order.Return Format&lt;order&gt;&lt;NL&gt;&lt;order&gt; ::= {LSBF | MSBF}Errors-241, Hardware missingSee AlsoIntroduction to :SBUS&lt;n&gt; Commands:SBUS&lt;n&gt;:MODE:SBUS&lt;n&gt;:SPI Commands</c><c> :SBUS&lt;n&gt;:SPI:CLOCk:SLOPe:SBUS&lt;n&gt;:SPI Commands Name:SBUS&lt;n&gt;:SPI:CLOCk:SLOPe � Command Syntax:SBUS&lt;n&gt;:SPI:CLOCk:SLOPe &lt;slope&gt;&lt;slope&gt; ::= {NEGative | POSitive}The :SBUS&lt;n&gt;:SPI:CLOCk:SLOPe command specifies the rising edge (POSitive) or falling edge (NEGative) of the SPI clock source that will clock in the data.Query Syntax:SBUS&lt;n&gt;:SPI:CLOCk:SLOPe?The :SBUS&lt;n&gt;:SPI:CLOCk:SLOPe? query returns the current SPI clock source slope.Return Format&lt;slope&gt;&lt;NL&gt;&lt;slope&gt; ::= {NEG | POS}See AlsoIntroduction to :TRIGger Commands:SBUS&lt;n&gt;:SPI:CLOCk:TIMeout:SBUS&lt;n&gt;:SPI:SOURce:CLOCk</c><c> :SBUS&lt;n&gt;:SPI:CLOCk:TIMeout:SBUS&lt;n&gt;:SPI Commands Name:SBUS&lt;n&gt;:SPI:CLOCk:TIMeout � Command Syntax:SBUS&lt;n&gt;:SPI:CLOCk:TIMeout &lt;time_value&gt;&lt;time_value&gt; ::= time in seconds in NR3 formatThe :SBUS&lt;n&gt;:SPI:CLOCk:TIMeout command sets the SPI signal clock timeout resource in seconds from 100 ns to 10 s when the :SBUS&lt;n&gt;:SPI:FRAMing command is set to TIMeout. The timer is used to frame a signal by a clock timeout.Query Syntax:SBUS&lt;n&gt;:SPI:CLOCk:TIMeout?The :SBUS&lt;n&gt;:SPI:CLOCk:TIMeout? query returns current SPI clock timeout setting.Return Format&lt;time value&gt;&lt;NL&gt;&lt;time_value&gt; ::= time in seconds in NR3 formatSee AlsoIntroduction to :TRIGger Commands:SBUS&lt;n&gt;:SPI:CLOCk:SLOPe:SBUS&lt;n&gt;:SPI:SOURce:CLOCk:SBUS&lt;n&gt;:SPI:FRAMing</c><c> :SBUS&lt;n&gt;:SPI:FRAMing:SBUS&lt;n&gt;:SPI Commands Name:SBUS&lt;n&gt;:SPI:FRAMing � Command Syntax:SBUS&lt;n&gt;:SPI:FRAMing &lt;value&gt;&lt;value&gt; ::= {CHIPselect | {NCHipselect | NOTC} | TIMeout}The :SBUS&lt;n&gt;:SPI:FRAMing command sets the SPI trigger framing value. If TIMeout is selected, the timeout value is set by the :SBUS&lt;n&gt;:SPI:CLOCk:TIMeout command.The NOTC value is deprecated. It is the same as NCHipselect.Query Syntax:SBUS&lt;n&gt;:SPI:FRAMing?The :SBUS&lt;n&gt;:SPI:FRAMing? query returns the current SPI framing value.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {CHIP | NCH | TIM}See AlsoIntroduction to :TRIGger Commands:TRIGger:MODE:SBUS&lt;n&gt;:SPI:CLOCk:TIMeout:SBUS&lt;n&gt;:SPI:SOURce:FRAMe</c><c> :SBUS&lt;n&gt;:SPI:SOURce:CLOCk:SBUS&lt;n&gt;:SPI Commands Name:SBUS&lt;n&gt;:SPI:SOURce:CLOCk � Command Syntax:SBUS&lt;n&gt;:SPI:SOURce:CLOCk &lt;source&gt;&lt;source&gt; ::= {CHANnel&lt;n&gt; | EXTernal} for the DSO models&lt;source&gt; ::= {CHANnel&lt;n&gt; | DIGital&lt;d&gt;} for the MSO models&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 formatThe :SBUS&lt;n&gt;:SPI:SOURce:CLOCk command sets the source for the SPI serial clock.Query Syntax:SBUS&lt;n&gt;:SPI:SOURce:CLOCk?The :SBUS&lt;n&gt;:SPI:SOURce:CLOCk? query returns the current source for the SPI serial clock.Return Format&lt;source&gt;&lt;NL&gt;See AlsoIntroduction to :TRIGger Commands:SBUS&lt;n&gt;:SPI:CLOCk:SLOPe:SBUS&lt;n&gt;:SPI:CLOCk:TIMeout:SBUS&lt;n&gt;:SPI:SOURce:FRAMe:SBUS&lt;n&gt;:SPI:SOURce:MOSI:SBUS&lt;n&gt;:SPI:SOURce:MISO</c><c> :SBUS&lt;n&gt;:SPI:SOURce:MOSI:SBUS&lt;n&gt;:SPI Commands Name:SBUS&lt;n&gt;:SPI:SOURce:MOSI � Command Syntax:SBUS&lt;n&gt;:SPI:SOURce:MOSI &lt;source&gt;&lt;source&gt; ::= {CHANnel&lt;n&gt; | EXTernal} for the DSO models&lt;source&gt; ::= {CHANnel&lt;n&gt; | DIGital&lt;d&gt;} for the MSO models&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 formatThe :SBUS&lt;n&gt;:SPI:SOURce:MOSI command sets the source for the SPI serial MOSI data.You can also use the equivalent :SBUS&lt;n&gt;:SPI:SOURce:DATA command to set the MOSI data source.Query Syntax:SBUS&lt;n&gt;:SPI:SOURce:MOSI?The :SBUS&lt;n&gt;:SPI:SOURce:MOSI? query returns the current source for the SPI serial MOSI data.Return Format&lt;source&gt;&lt;NL&gt;See AlsoIntroduction to :TRIGger Commands:SBUS&lt;n&gt;:SPI:SOURce:MISO:SBUS&lt;n&gt;:SPI:SOURce:CLOCk:SBUS&lt;n&gt;:SPI:SOURce:FRAMe:SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MISO:DATA:SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MOSI:DATA:SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MISO:WIDTh:SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MOSI:WIDTh</c><c> :SBUS&lt;n&gt;:SPI:SOURce:FRAMe:SBUS&lt;n&gt;:SPI Commands Name:SBUS&lt;n&gt;:SPI:SOURce:FRAMe � Command Syntax:SBUS&lt;n&gt;:SPI:SOURce:FRAMe &lt;source&gt;&lt;source&gt; ::= {CHANnel&lt;n&gt; | EXTernal} for the DSO models&lt;source&gt; ::= {CHANnel&lt;n&gt; | DIGital&lt;d&gt;} for the MSO models&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 formatThe :SBUS&lt;n&gt;:SPI:SOURce:FRAMe command sets the frame source when :SBUS&lt;n&gt;:SPI:FRAMing is set to CHIPselect or NOTChipselect.Query Syntax:SBUS&lt;n&gt;:SPI:SOURce:FRAMe?The :SBUS&lt;n&gt;:SPI:SOURce:FRAMe? query returns the current frame source for the SPI serial frame.Return Format&lt;source&gt;&lt;NL&gt;See AlsoIntroduction to :TRIGger Commands:SBUS&lt;n&gt;:SPI:SOURce:CLOCk:SBUS&lt;n&gt;:SPI:SOURce:MOSI:SBUS&lt;n&gt;:SPI:SOURce:MISO:SBUS&lt;n&gt;:SPI:FRAMing</c><c> :SBUS&lt;n&gt;:SPI:SOURce:MISO:SBUS&lt;n&gt;:SPI Commands Name:SBUS&lt;n&gt;:SPI:SOURce:MISO � Command Syntax:SBUS&lt;n&gt;:SPI:SOURce:MISO &lt;source&gt;&lt;source&gt; ::= {CHANnel&lt;n&gt; | EXTernal} for the DSO models&lt;source&gt; ::= {CHANnel&lt;n&gt; | DIGital&lt;d&gt;} for the MSO models&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 formatThe :SBUS&lt;n&gt;:SPI:SOURce:MISO command sets the source for the SPI serial MISO data.Query Syntax:SBUS&lt;n&gt;:SPI:SOURce:MISO?The :SBUS&lt;n&gt;:SPI:SOURce:MISO? query returns the current source for the SPI serial MISO data.Return Format&lt;source&gt;&lt;NL&gt;See AlsoIntroduction to :TRIGger Commands:SBUS&lt;n&gt;:SPI:SOURce:MOSI:SBUS&lt;n&gt;:SPI:SOURce:CLOCk:SBUS&lt;n&gt;:SPI:SOURce:FRAMe:SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MISO:DATA:SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MOSI:DATA:SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MISO:WIDTh:SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MOSI:WIDTh</c><c> :SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MISO:DATA:SBUS&lt;n&gt;:SPI Commands Name:SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MISO:DATA � Command Syntax:SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MISO:DATA &lt;string&gt;&lt;string&gt; ::= "nn...n" where n ::= {0 | 1 | X | $}&lt;string ::= "0xnn...n" where n ::= {0,..,9 | A,..,F | X | $}The :SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MISO:DATA command defines the SPI data pattern resource according to the string parameter. This pattern, along with the data width, control the data pattern searched for in the data stream.If the string parameter starts with "0x", it is a hexadecimal string made up of hexadecimal and X (don't care) characters; otherwise, it is a binary string made up of 0, 1, and X (don't care) characters.The :SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MISO:WIDTh should be set before :SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MISO:DATA.Query Syntax:SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MISO:DATA?The :SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MISO:DATA? query returns the current settings of the specified SPI data pattern resource in the binary string format.Return Format&lt;string&gt;&lt;NL&gt;See AlsoIntroduction to :TRIGger Commands:SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MISO:WIDTh:SBUS&lt;n&gt;:SPI:SOURce:MISO</c><c> :SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MISO:WIDTh:SBUS&lt;n&gt;:SPI Commands Name:SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MISO:WIDTh � Command Syntax:SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MISO:WIDTh &lt;width&gt;&lt;width&gt; ::= integer from 4 to 64 in NR1 formatThe :SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MISO:WIDTh command sets the width of the SPI data pattern anywhere from 4 bits to 64 bits.The :SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MISO:WIDTh should be set before :SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MISO:DATA.Query Syntax:SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MISO:WIDTh?The :SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MISO:WIDTh? query returns the current SPI data pattern width setting.Return Format&lt;width&gt;&lt;NL&gt;&lt;width&gt; ::= integer from 4 to 64 in NR1 formatSee AlsoIntroduction to :TRIGger Commands:SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MISO:DATA:SBUS&lt;n&gt;:SPI:SOURce:MISO</c><c> :SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MOSI:DATA:SBUS&lt;n&gt;:SPI Commands Name:SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MOSI:DATA � Command Syntax:SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MOSI:DATA &lt;string&gt;&lt;string&gt; ::= "nn...n" where n ::= {0 | 1 | X | $}&lt;string ::= "0xnn...n" where n ::= {0,..,9 | A,..,F | X | $}The :SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MOSI:DATA command defines the SPI data pattern resource according to the string parameter. This pattern, along with the data width, control the data pattern searched for in the data stream.If the string parameter starts with "0x", it is a hexadecimal string made up of hexadecimal and X (don't care) characters; otherwise, it is a binary string made up of 0, 1, and X (don't care) characters.The :SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MOSI:WIDTh should be set before :SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MOSI:DATA.Query Syntax:SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MOSI:DATA?The :SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MOSI:DATA? query returns the current settings of the specified SPI data pattern resource in the binary string format.Return Format&lt;string&gt;&lt;NL&gt;See AlsoIntroduction to :TRIGger Commands:SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MOSI:WIDTh:SBUS&lt;n&gt;:SPI:SOURce:MOSI</c><c> :SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MOSI:WIDTh:SBUS&lt;n&gt;:SPI Commands Name:SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MOSI:WIDTh � Command Syntax:SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MOSI:WIDTh &lt;width&gt;&lt;width&gt; ::= integer from 4 to 64 in NR1 formatThe :SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MOSI:WIDTh command sets the width of the SPI data pattern anywhere from 4 bits to 64 bits.The :SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MOSI:WIDTh should be set before :SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MOSI:DATA.Query Syntax:SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MOSI:WIDTh?The :SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MOSI:WIDTh? query returns the current SPI data pattern width setting.Return Format&lt;width&gt;&lt;NL&gt;&lt;width&gt; ::= integer from 4 to 64 in NR1 formatSee AlsoIntroduction to :TRIGger Commands:SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MOSI:DATA:SBUS&lt;n&gt;:SPI:SOURce:MOSI</c><c> :SBUS&lt;n&gt;:SPI:TRIGger:TYPE:SBUS&lt;n&gt;:SPI Commands Name:SBUS&lt;n&gt;:SPI:TRIGger:TYPE � Command Syntax:SBUS&lt;n&gt;:SPI:TRIGger:TYPE &lt;value&gt;&lt;value&gt; ::= {MOSI | MISO}The :SBUS&lt;n&gt;:SPI:TRIGger:TYPE command specifies whether the SPI trigger will be on the MOSI data or the MISO data.When triggering on MOSI data, the data value is specified by the :SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MOSI:DATA and :SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MOSI:WIDTh commands.When triggering on MISO data, the data value is specified by the :SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MISO:DATA and :SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MISO:WIDTh commands.Query Syntax:SBUS&lt;n&gt;:SPI:TRIGger:TYPE?The :SBUS&lt;n&gt;:SPI:TRIGger:TYPE? query returns the current SPI trigger type setting.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {MOSI | MISO}See AlsoIntroduction to :TRIGger Commands:SBUS&lt;n&gt;:SPI:SOURce:MOSI:SBUS&lt;n&gt;:SPI:SOURce:MISO:SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MISO:DATA:SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MOSI:DATA:SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MISO:WIDTh:SBUS&lt;n&gt;:SPI:TRIGger:PATTern:MOSI:WIDTh:TRIGger:MODE</c><c> :SBUS&lt;n&gt;:SPI:WIDTh:SBUS&lt;n&gt;:SPI Commands Name:SBUS&lt;n&gt;:SPI:WIDTh � Command Syntax:SBUS&lt;n&gt;:SPI:WIDTh &lt;word_width&gt;&lt;word_width&gt; ::= integer 4-16 in NR1 formatThe :SBUS&lt;n&gt;:SPI:WIDTh command determines the number of bits in a word of data for SPI.Query Syntax:SBUS&lt;n&gt;:SPI:WIDTh?The :SBUS&lt;n&gt;:SPI:WIDTh? query returns the current SPI decode word width.Return Format&lt;word_width&gt;&lt;NL&gt;&lt;word_width&gt; ::= integer 4-16 in NR1 formatErrors-241, Hardware missingSee AlsoIntroduction to :SBUS&lt;n&gt; Commands:SBUS&lt;n&gt;:MODE:SBUS&lt;n&gt;:SPI Commands</c><c> :SBUS&lt;n&gt;:UART:BASE:SBUS&lt;n&gt;:UART Commands Name:SBUS&lt;n&gt;:UART:BASE � Command Syntax:SBUS&lt;n&gt;:UART:BASE &lt;base&gt;&lt;base&gt; ::= {ASCii | BINary | HEX}The :SBUS&lt;n&gt;:UART:BASE command determines the base to use for the UART decode and Lister display.Query Syntax:SBUS&lt;n&gt;:UART:BASE?The :SBUS&lt;n&gt;:UART:BASE? query returns the current UART decode and Lister base setting.Return Format&lt;base&gt;&lt;NL&gt;&lt;base&gt; ::= {ASCii | BINary | HEX}Errors-241, Hardware missingSee AlsoIntroduction to :SBUS&lt;n&gt; Commands:SBUS&lt;n&gt;:UART Commands</c><c> :SBUS&lt;n&gt;:UART:BAUDrate:SBUS&lt;n&gt;:UART Commands Name:SBUS&lt;n&gt;:UART:BAUDrate � Command Syntax:SBUS&lt;n&gt;:UART:BAUDrate &lt;baudrate&gt;&lt;baudrate&gt; ::= integer from 100 to 8000000The :SBUS&lt;n&gt;:UART:BAUDrate command selects the bit rate (in bps) for the serial decoder and/or trigger when in UART mode. The baud rate can be set from 100 b/s to 8 Mb/s.If the baud rate you select does not match the system baud rate, false triggers may occur.Query Syntax:SBUS&lt;n&gt;:UART:BAUDrate?The :SBUS&lt;n&gt;:UART:BAUDrate? query returns the current UART baud rate setting.Return Format&lt;baudrate&gt;&lt;NL&gt;&lt;baudrate&gt; ::= integer from 100 to 8000000See AlsoIntroduction to :TRIGger Commands:TRIGger:MODE:SBUS&lt;n&gt;:UART:TRIGger:TYPE</c><c> :SBUS&lt;n&gt;:UART:BITorder:SBUS&lt;n&gt;:UART Commands Name:SBUS&lt;n&gt;:UART:BITorder � Command Syntax:SBUS&lt;n&gt;:UART:BITorder &lt;bitorder&gt;&lt;bitorder&gt; ::= {LSBFirst | MSBFirst}The :SBUS&lt;n&gt;:UART:BITorder command specifies the order of transmission used by the physical Tx and Rx input signals for the serial decoder and/or trigger when in UART mode. LSBFirst sets the least significant bit of each message "byte" as transmitted first. MSBFirst sets the most significant bit as transmitted first.Query Syntax:SBUS&lt;n&gt;:UART:BITorder?The :SBUS&lt;n&gt;:UART:BITorder? query returns the current UART bit order setting.Return Format&lt;bitorder&gt;&lt;NL&gt;&lt;bitorder&gt; ::= {LSBF | MSBF}See AlsoIntroduction to :TRIGger Commands:TRIGger:MODE:SBUS&lt;n&gt;:UART:TRIGger:TYPE:SBUS&lt;n&gt;:UART:SOURce:RX:SBUS&lt;n&gt;:UART:SOURce:TX</c><c> :SBUS&lt;n&gt;:UART:COUNt:ERRor:SBUS&lt;n&gt;:UART Commands Name:SBUS&lt;n&gt;:UART:COUNt:ERRor � Query Syntax:SBUS&lt;n&gt;:UART:COUNt:ERRor?Returns the UART error frame count.Return Format&lt;frame_count&gt;&lt;NL&gt;&lt;frame_count&gt; ::= integer in NR1 formatErrors-241, Hardware missingSee Also:SBUS&lt;n&gt;:UART:COUNt:RESetIntroduction to :SBUS&lt;n&gt; Commands:SBUS&lt;n&gt;:MODE:SBUS&lt;n&gt;:UART Commands</c><c> :SBUS&lt;n&gt;:UART:COUNt:RESet:SBUS&lt;n&gt;:UART Commands Name:SBUS&lt;n&gt;:UART:COUNt:RESet � Command Syntax:SBUS&lt;n&gt;:UART:COUNt:RESetResets the UART frame counters.Errors-241, Hardware missingSee Also:SBUS&lt;n&gt;:UART:COUNt:ERRor:SBUS&lt;n&gt;:UART:COUNt:RXFRames:SBUS&lt;n&gt;:UART:COUNt:TXFRamesIntroduction to :SBUS&lt;n&gt; Commands:SBUS&lt;n&gt;:MODE:SBUS&lt;n&gt;:UART Commands</c><c> :SBUS&lt;n&gt;:UART:COUNt:RXFRames:SBUS&lt;n&gt;:UART Commands Name:SBUS&lt;n&gt;:UART:COUNt:RXFRames � Query Syntax:SBUS&lt;n&gt;:UART:COUNt:RXFRames?Returns the UART Rx frame count.Return Format&lt;frame_count&gt;&lt;NL&gt;&lt;frame_count&gt; ::= integer in NR1 formatErrors-241, Hardware missingSee Also:SBUS&lt;n&gt;:UART:COUNt:RESetIntroduction to :SBUS&lt;n&gt; Commands:SBUS&lt;n&gt;:MODE:SBUS&lt;n&gt;:UART Commands</c><c> :SBUS&lt;n&gt;:UART:COUNt:TXFRames:SBUS&lt;n&gt;:UART Commands Name:SBUS&lt;n&gt;:UART:COUNt:TXFRames � Query Syntax:SBUS&lt;n&gt;:UART:COUNt:TXFRames?Returns the UART Tx frame count.Return Format&lt;frame_count&gt;&lt;NL&gt;&lt;frame_count&gt; ::= integer in NR1 formatErrors-241, Hardware missingSee Also:SBUS&lt;n&gt;:UART:COUNt:RESetIntroduction to :SBUS&lt;n&gt; Commands:SBUS&lt;n&gt;:MODE:SBUS&lt;n&gt;:UART Commands</c><c> :SBUS&lt;n&gt;:UART:FRAMing:SBUS&lt;n&gt;:UART Commands Name:SBUS&lt;n&gt;:UART:FRAMing � Command Syntax:SBUS&lt;n&gt;:UART:FRAMing &lt;value&gt;&lt;value&gt; ::= {OFF | &lt;decimal&gt; | &lt;nondecimal&gt;}&lt;decimal&gt; ::= 8-bit integer in decimal from 0-255 (0x00-0xff)&lt;nondecimal&gt; ::= #Hnn where n ::= {0,..,9 | A,..,F} for hexadecimal&lt;nondecimal&gt; ::= #Bnn...n where n ::= {0 | 1} for binaryThe :SBUS&lt;n&gt;:UART:FRAMing command determines the byte value to use for framing (end of packet) or to turn off framing for UART decode.Query Syntax:SBUS&lt;n&gt;:UART:FRAMing?The :SBUS&lt;n&gt;:UART:FRAMing? query returns the current UART decode base setting.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {OFF | &lt;decimal&gt;}&lt;decimal&gt; ::= 8-bit integer in decimal from 0-255Errors-241, Hardware missingSee AlsoIntroduction to :SBUS&lt;n&gt; Commands:SBUS&lt;n&gt;:UART Commands</c><c> :SBUS&lt;n&gt;:UART:PARity:SBUS&lt;n&gt;:UART Commands Name:SBUS&lt;n&gt;:UART:PARity � Command Syntax:SBUS&lt;n&gt;:UART:PARity &lt;parity&gt;&lt;parity&gt; ::= {EVEN | ODD | NONE}The :SBUS&lt;n&gt;:UART:PARity command selects the parity to be used with each message "byte" for the serial decoder and/or trigger when in UART mode.Query Syntax:SBUS&lt;n&gt;:UART:PARity?The :SBUS&lt;n&gt;:UART:PARity? query returns the current UART parity setting.Return Format&lt;parity&gt;&lt;NL&gt;&lt;parity&gt; ::= {EVEN | ODD | NONE}See AlsoIntroduction to :TRIGger Commands:TRIGger:MODE:SBUS&lt;n&gt;:UART:TRIGger:TYPE</c><c> :SBUS&lt;n&gt;:UART:POLarity:SBUS&lt;n&gt;:UART Commands Name:SBUS&lt;n&gt;:UART:POLarity � Command Syntax:SBUS&lt;n&gt;:UART:POLarity &lt;polarity&gt;&lt;polarity&gt; ::= {HIGH | LOW}The :SBUS&lt;n&gt;:UART:POLarity command selects the polarity as idle low or idle high for the serial decoder and/or trigger when in UART mode.Query Syntax:SBUS&lt;n&gt;:UART:POLarity?The :SBUS&lt;n&gt;:UART:POLarity? query returns the current UART polarity setting.Return Format&lt;polarity&gt;&lt;NL&gt;&lt;polarity&gt; ::= {HIGH | LOW}See AlsoIntroduction to :TRIGger Commands:TRIGger:MODE:SBUS&lt;n&gt;:UART:TRIGger:TYPE</c><c> :SBUS&lt;n&gt;:UART:SOURce:RX:SBUS&lt;n&gt;:UART Commands Name:SBUS&lt;n&gt;:UART:SOURce:RX � Command Syntax:SBUS&lt;n&gt;:UART:SOURce:RX &lt;source&gt;&lt;source&gt; ::= {CHANnel&lt;n&gt; | EXTernal} for the DSO models&lt;source&gt; ::= {CHANnel&lt;n&gt; | DIGital&lt;d&gt;} for the MSO models&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 formatThe :SBUS&lt;n&gt;:UART:SOURce:RX command controls which signal is used as the Rx source by the serial decoder and/or trigger when in UART mode.Query Syntax:SBUS&lt;n&gt;:UART:SOURce:RX?The :SBUS&lt;n&gt;:UART:SOURce:RX? query returns the current source for the UART Rx signal.Return Format&lt;source&gt;&lt;NL&gt;See AlsoIntroduction to :TRIGger Commands:TRIGger:MODE:SBUS&lt;n&gt;:UART:TRIGger:TYPE:SBUS&lt;n&gt;:UART:BITorder</c><c> :SBUS&lt;n&gt;:UART:SOURce:TX:SBUS&lt;n&gt;:UART Commands Name:SBUS&lt;n&gt;:UART:SOURce:TX � Command Syntax:SBUS&lt;n&gt;:UART:SOURce:TX &lt;source&gt;&lt;source&gt; ::= {CHANnel&lt;n&gt; | EXTernal} for the DSO models&lt;source&gt; ::= {CHANnel&lt;n&gt; | DIGital&lt;d&gt;} for the MSO models&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 formatThe :SBUS&lt;n&gt;:UART:SOURce:TX command controls which signal is used as the Tx source by the serial decoder and/or trigger when in UART mode.Query Syntax:SBUS&lt;n&gt;:UART:SOURce:TX?The :SBUS&lt;n&gt;:UART:SOURce:TX? query returns the current source for the UART Tx signal.Return Format&lt;source&gt;&lt;NL&gt;See AlsoIntroduction to :TRIGger Commands:TRIGger:MODE:SBUS&lt;n&gt;:UART:TRIGger:TYPE:SBUS&lt;n&gt;:UART:BITorder</c><c> :SBUS&lt;n&gt;:UART:TRIGger:BASE:SBUS&lt;n&gt;:UART Commands Name:SBUS&lt;n&gt;:UART:TRIGger:BASE � Command Syntax:SBUS&lt;n&gt;:UART:TRIGger:BASE &lt;base&gt;&lt;base&gt; ::= {ASCii | HEX}The :SBUS&lt;n&gt;:UART:TRIGger:BASE command sets the front panel UART/RS232 trigger setup data selection option:ASCii � front panel data selection is from ASCII values.HEX � front panel data selection is from hexadecimal values.The :SBUS&lt;n&gt;:UART:TRIGger:BASE setting does not affect the :SBUS&lt;n&gt;:UART:TRIGger:DATA command which can always set data values using ASCII or hexadecimal values.The :SBUS&lt;n&gt;:UART:TRIGger:BASE command is independent of the :SBUS&lt;n&gt;:UART:BASE command which affects decode and Lister only.Query Syntax:SBUS&lt;n&gt;:UART:TRIGger:BASE?The :SBUS&lt;n&gt;:UART:TRIGger:BASE? query returns the current UART base setting.Return Format&lt;base&gt;&lt;NL&gt;&lt;base&gt; ::= {ASC | HEX}See AlsoIntroduction to :TRIGger Commands:TRIGger:MODE:SBUS&lt;n&gt;:UART:TRIGger:DATA</c><c> :SBUS&lt;n&gt;:UART:TRIGger:BURSt:SBUS&lt;n&gt;:UART Commands Name:SBUS&lt;n&gt;:UART:TRIGger:BURSt � Command Syntax:SBUS&lt;n&gt;:UART:TRIGger:BURSt &lt;value&gt;&lt;value&gt; ::= {OFF | 1 to 4096 in NR1 format}The :SBUS&lt;n&gt;:UART:TRIGger:BURSt command selects the burst value (Nth frame after idle period) in the range 1 to 4096 or OFF, for the trigger when in UART mode.Query Syntax:SBUS&lt;n&gt;:UART:TRIGger:BURSt?The :SBUS&lt;n&gt;:UART:TRIGger:BURSt? query returns the current UART trigger burst value.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {OFF | 1 to 4096 in NR1 format}See AlsoIntroduction to :TRIGger Commands:TRIGger:MODE:SBUS&lt;n&gt;:UART:TRIGger:IDLE:SBUS&lt;n&gt;:UART:TRIGger:TYPE</c><c> :SBUS&lt;n&gt;:UART:TRIGger:DATA:SBUS&lt;n&gt;:UART Commands Name:SBUS&lt;n&gt;:UART:TRIGger:DATA � Command Syntax:SBUS&lt;n&gt;:UART:TRIGger:DATA &lt;value&gt;&lt;value&gt; ::= 8-bit integer from 0-255 (0x00-0xff) in decimal, &lt;hexadecimal&gt;, &lt;binary&gt;, or &lt;quoted_string&gt; format&lt;hexadecimal&gt; ::= #Hnn where n ::= {0,..,9 | A,..,F} for hexadecimal&lt;binary&gt; ::= #Bnn...n where n ::= {0 | 1} for binary&lt;quoted_string&gt; ::= any of the 128 valid 7-bit ASCII characters (or standard abbreviations)The :SBUS&lt;n&gt;:UART:TRIGger:DATA command selects the data byte value (0x00 to 0xFF) for the trigger QUALifier when in UART mode. The data value is used when one of the RD or TD trigger types is selected.When entering an ASCII character via the quoted string, it must be one of the 128 valid characters (case-sensitive): "NUL", "SOH", "STX", "ETX", "EOT", "ENQ", "ACK", "BEL", "BS", "HT", "LF", "VT", "FF", "CR", "SO","SI", "DLE", "DC1", "DC2", "DC3", "DC4", "NAK", "SYN", "ETB", "CAN", "EM", "SUB", "ESC", "FS","GS", "RS", "US", "SP", "!", "\"", "#", "$", "%","&amp;", "\'", "(", ")", "*", "+", ",", "-", ".", "/","0", "1", "2", "3", "4", "5", "6", "7", "8", "9",":", ";", "&lt;", "=", "&gt;", "?", "@", "A", "B", "C","D", "E", "F", "G", "H", "I", "J", "K", "L", "M","N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z","[", "\\", "]", "^", "_", "`", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "{", "|", "}", "~", or "DEL".Query Syntax:SBUS&lt;n&gt;:UART:TRIGger:DATA?The :SBUS&lt;n&gt;:UART:TRIGger:DATA? query returns the current UART trigger data value.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= 8-bit integer in decimal from 0-255See AlsoIntroduction to :TRIGger Commands:TRIGger:MODE:SBUS&lt;n&gt;:UART:TRIGger:BASE:SBUS&lt;n&gt;:UART:TRIGger:TYPE</c><c> :SBUS&lt;n&gt;:UART:TRIGger:IDLE:SBUS&lt;n&gt;:UART Commands Name:SBUS&lt;n&gt;:UART:TRIGger:IDLE � Command Syntax:SBUS&lt;n&gt;:UART:TRIGger:IDLE &lt;time_value&gt;&lt;time_value&gt; ::= time from 1 us to 10 s in NR3 formatThe :SBUS&lt;n&gt;:UART:TRIGger:IDLE command selects the value of the idle period for burst trigger in the range from 1 us to 10 s when in UART mode.Query Syntax:SBUS&lt;n&gt;:UART:TRIGger:IDLE?The :SBUS&lt;n&gt;:UART:TRIGger:IDLE? query returns the current UART trigger idle period time.Return Format&lt;time_value&gt;&lt;NL&gt;&lt;time_value&gt; ::= time from 1 us to 10 s in NR3 formatSee AlsoIntroduction to :TRIGger Commands:TRIGger:MODE:SBUS&lt;n&gt;:UART:TRIGger:BURSt:SBUS&lt;n&gt;:UART:TRIGger:TYPE</c><c> :SBUS&lt;n&gt;:UART:TRIGger:QUALifier:SBUS&lt;n&gt;:UART Commands Name:SBUS&lt;n&gt;:UART:TRIGger:QUALifier � Command Syntax:SBUS&lt;n&gt;:UART:TRIGger:QUALifier &lt;value&gt;&lt;value&gt; ::= {EQUal | NOTequal | GREaterthan | LESSthan}The :SBUS&lt;n&gt;:UART:TRIGger:QUALifier command selects the data qualifier when :TYPE is set to RDATa, RD1, RD0, RDX, TDATa, TD1, TD0, or TDX for the trigger when in UART mode.Query Syntax:SBUS&lt;n&gt;:UART:TRIGger:QUALifier?The :SBUS&lt;n&gt;:UART:TRIGger:QUALifier? query returns the current UART trigger qualifier.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {EQU | NOT | GRE | LESS}See AlsoIntroduction to :TRIGger Commands:TRIGger:MODE:SBUS&lt;n&gt;:UART:TRIGger:TYPE</c><c> :SBUS&lt;n&gt;:UART:TRIGger:TYPE:SBUS&lt;n&gt;:UART Commands Name:SBUS&lt;n&gt;:UART:TRIGger:TYPE � Command Syntax:SBUS&lt;n&gt;:UART:TRIGger:TYPE &lt;value&gt;&lt;value&gt; ::= {RSTArt | RSTOp | RDATa | RD1 | RD0 | RDX | PARityerror | TSTArt | TSTOp | TDATa | TD1 | TD0 | TDX}The :SBUS&lt;n&gt;:UART:TRIGger:TYPE command selects the UART trigger type.When one of the RD or TD types is selected, the :SBUS&lt;n&gt;:UART:TRIGger:DATA and :SBUS&lt;n&gt;:UART:TRIGger:QUALifier commands are used to specify the data value and comparison operator.The RD1, RD0, RDX, TD1, TD0, and TDX types (for triggering on data and alert bit values) are only valid when a 9-bit width has been selected.Query Syntax:SBUS&lt;n&gt;:UART:TRIGger:TYPE?The :SBUS&lt;n&gt;:UART:TRIGger:TYPE? query returns the current UART trigger data value.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {RSTA | RSTO | RDAT | RD1 | RD0 | RDX | PAR | TSTA | TSTO | TDAT | TD1 | TD0 | TDX}See AlsoIntroduction to :TRIGger Commands:TRIGger:MODE:SBUS&lt;n&gt;:UART:TRIGger:DATA:SBUS&lt;n&gt;:UART:TRIGger:QUALifier:SBUS&lt;n&gt;:UART:WIDTh</c><c> :SBUS&lt;n&gt;:UART:WIDTh:SBUS&lt;n&gt;:UART Commands Name:SBUS&lt;n&gt;:UART:WIDTh � Command Syntax:SBUS&lt;n&gt;:UART:WIDTh &lt;width&gt;&lt;width&gt; ::= {5 | 6 | 7 | 8 | 9}The :SBUS&lt;n&gt;:UART:WIDTh command determines the number of bits (5-9) for each message "byte" for the serial decoder and/or trigger when in UART mode.Query Syntax:SBUS&lt;n&gt;:UART:WIDTh?The :SBUS&lt;n&gt;:UART:WIDTh? query returns the current UART width setting.Return Format&lt;width&gt;&lt;NL&gt;&lt;width&gt; ::= {5 | 6 | 7 | 8 | 9}See AlsoIntroduction to :TRIGger Commands:TRIGger:MODE:SBUS&lt;n&gt;:UART:TRIGger:TYPE</c><c> :SEARch:COUNtGeneral :SEARch Commands Name:SEARch:COUNt � Query Syntax:SEARch:COUNt?The :SEARch:COUNt? query returns the number of search events found.Return Format&lt;count&gt;&lt;NL&gt;&lt;count&gt; ::= an integer count valueSee Also:SEARch Commands</c><c> :SEARch:MODEGeneral :SEARch Commands Name:SEARch:MODE � Command Syntax:SEARch:MODE &lt;value&gt;&lt;value&gt; ::= {SERial1}The :SEARch:MODE command selects the search mode.The command is only valid when the :SEARch:STATe is ON.Query Syntax:SEARch:MODE?The :SEARch:MODE? query returns the currently selected mode or OFF if the :SEARch:STATe is OFF.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {SER1 | OFF}See Also:SEARch Commands:SEARch:STATe</c><c> :SEARch:SERial:CAN:MODE:SEARch:SERial:CAN Commands Name:SEARch:SERial:CAN:MODE � Command Syntax:SEARch:SERial:CAN:MODE &lt;value&gt;&lt;value&gt; ::= {DATA | IDData | IDEither | IDRemote | ALLerrors | OVERload | ERRor}The :SEARch:SERial:CAN:MODE command selects the type of CAN information to find in the Lister display:DATA - searches for CAN Data frames matching the specified ID, Data, and the DLC (Data length code).IDData - searches for CAN frames matching the specified ID of a Data frame.IDEither - searches for the specified ID, regardless if it is a Remote frame or a Data frame.IDRemote - searches for CAN frames matching the specified ID of a Remote frame.ALLerrors - searches for CAN active error frames and unknown bus conditions.OVERload - searches for CAN overload frames.ERRor - searches for CAN Error frame.Query Syntax:SEARch:SERial:CAN:MODE?The :SEARch:SERial:CAN:MODE? query returns the currently selected mode.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {DATA | IDD | IDE | IDR | ALL | OVER | ERR}See Also:SEARch Commands:SEARch:SERial:CAN:PATTern:DATA:SEARch:SERial:CAN:PATTern:ID</c><c> :SEARch:SERial:CAN:PATTern:DATA:SEARch:SERial:CAN Commands Name:SEARch:SERial:CAN:PATTern:DATA � Command Syntax:SEARch:SERial:CAN:PATTern:DATA &lt;string&gt;&lt;string&gt; ::= "0xnn...n" where n ::= {0,..,9 | A,..,F | X} for hexadecimalThe :SEARch:SERial:CAN:PATTern:DATA command specifies the data value when searching for Data Frame ID and Data.The length of the data value is specified using the :SEARch:SERial:CAN:PATTern:DATA:LENGth command.Query Syntax:SEARch:SERial:CAN:PATTern:DATA?The :SEARch:SERial:CAN:PATTern:DATA? query returns the current data value setting.Return Format&lt;string&gt;&lt;NL&gt;&lt;string&gt; ::= "0xnn...n" where n ::= {0,..,9 | A,..,F | X} for hexadecimalSee Also:SEARch Commands:SEARch:SERial:CAN:MODE:SEARch:SERial:CAN:PATTern:DATA:LENGth</c><c> :SEARch:SERial:CAN:PATTern:DATA:LENGth:SEARch:SERial:CAN Commands Name:SEARch:SERial:CAN:PATTern:DATA:LENGth � Command Syntax:SEARch:SERial:CAN:PATTern:DATA:LENGth &lt;length&gt;&lt;length&gt; ::= integer from 1 to 8 in NR1 formatThe :SEARch:SERial:CAN:PATTern:DATA:LENGth command specifies the length of the data value when searching for Data Frame ID and Data.The data value is specified using the :SEARch:SERial:CAN:PATTern:DATA command.Query Syntax:SEARch:SERial:CAN:PATTern:DATA:LENGth?The :SEARch:SERial:CAN:PATTern:DATA:LENGth? query returns the current data length setting.Return Format&lt;length&gt;&lt;NL&gt;&lt;length&gt; ::= integer from 1 to 8 in NR1 formatSee Also:SEARch Commands:SEARch:SERial:CAN:MODE:SEARch:SERial:CAN:PATTern:DATA</c><c> :SEARch:SERial:CAN:PATTern:ID:SEARch:SERial:CAN Commands Name:SEARch:SERial:CAN:PATTern:ID � Command Syntax:SEARch:SERial:CAN:PATTern:ID &lt;string&gt;&lt;string&gt; ::= "0xnn...n" where n ::= {0,..,9 | A,..,F | X} for hexadecimalThe :SEARch:SERial:CAN:PATTern:ID command specifies the ID value when searching for a CAN event.The value can be a standard ID or an extended ID, depending on the :SEARch:SERial:CAN:PATTern:ID:MODE command's setting.Query Syntax:SEARch:SERial:CAN:PATTern:ID?The :SEARch:SERial:CAN:PATTern:ID? query returns the current ID value setting.Return Format&lt;string&gt;&lt;NL&gt;&lt;string&gt; ::= "0xnn...n" where n ::= {0,..,9 | A,..,F | X} for hexadecimalSee Also:SEARch Commands:SEARch:SERial:CAN:MODE:SEARch:SERial:CAN:PATTern:ID:MODE</c><c> :SEARch:SERial:CAN:PATTern:ID:MODE:SEARch:SERial:CAN Commands Name:SEARch:SERial:CAN:PATTern:ID:MODE � Command Syntax:SEARch:SERial:CAN:PATTern:ID:MODE &lt;value&gt;&lt;value&gt; ::= {STANdard | EXTended}The :SEARch:SERial:CAN:PATTern:ID:MODE command specifies whether a standard ID value or an extended ID value is used when searching for a CAN event.The ID value is specified using the :SEARch:SERial:CAN:PATTern:ID command.Query Syntax:SEARch:SERial:CAN:PATTern:ID:MODE?The :SEARch:SERial:CAN:PATTern:ID:MODE? query returns the current setting.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {STAN | EXT}See Also:SEARch Commands:SEARch:SERial:CAN:MODE:SEARch:SERial:CAN:PATTern:ID</c><c> :SEARch:SERial:IIC:MODE:SEARch:SERial:IIC Commands Name:SEARch:SERial:IIC:MODE � Command Syntax:SEARch:SERial:IIC:MODE &lt;value&gt;&lt;value&gt; ::= {READ7 | WRITE7 | NACKnowledge | ANACk | R7Data2 | W7Data2 | RESTart | READEprom}The :SEARch:SERial:IIC:MODE command selects the type of IIC information to find in the Lister display:READ7 � searches for 7-bit address frames containing Start:Address7:Read:Ack:Data. The value READ is also accepted for READ7.WRITe7 � searches for 7-bit address frames containing Start:Address7:Write:Ack:Data. The value WRITe is also accepted for WRITe7.NACKnowledge � searches for missing acknowledge events.ANACk � searches for address with no acknowledge events.R7Data2 � searches for 7-bit address frames containing Start:Address7:Read:Ack:Data:Ack:Data2.W7Data2 � searches for 7-bit address frames containing Start:Address7:Write:Ack:Data:Ack:Data2.RESTart � searches for another start condition occurring before a stop condition.READEprom � searches for EEPROM data reads.The short form of READ7 (READ7), READEprom (READE), and WRITe7 (WRIT7) do not follow the defined Long Form to Short Form Truncation Rules.When searching for events containing addresses, address values are specified using the :SEARch:SERial:IIC:PATTern:ADDRess command.When searching for events containing data, data values are specified using the :SEARch:SERial:IIC:PATTern:DATA and :SEARch:SERial:IIC:PATTern:DATA2 commands.Query Syntax:SEARch:SERial:IIC:MODE?The :SEARch:SERial:IIC:MODE? query returns the currently selected mode.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {READ7 | WRITE7 | NACK | ANAC | R7D2 | W7D2 | REST | READE}See Also:SEARch Commands:SEARch:SERial:IIC:PATTern:ADDRess:SEARch:SERial:IIC:PATTern:DATA:SEARch:SERial:IIC:PATTern:DATA2:SEARch:SERial:IIC:QUALifier</c><c> :SEARch:SERial:IIC:PATTern:ADDRess:SEARch:SERial:IIC Commands Name:SEARch:SERial:IIC:PATTern:ADDRess � Command Syntax:SEARch:SERial:IIC:PATTern:ADDRess &lt;value&gt;&lt;value&gt; ::= integer or &lt;string&gt;&lt;string&gt; ::= "0xnn" n ::= {0,..,9 | A,..,F}The :SEARch:SERial:IIC:PATTern:ADDRess command specifies address values when searching for IIC events.To set don't care values, use the integer -1.Query Syntax:SEARch:SERial:IIC:PATTern:ADDRess?The :SEARch:SERial:IIC:PATTern:ADDRess? query returns the current address value setting.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= integerSee Also:SEARch Commands:SEARch:SERial:IIC:MODE</c><c> :SEARch:SERial:IIC:PATTern:DATA2:SEARch:SERial:IIC Commands Name:SEARch:SERial:IIC:PATTern:DATA2 � Command Syntax:SEARch:SERial:IIC:PATTern:DATA2 &lt;value&gt;&lt;value&gt; ::= integer or &lt;string&gt;&lt;string&gt; ::= "0xnn" n ::= {0,..,9 | A,..,F}The :SEARch:SERial:IIC:PATTern:DATA2 command specifies the second data value when searching for IIC events with two data values.To set don't care values, use the integer -1.Query Syntax:SEARch:SERial:IIC:PATTern:DATA2?The :SEARch:SERial:IIC:PATTern:DATA2? query returns the current second data value setting.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= integerSee Also:SEARch Commands:SEARch:SERial:IIC:MODE:SEARch:SERial:IIC:PATTern:DATA</c><c> :SEARch:SERial:IIC:PATTern:DATA:SEARch:SERial:IIC Commands Name:SEARch:SERial:IIC:PATTern:DATA � Command Syntax:SEARch:SERial:IIC:PATTern:DATA &lt;value&gt;&lt;value&gt; ::= integer or &lt;string&gt;&lt;string&gt; ::= "0xnn" n ::= {0,..,9 | A,..,F}The :SEARch:SERial:IIC:PATTern:DATA command specifies data values when searching for IIC events.To set don't care values, use the integer -1.When searching for IIC EEPROM data read events, you specify the data value qualifier using the :SEARch:SERial:IIC:QUALifier command.Query Syntax:SEARch:SERial:IIC:PATTern:DATA?The :SEARch:SERial:IIC:PATTern:DATA? query returns the current data value setting.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= integerSee Also:SEARch Commands:SEARch:SERial:IIC:MODE:SEARch:SERial:IIC:QUALifier:SEARch:SERial:IIC:PATTern:DATA2</c><c> :SEARch:SERial:IIC:QUALifier:SEARch:SERial:IIC Commands Name:SEARch:SERial:IIC:QUALifier � Command Syntax:SEARch:SERial:IIC:QUALifier &lt;value&gt;&lt;value&gt; ::= {EQUal | NOTequal | LESSthan | GREaterthan}The :SEARch:SERial:IIC:QUALifier command specifies the data value qualifier used when searching for IIC EEPROM data read events.Query Syntax:SEARch:SERial:IIC:QUALifier?The :SEARch:SERial:IIC:QUALifier? query returns the current data value qualifier setting.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {EQU | NOT | LESS | GRE}See Also:SEARch Commands:SEARch:SERial:IIC:MODE:SEARch:SERial:IIC:PATTern:DATA</c><c> :SEARch:SERial:LIN:ID:SEARch:SERial:LIN Commands Name:SEARch:SERial:LIN:ID � Command Syntax:SEARch:SERial:LIN:ID &lt;value&gt;&lt;value&gt; ::= 7-bit integer in decimal, &lt;nondecimal&gt;, or &lt;string&gt; from 0-63 or 0x00-0x3f (with Option AMS)&lt;nondecimal&gt; ::= #Hnn where n ::= {0,..,9 | A,..,F} for hexadecimal&lt;nondecimal&gt; ::= #Bnn...n where n ::= {0 | 1} for binary&lt;string&gt; ::= "0xnn" where n ::= {0,..,9 | A,..,F} for hexadecimalThe :SEARch:SERial:LIN:ID command specifies the frame ID value when searching for LIN events.Query Syntax:SEARch:SERial:LIN:ID?The :SEARch:SERial:LIN:ID? query returns the current frame ID setting.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= 7-bit integer in decimal (with Option AMS)See Also:SEARch Commands:SEARch:SERial:LIN:MODE</c><c> :SEARch:SERial:LIN:MODE:SEARch:SERial:LIN Commands Name:SEARch:SERial:LIN:MODE � Command Syntax:SEARch:SERial:LIN:MODE &lt;value&gt;&lt;value&gt; ::= {ID | DATA | ERRor}The :SEARch:SERial:LIN:MODE command selects the type of LIN information to find in the Lister display:ID � searches for a frame ID.DATA � searches for a frame ID and data.ERRor � searches for errors.Frame IDs are specified using the :SEARch:SERial:LIN:ID command.Data values are specified using the:SEARch:SERial:LIN:PATTern:DATA command.Query Syntax:SEARch:SERial:LIN:MODE?The :SEARch:SERial:LIN:MODE? query returns the currently selected mode.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {ID | DATA | ERR}See Also:SEARch Commands:SEARch:SERial:LIN:ID:SEARch:SERial:LIN:PATTern:DATA</c><c> :SEARch:SERial:LIN:PATTern:DATA:SEARch:SERial:LIN Commands Name:SEARch:SERial:LIN:PATTern:DATA � Command Syntax:SEARch:SERial:LIN:PATTern:DATA &lt;string&gt;When :SEARch:SERial:LIN:PATTern:FORMat DECimal, &lt;string&gt; ::= "n" where n ::= 32-bit integer in unsigned decimalWhen :SEARch:SERial:LIN:PATTern:FORMat HEX, &lt;string&gt; ::= "0xnn...n" where n ::= {0,..,9 | A,..,F | X }The :SEARch:SERial:LIN:PATTern:DATA command specifies the data value when searching for LIN events.The number base of the value entered with this command is specified using the :SEARch:SERial:LIN:PATTern:FORMat command. To set don't care values with the DATA command, the FORMat must be HEX.The length of the data value entered is specified using the :SEARch:SERial:LIN:PATTern:DATA:LENGth command.Query Syntax:SEARch:SERial:LIN:PATTern:DATA?The :SEARch:SERial:LIN:PATTern:DATA? query returns the current data value setting.Return Format&lt;string&gt;&lt;NL&gt;When :SEARch:SERial:LIN:PATTern:FORMat DECimal, &lt;string&gt; ::= "n" where n ::= 32-bit integer in unsigned decimal or "$" if data has any don't caresWhen :SEARch:SERial:LIN:PATTern:FORMat HEX, &lt;string&gt; ::= "0xnn...n" where n ::= {0,..,9 | A,..,F | X }See Also:SEARch Commands:SEARch:SERial:LIN:MODE:SEARch:SERial:LIN:PATTern:FORMat:SEARch:SERial:LIN:PATTern:DATA:LENGth</c><c> :SEARch:SERial:LIN:PATTern:DATA:LENGth:SEARch:SERial:LIN Commands Name:SEARch:SERial:LIN:PATTern:DATA:LENGth � Command Syntax:SEARch:SERial:LIN:PATTern:DATA:LENGth &lt;length&gt;&lt;length&gt; ::= integer from 1 to 8 in NR1 formatThe :SEARch:SERial:LIN:PATTern:DATA:LENGth command specifies the the length of the data value when searching for LIN events.The data value is specified using the :SEARch:SERial:LIN:PATTern:DATA command.Query Syntax:SEARch:SERial:LIN:PATTern:DATA:LENGth?The :SEARch:SERial:LIN:PATTern:DATA:LENGth? query returns the current data value length setting.Return Format&lt;length&gt;&lt;NL&gt;&lt;length&gt; ::= integer from 1 to 8 in NR1 formatSee Also:SEARch Commands:SEARch:SERial:LIN:PATTern:DATA</c><c> :SEARch:SERial:LIN:PATTern:FORMat:SEARch:SERial:LIN Commands Name:SEARch:SERial:LIN:PATTern:FORMat � Command Syntax:SEARch:SERial:LIN:PATTern:FORMat &lt;base&gt;&lt;base&gt; ::= {HEX | DECimal}The :SEARch:SERial:LIN:PATTern:FORMat command specifies the number base used with the :SEARch:SERial:LIN:PATTern:DATA command.Query Syntax:SEARch:SERial:LIN:PATTern:FORMat?The :SEARch:SERial:LIN:PATTern:FORMat? query returns the current number base setting.Return Format&lt;base&gt;&lt;NL&gt;&lt;base&gt; ::= {HEX | DEC}See Also:SEARch Commands:SEARch:SERial:LIN:PATTern:DATA</c><c> :SEARch:SERial:SPI:MODE:SEARch:SERial:SPI Commands Name:SEARch:SERial:SPI:MODE � Command Syntax:SEARch:SERial:SPI:MODE &lt;value&gt;&lt;value&gt; ::= {MOSI | MISO}The :SEARch:SERial:SPI:MODE command specifies whether the SPI search will be on the MOSI data or the MISO data.Data values are specified using the :SEARch:SERial:SPI:PATTern:DATA command.Query Syntax:SEARch:SERial:SPI:MODE?The :SEARch:SERial:SPI:MODE? query returns the current SPI search mode setting.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {MOSI | MISO}See Also:SEARch Commands:SEARch:SERial:SPI:PATTern:DATA</c><c> :SEARch:SERial:SPI:PATTern:DATA:SEARch:SERial:SPI Commands Name:SEARch:SERial:SPI:PATTern:DATA � Command Syntax:SEARch:SERial:SPI:PATTern:DATA &lt;string&gt;&lt;string&gt; ::= "0xnn...n" where n ::= {0,..,9 | A,..,F | X}The :SEARch:SERial:SPI:PATTern:DATA command specifies the data value when searching for SPI events.The width of the data value is specified using the :SEARch:SERial:SPI:PATTern:WIDTh command.Query Syntax:SEARch:SERial:SPI:PATTern:DATA?The :SEARch:SERial:SPI:PATTern:DATA? query returns the current data value setting.Return Format&lt;string&gt;&lt;NL&gt;&lt;string&gt; ::= "0xnn...n" where n ::= {0,..,9 | A,..,F | X}See Also:SEARch Commands:SEARch:SERial:SPI:PATTern:WIDTh</c><c> :SEARch:SERial:SPI:PATTern:WIDTh:SEARch:SERial:SPI Commands Name:SEARch:SERial:SPI:PATTern:WIDTh � Command Syntax:SEARch:SERial:SPI:PATTern:WIDTh &lt;width&gt;&lt;width&gt; ::= integer from 1 to 10The :SEARch:SERial:SPI:PATTern:WIDTh command specifies the width of the data value (in bytes) when searching for SPI events.The data value is specified using the :SEARch:SERial:SPI:PATTern:DATA command.Query Syntax:SEARch:SERial:SPI:PATTern:WIDTh?The :SEARch:SERial:SPI:PATTern:WIDTh? query returns the current data width setting.Return Format&lt;width&gt;&lt;NL&gt;&lt;width&gt; ::= integer from 1 to 10See Also:SEARch Commands:SEARch:SERial:SPI:PATTern:DATA</c><c> :SEARch:SERial:UART:DATA:SEARch:SERial:UART Commands Name:SEARch:SERial:UART:DATA � Command Syntax:SEARch:SERial:UART:DATA &lt;value&gt;&lt;value&gt; ::= 8-bit integer from 0-255 (0x00-0xff) in decimal, &lt;hexadecimal&gt;, &lt;binary&gt;, or &lt;quoted_string&gt; format&lt;hexadecimal&gt; ::= #Hnn where n ::= {0,..,9| A,..,F} for hexadecimal&lt;binary&gt; ::= #Bnn...n where n ::= {0 | 1} for binary&lt;quoted_string&gt; ::= any of the 128 valid 7-bit ASCII characters (or standard abbreviations)The :SEARch:SERial:UART:DATA command specifies a data value when searching for UART/RS232 events.The data value qualifier is specified using the :SEARch:SERial:UART:QUALifier command.Query Syntax:SEARch:SERial:UART:DATA?The :SEARch:SERial:UART:DATA? query returns the current data value setting.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= 8-bit integer from 0-255 (0x00-0xff) in decimal formatSee Also:SEARch Commands:SEARch:SERial:UART:MODE:SEARch:SERial:UART:QUALifier</c><c> :SEARch:SERial:UART:MODE:SEARch:SERial:UART Commands Name:SEARch:SERial:UART:MODE � Command Syntax:SEARch:SERial:UART:MODE &lt;value&gt;&lt;value&gt; ::= {RDATa | RD1 | RD0 | RDX | TDATa | TD1 | TD0 | TDX | PARityerror | AERRor}The :SEARch:SERial:UART:MODE command selects the type of UART/RS232 information to find in the Lister display:RDATa � searches for a receive data value when data words are from 5 to 8 bits long.RD1 � searches for a receive data value when data words are 9 bits long and the 9th (alert) bit is 1.RD0 � searches for a receive data value when data words are 9 bits long and the 9th (alert) bit is 0.RDX � searches for a receive data value when data words are 9 bits long and the 9th (alert) bit is a don't care (X).TDATa � searches for a transmit data value when data words are from 5 to 8 bits long.TD1 � searches for a transmit data value when data words are 9 bits long and the 9th (alert) bit is 1.TD0 � searches for a transmit data value when data words are 9 bits long and the 9th (alert) bit is 0.TDX � searches for a transmit data value when data words are 9 bits long and the 9th (alert) bit is a don't care (X).PARityerror � searches for parity errors.AERRor � searches for any error.Data values are specified using the :SEARch:SERial:UART:DATA command.Data value qualifiers are specified using the :SEARch:SERial:UART:QUALifier command.Query Syntax:SEARch:SERial:UART:MODE?The :SEARch:SERial:UART:MODE? query returns ...Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {RDAT | RD1 | RD0 | RDX | TDAT | TD1 | TD0 | TDX | PAR | AERR}See Also:SEARch Commands:SEARch:SERial:UART:DATA:SEARch:SERial:UART:QUALifier</c><c> :SEARch:SERial:UART:QUALifier:SEARch:SERial:UART Commands Name:SEARch:SERial:UART:QUALifier � Command Syntax:SEARch:SERial:UART:QUALifier &lt;value&gt;&lt;value&gt; ::= {EQUal | NOTequal | GREaterthan | LESSthan}The :SEARch:SERial:UART:QUALifier command specifies the data value qualifier when searching for UART/RS232 events.Query Syntax:SEARch:SERial:UART:QUALifier?The :SEARch:SERial:UART:QUALifier? query returns the current data value qualifier setting.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {EQU | NOT | GRE | LESS}See Also:SEARch Commands:SEARch:SERial:UART:DATA</c><c> :SEARch:STATeGeneral :SEARch Commands Name:SEARch:STATe � Command Syntax:SEARch:STATe &lt;value&gt;&lt;value&gt; ::= {{0 | OFF} | {1 | ON}}The :SEARch:STATe command enables or disables the search feature.Query Syntax:SEARch:STATe?The :SEARch:STATe? query returns returns the current setting.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {0 | 1}See Also:SEARch Commands:SEARch:MODE</c><c> :SERialRoot (:) Commands Name:SERial � Query Syntax:SERial?The :SERial? query returns the serial number of the instrument.Return Format:Unquoted string&lt;NL&gt;See AlsoIntroduction to Root (:) Commands</c><c> :STATusRoot (:) Commands Name:STATus � Query Syntax:STATus? &lt;source&gt;&lt;source&gt; ::= {CHANnel&lt;n&gt; | FUNCtion | MATH | SBUS1 | WMEMory&lt;r&gt;} for the DSO models&lt;source&gt; ::= {CHANnel&lt;n&gt; | DIGital&lt;d&gt; | POD{1 | 2} | BUS{1 | 2} | FUNCtion | MATH | SBUS1 | WMEMory&lt;r&gt;} for the MSO models&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 format&lt;r&gt; ::= 1 to (# ref waveforms) in NR1 formatThe :STATus? query reports whether the channel, function, or serial decode bus specified by &lt;source&gt; is displayed.MATH is an alias for FUNCtion.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {1 | 0}See AlsoIntroduction to Root (:) Commands:BLANk:CHANnel&lt;n&gt;:DISPlay:DIGital&lt;d&gt;:DISPlay:FUNCtion:DISPlay:POD&lt;n&gt;:DISPlay:WMEMory&lt;r&gt;:DISPlay:VIEW</c><c> :SYSTem:DATE:SYSTem Commands Name:SYSTem:DATE � Command Syntax:SYSTem:DATE &lt;date&gt;&lt;date&gt; ::= &lt;year&gt;,&lt;month&gt;,&lt;day&gt;&lt;year&gt; ::= 4-digit year in NR1 format&lt;month&gt; ::= {1,..,12 | JANuary | FEBruary | MARch | APRil | MAY | JUNe | JULy | AUGust | SEPtember | OCTober | NOVember | DECember}&lt;day&gt; ::= {1,..,31}The :SYSTem:DATE command sets the date. Validity checking is performed to ensure that the date is valid.Query Syntax:SYSTem:DATE?The SYSTem:DATE? query returns the date.Return Format&lt;year&gt;,&lt;month&gt;,&lt;day&gt;&lt;NL&gt;See AlsoIntroduction to :SYSTem Commands:SYSTem:TIME</c><c> :SYSTem:DSP:SYSTem Commands Name:SYSTem:DSP � Command Syntax:SYSTem:DSP &lt;string&gt;&lt;string&gt; ::= quoted ASCII string (up to 75 characters)The :SYSTem:DSP command writes the quoted string (excluding quotation marks) to a text box in the center of the display. Use :SYStem:DSP "" to remotely remove the message from the display. (Two sets of quote marks without a space between them creates a NULL string.) Press any menu key to manually remove the message from the display.See AlsoIntroduction to :SYSTem Commands</c><c> :SYSTem:ERRor:SYSTem Commands Name:SYSTem:ERRor � Query Syntax:SYSTem:ERRor?The :SYSTem:ERRor? query outputs the next error number and text from the error queue. The instrument has an error queue that is 30 errors deep and operates on a first-in, first-out basis. Repeatedly sending the :SYSTem:ERRor? query returns the errors in the order that they occurred until the queue is empty. Any further queries then return zero until another error occurs.Return Format&lt;error number&gt;,&lt;error string&gt;&lt;NL&gt;&lt;error number&gt; ::= an integer error code in NR1 format&lt;error string&gt; ::= quoted ASCII string containing the error messageError messages are listed in Error Messages.See AlsoIntroduction to :SYSTem Commands*ESR (Standard Event Status Register)*CLS (Clear Status)</c><c> :SYSTem:LOCK:SYSTem Commands Name:SYSTem:LOCK � Command Syntax:SYSTem:LOCK &lt;value&gt;&lt;value&gt; ::= {{1 | ON} | {0 | OFF}}The :SYSTem:LOCK command disables the front panel. LOCK ON is the equivalent of sending a local lockout message over the programming interface.Query Syntax:SYSTem:LOCK?The :SYSTem:LOCK? query returns the lock status of the front panel.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {1 | 0}See AlsoIntroduction to :SYSTem Commands</c><c> :SYSTem:MENU:SYSTem Commands Name:SYSTem:MENU � Command Syntax:SYSTem:MENU &lt;menu&gt;&lt;menu&gt; ::= {MASK | MEASure | SEGMented | LISTer}The :SYSTem:MENU command changes the front panel softkey menu.</c><c> :SYSTem:PRESet:SYSTem Commands Name:SYSTem:PRESet � Command Syntax:SYSTem:PRESetThe :SYSTem:PRESet command places the instrument in a known state. This is the same as pressing the [Default Setup] key or [Save/Recall] &gt; Default/Erase &gt; Default Setup on the front panel.When you perform a default setup, some user settings (like preferences) remain unchanged. To reset all user settings to their factory defaults, use the *RST command.Reset conditions are:Acquire MenuModeNormalAveragingOff# Averages8Analog Channel MenuChannel 1OnChannel 2OffVolts/division5.00 VOffset0.00CouplingDCProbe attenuation10:1VernierOffInvertOffBW limitOffImpedance1 M Ohm (cannot be changed)UnitsVoltsSkew0Cursor MenuSourceChannel 1Digital Channel Menu (MSO models only)Channel 0 - 7OffLabelsOffThresholdTTL (1.4 V)Display MenuPersistenceOffGrid20%Quick Meas MenuSourceChannel 1Run Control Scope is runningTime Base MenuMain time/division100 usMain time base delay0.00 sDelay time/division500 nsDelay time base delay0.00 sReferencecenterModemainVernierOffTrigger MenuTypeEdgeModeAutoCouplingdcSourceChannel 1Level0.0 VSlopePositiveHF Reject and noise rejectOffHoldoff40 nsExternal probe attenuation10:1External UnitsVoltsExternal Impedance1 M Ohm (cannot be changed)See AlsoIntroduction to Common (*) Commands*RST (Reset)</c><c> :SYSTem:PROTection:LOCK:SYSTem Commands Name:SYSTem:PROTection:LOCK � Command Syntax:SYSTem:PROTection:LOCK &lt;value&gt;&lt;value&gt; ::= {{1 | ON} | {0 | OFF}}The :SYSTem:PROTection:LOCK command disables the fifty ohm impedance setting for all analog channels.Query Syntax:SYSTem:PROTection:LOCK?The :SYSTem:PROTection:LOCK? query returns the analog channel protection lock status.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {1 | 0}See AlsoIntroduction to :SYSTem Commands</c><c> :SYSTem:SETup:SYSTem Commands Name:SYSTem:SETup � Command Syntax:SYSTem:SETup &lt;setup_data&gt;&lt;setup_data&gt; ::= binary block data in IEEE 488.2 # format.The :SYSTem:SETup command sets the oscilloscope as defined by the data in the setup (learn) string sent from the controller. The setup string does not change the interface mode or interface address.Query Syntax:SYSTem:SETup?The :SYSTem:SETup? query operates the same as the *LRN? query. It outputs the current oscilloscope setup in the form of a learn string to the controller. The setup (learn) string is sent and received as a binary block of data. The format for the data transmission is the # format defined in the IEEE 488.2 specification.Return Format&lt;setup_data&gt;&lt;NL&gt;&lt;setup_data&gt; ::= binary block data in IEEE 488.2 # formatSee AlsoIntroduction to :SYSTem Commands*LRN (Learn Device Setup)Example Code ' SAVE_SYSTEM_SETUP - The :SYSTEM:SETUP? query returns a program ' message that contains the current state of the instrument. Its ' format is a definite-length binary block, for example, ' #800075595&lt;setup string&gt;&lt;NL&gt; ' where the setup string is 75595 bytes in length. myScope.WriteString ":SYSTEM:SETUP?" varQueryResult = myScope.ReadIEEEBlock(BinaryType_UI1) CheckForInstrumentErrors ' After reading query results. ' Output setup string to a file: Dim strPath As String strPath = "c:\scope\config\setup.dat" ' Open file for output. Close #1 ' If #1 is open, close it. Open strPath For Binary Access Write Lock Write As #1 Put #1, , varQueryResult ' Write data. Close #1 ' Close file. ' RESTORE_SYSTEM_SETUP - Read the setup string from a file and ' write it back to the oscilloscope. Dim varSetupString As Variant strPath = "c:\scope\config\setup.dat" ' Open file for input. Open strPath For Binary Access Read As #1 Get #1, , varSetupString ' Read data. Close #1 ' Close file. ' Write setup string back to oscilloscope using ":SYSTEM:SETUP" ' command: myScope.WriteIEEEBlock ":SYSTEM:SETUP ", varSetupString CheckForInstrumentErrorsSee complete example programs at: Programming Examples</c><c> :SYSTem:TIME:SYSTem Commands Name:SYSTem:TIME � Command Syntax:SYSTem:TIME &lt;time&gt;&lt;time&gt; ::= hours,minutes,seconds in NR1 formatThe :SYSTem:TIME command sets the system time, using a 24-hour format. Commas are used as separators. Validity checking is performed to ensure that the time is valid.Query Syntax:SYSTem:TIME? &lt;time&gt;The :SYSTem:TIME? query returns the current system time.Return Format&lt;time&gt;&lt;NL&gt;&lt;time&gt; ::= hours,minutes,seconds in NR1 formatSee AlsoIntroduction to :SYSTem Commands:SYSTem:DATE</c><c> :TER (Trigger Event Register)Root (:) Commands Name:TER (Trigger Event Register) � Query Syntax:TER?The :TER? query reads the Trigger Event Register. After the Trigger Event Register is read, it is cleared. A one indicates a trigger has occurred. A zero indicates a trigger has not occurred.The Trigger Event Register is summarized in the TRG bit of the Status Byte Register (STB). A Service Request (SRQ) can be generated when the TRG bit of the Status Byte transitions, and the TRG bit is set in the Service Request Enable register. The Trigger Event Register must be cleared each time you want a new service request to be generated.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {1 | 0}; a 16-bit integer in NR1 format.See AlsoIntroduction to Root (:) Commands*SRE (Service Request Enable)*STB (Read Status Byte)</c><c>Introduction to :TIMebase CommandsThe TIMebase subsystem commands control the horizontal (X-axis) functions and set the oscilloscope to X-Y mode (where channel 1 becomes the X input and channel 2 becomes the Y input). The time per division, delay, vernier control, and reference can be controlled for the main and window (zoomed) time bases.Reporting the Setup. Use :TIMebase? to query setup information for the TIMebase subsystem.Return Format. The following is a sample response from the :TIMebase? query. In this case, the query was issued following a *RST command.:TIM:MODE MAIN;REF CENT;MAIN:RANG +1.00E-03;POS +0.0E+00</c><c> :TIMebase:MODE:TIMebase Commands Name:TIMebase:MODE � Command Syntax:TIMebase:MODE &lt;value&gt;&lt;value&gt; ::= {MAIN | WINDow | XY | ROLL}The :TIMebase:MODE command sets the current time base. There are four time base modes:MAIN � The normal time base mode is the main time base. It is the default time base mode after the *RST (Reset) command.WINDow � In the WINDow (zoomed or delayed) time base mode, measurements are made in the zoomed time base if possible; otherwise, the measurements are made in the main time base.XY � In the XY mode, the :TIMebase:RANGe, :TIMebase:POSition, and :TIMebase:REFerence commands are not available. No measurements are available in this mode.ROLL � In the ROLL mode, data moves continuously across the display from left to right. The oscilloscope runs continuously and is untriggered. The :TIMebase:REFerence selection changes to RIGHt.Query Syntax:TIMebase:MODE?The :TIMebase:MODE query returns the current time base mode.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {MAIN | WIND | XY | ROLL}See AlsoIntroduction to :TIMebase Commands*RST (Reset):TIMebase:RANGe:TIMebase:POSition:TIMebase:REFerenceExample Code ' TIMEBASE_MODE - (not executed in this example) ' Set the time base mode to MAIN, DELAYED, XY, or ROLL. ' Set time base mode to main. myScope.WriteString ":TIMEBASE:MODE MAIN"See complete example programs at: Programming Examples</c><c> :TIMebase:REFerence:TIMebase Commands Name:TIMebase:REFerence � Command Syntax:TIMebase:REFerence &lt;reference&gt;&lt;reference&gt; ::= {LEFT | CENTer | RIGHt}The :TIMebase:REFerence command sets the time reference to one division from the left side of the screen, to the center of the screen, or to one division from the right side of the screen. Time reference is the point on the display where the trigger point is referenced.Query Syntax:TIMebase:REFerence?The :TIMebase:REFerence? query returns the current display reference for the main window.Return Format&lt;reference&gt;&lt;NL&gt;&lt;reference&gt; ::= {LEFT | CENT | RIGH}See AlsoIntroduction to :TIMebase Commands:TIMebase:MODEExample Code ' TIME_REFERENCE - Possible values are LEFT, CENTer, or RIGHt. ' - LEFT sets the display reference one time division from the left. ' - CENTer sets the display reference to the center of the screen. ' - RIGHt sets the display reference one time division from the right. myScope.WriteString ":TIMebase:REFerence CENTer" ' Set reference to center.See complete example programs at: Programming Examples</c><c> :TIMebase:VERNier:TIMebase Commands Name:TIMebase:VERNier � Command Syntax:TIMebase:VERNier &lt;vernier value&gt;&lt;vernier value&gt; ::= {{1 | ON} | {0 | OFF}The :TIMebase:VERNier command specifies whether the time base control's vernier (fine horizontal adjustment) setting is ON (1) or OFF (0).Query Syntax:TIMebase:VERNier?The :TIMebase:VERNier? query returns the current state of the time base control's vernier setting.Return Format&lt;vernier value&gt;&lt;NL&gt;&lt;vernier value&gt; ::= {0 | 1}See AlsoIntroduction to :TIMebase Commands</c><c> :TIMebase:WINDow:POSition:TIMebase Commands Name:TIMebase:WINDow:POSition � Command Syntax:TIMebase:WINDow:POSition &lt;pos value&gt;&lt;pos value&gt; ::= time from the trigger event to the zoomed (delayed) view reference point in NR3 formatThe :TIMebase:WINDow:POSition command sets the horizontal position in the zoomed (delayed) view of the main sweep. The main sweep range and the main sweep horizontal position determine the range for this command. The value for this command must keep the zoomed view window within the main sweep range.Query Syntax:TIMebase:WINDow:POSition?The :TIMebase:WINDow:POSition? query returns the current horizontal window position setting in the zoomed view.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= position value in secondsSee AlsoIntroduction to :TIMebase Commands:TIMebase:MODE:TIMebase:POSition:TIMebase:RANGe:TIMebase:SCALe:TIMebase:WINDow:RANGe:TIMebase:WINDow:SCALe</c><c> :TIMebase:WINDow:RANGe:TIMebase Commands Name:TIMebase:WINDow:RANGe � Command Syntax:TIMebase:WINDow:RANGe &lt;range value&gt;&lt;range value&gt; ::= range value in seconds in NR3 formatThe :TIMebase:WINDow:RANGe command sets the full-scale horizontal time in seconds for the zoomed (delayed) window. The range is 10 times the current zoomed view window seconds per division setting. The main sweep range determines the range for this command. The maximum value is one half of the :TIMebase:RANGe value.Query Syntax:TIMebase:WINDow:RANGe?The :TIMebase:WINDow:RANGe? query returns the current window timebase range setting.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= range value in secondsSee AlsoIntroduction to :TIMebase Commands:TIMebase:RANGe:TIMebase:POSition:TIMebase:SCALe</c><c> :TIMebase:WINDow:SCALe:TIMebase Commands Name:TIMebase:WINDow:SCALe � Command Syntax:TIMebase:WINDow:SCALe &lt;scale_value&gt;&lt;scale_value&gt; ::= scale value in seconds in NR3 formatThe :TIMebase:WINDow:SCALe command sets the zoomed (delayed) window horizontal scale (seconds/division). The main sweep scale determines the range for this command. The maximum value is one half of the :TIMebase:SCALe value.Query Syntax:TIMebase:WINDow:SCALe?The :TIMebase:WINDow:SCALe? query returns the current zoomed window scale setting.Return Format&lt;scale_value&gt;&lt;NL&gt;&lt;scale_value&gt; ::= current seconds per division for the zoomed windowSee AlsoIntroduction to :TIMebase Commands:TIMebase:RANGe:TIMebase:POSition:TIMebase:SCALe:TIMebase:WINDow:RANGe</c><c> :TIMebase:POSition:TIMebase Commands Name:TIMebase:POSition � Command Syntax:TIMebase:POSition &lt;pos&gt;&lt;pos&gt; ::= time in seconds from the trigger to the display reference in NR3 formatThe :TIMebase:POSition command sets the time interval between the trigger event and the display reference point on the screen. The display reference point is either left, right, or center and is set with the :TIMebase:REFerence command. The maximum position value depends on the time/division settings.This command is an alias for the :TIMebase:DELay command.Query Syntax:TIMebase:POSition?The :TIMebase:POSition? query returns the current time from the trigger to the display reference in seconds.Return Format&lt;pos&gt;&lt;NL&gt;&lt;pos&gt; ::= time in seconds from the trigger to the display reference in NR3 formatSee AlsoIntroduction to :TIMebase Commands:TIMebase:REFerence:TIMebase:RANGe:TIMebase:SCALe:TIMebase:WINDow:POSition:TIMebase:DELay</c><c> :TIMebase:RANGe:TIMebase Commands Name:TIMebase:RANGe � Command Syntax:TIMebase:RANGe &lt;range_value&gt;&lt;range_value&gt; ::= time for 10 div in seconds in NR3 formatThe :TIMebase:RANGe command sets the full-scale horizontal time in seconds for the main window. The range is 10 times the current time-per-division setting.Query Syntax:TIMebase:RANGe?The :TIMebase:RANGe query returns the current full-scale range value for the main window.Return Format&lt;range_value&gt;&lt;NL&gt;&lt;range_value&gt; ::= time for 10 div in seconds in NR3 formatSee AlsoIntroduction to :TIMebase Commands:TIMebase:MODE:TIMebase:SCALe:TIMebase:WINDow:RANGeExample Code ' TIME_RANGE - Sets the full scale horizontal time in seconds. The ' range value is 10 times the time per division. myScope.WriteString ":TIM:RANG 2e-3" ' Set the time range to 0.002 seconds.See complete example programs at: Programming Examples</c><c> :TIMebase:SCALe:TIMebase Commands Name:TIMebase:SCALe � Command Syntax:TIMebase:SCALe &lt;scale_value&gt;&lt;scale_value&gt; ::= time/div in seconds in NR3 formatThe :TIMebase:SCALe command sets the horizontal scale or units per division for the main window.Query Syntax:TIMebase:SCALe?The :TIMebase:SCALe? query returns the current horizontal scale setting in seconds per division for the main window.Return Format&lt;scale_value&gt;&lt;NL&gt;&lt;scale_value&gt; ::= time/div in seconds in NR3 formatSee AlsoIntroduction to :TIMebase Commands:TIMebase:RANGe:TIMebase:WINDow:SCALe:TIMebase:WINDow:RANGe</c><c>Introduction to :TRIGger CommandsThe commands in the TRIGger subsystem define the conditions for an internal trigger. Many of these commands are valid in multiple trigger modes.The default trigger mode is :EDGE.The trigger subsystem controls the trigger sweep mode and the trigger specification. The trigger sweep (see :TRIGger:SWEep) can be AUTO or NORMal.NORMal mode � displays a waveform only if a trigger signal is present and the trigger conditions are met. Otherwise the oscilloscope does not trigger and the display is not updated. This mode is useful for low-repetitive-rate signals.AUTO trigger mode � generates an artificial trigger event if the trigger specification is not satisfied within a preset time, acquires unsynchronized data and displays it.AUTO mode is useful for signals other than low-repetitive-rate signals. You must use this mode to display a DC signal because there are no edges on which to trigger.The following trigger types are available (see :TRIGger:MODE).Edge triggering � identifies a trigger by looking for a specified slope and voltage level on a waveform.Pulse width triggering � (:TRIGger:GLITch commands) sets the oscilloscope to trigger on a positive pulse or on a negative pulse of a specified width.Pattern triggering � identifies a trigger condition by looking for a specified pattern. This pattern is a logical AND combination of the channels. You can also trigger on a specified time duration of a pattern.TV triggering � is used to capture the complicated waveforms of television equipment. The trigger circuitry detects the vertical and horizontal interval of the waveform and produces triggers based on the TV trigger settings you selected. TV triggering requires greater than � division of sync amplitude with any analog channel as the trigger source.Reporting the Setup. Use :TRIGger? to query setup information for the TRIGger subsystem.Return Format. The return format for the TRIGger? query varies depending on the current mode. The following is a sample response from the :TRIGger? query. In this case, the query was issued following a *RST command.:TRIG:MODE EDGE;SWE AUTO;NREJ 0;HFR 0;HOLD +60.0000000000000E-09; :TRIG:EDGE:SOUR CHAN1;LEV +0.00000E+00;SLOP POS;REJ OFF;COUP DC</c><c> :TRIGger[:EDGE]:COUPling:TRIGger[:EDGE] Commands Name:TRIGger[:EDGE]:COUPling � Command Syntax:TRIGger[:EDGE]:COUPling &lt;coupling&gt;&lt;coupling&gt; ::= {AC | DC | LFReject}The :TRIGger[:EDGE]:COUPling command sets the input coupling for the selected trigger sources. The coupling can be set to AC, DC, or LFReject.AC coupling places a high-pass filter (10 Hz for analog channels, and 3.5 Hz for all External trigger inputs) in the trigger path, removing dc offset voltage from the trigger waveform. Use AC coupling to get a stable edge trigger when your waveform has a large dc offset.LFReject coupling places a 50 KHz high-pass filter in the trigger path.DC coupling allows dc and ac signals into the trigger path.The :TRIGger[:EDGE]:COUPling and the :TRIGger[:EDGE]:REJect selections are coupled. Changing the setting of the :TRIGger[:EDGE]:REJect can change the COUPling setting.Query Syntax:TRIGger[:EDGE]:COUPling?The :TRIGger[:EDGE]:COUPling? query returns the current coupling selection.Return Format&lt;coupling&gt;&lt;NL&gt;&lt;coupling&gt; ::= {AC | DC | LFR}See AlsoIntroduction to :TRIGger Commands:TRIGger:MODE:TRIGger[:EDGE]:REJect</c><c> :TRIGger[:EDGE]:LEVel:TRIGger[:EDGE] Commands Name:TRIGger[:EDGE]:LEVel � Command Syntax:TRIGger[:EDGE]:LEVel &lt;level&gt;&lt;level&gt; ::= &lt;level&gt;[,&lt;source&gt;]&lt;level&gt; ::= 0.75 x full-scale voltage from center screen in NR3 format for internal triggers&lt;level&gt; ::= �(external range setting) in NR3 format for external triggers&lt;level&gt; ::= �8 V for digital channels (MSO models)&lt;source&gt; ::= {CHANnel&lt;n&gt; | EXTernal} for the DSO models&lt;source&gt; ::= {CHANnel&lt;n&gt; | DIGital&lt;d&gt; | EXTernal} for the MSO models&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 formatThe :TRIGger[:EDGE]:LEVel command sets the trigger level voltage for the active trigger source.If the optional source is specified and is not the active source, the level on the active source is not affected and the active source is not changed.Query Syntax:TRIGger[:EDGE]:LEVel? [&lt;source&gt;]The :TRIGger[:EDGE]:LEVel? query returns the trigger level of the current trigger source.Return Format&lt;level&gt;&lt;NL&gt;See AlsoIntroduction to :TRIGger Commands:TRIGger[:EDGE]:SOURce:EXTernal:RANGe:POD&lt;n&gt;:THReshold:DIGital&lt;d&gt;:THReshold</c><c> :TRIGger[:EDGE]:REJect:TRIGger[:EDGE] Commands Name:TRIGger[:EDGE]:REJect � Command Syntax:TRIGger[:EDGE]:REJect &lt;reject&gt;&lt;reject&gt; ::= {OFF | LFReject | HFReject}The :TRIGger[:EDGE]:REJect command turns the low-frequency or high-frequency reject filter on or off. You can turn on one of these filters at a time.The high frequency reject filter adds a 50 kHz low-pass filter in the trigger path to remove high frequency components from the trigger waveform. Use the high frequency reject filter to remove high-frequency noise, such as AM or FM broadcast stations, from the trigger path.The low frequency reject filter adds a 50 kHz high-pass filter in series with the trigger waveform to remove any unwanted low frequency components from a trigger waveform, such as power line frequencies, that can interfere with proper triggering.The :TRIGger[:EDGE]:REJect and the :TRIGger[:EDGE]:COUPling selections are coupled. Changing the setting of the :TRIGger[:EDGE]:COUPling can change the COUPling setting.Query Syntax:TRIGger[:EDGE]:REJect?The :TRIGger[:EDGE]:REJect? query returns the current status of the reject filter.Return Format&lt;reject&gt;&lt;NL&gt;&lt;reject&gt; ::= {OFF | LFR | HFR}See AlsoIntroduction to :TRIGger Commands:TRIGger:HFReject:TRIGger[:EDGE]:COUPling</c><c> :TRIGger[:EDGE]:SLOPe:TRIGger[:EDGE] Commands Name:TRIGger[:EDGE]:SLOPe � Command Syntax:TRIGger[:EDGE]:SLOPe &lt;slope&gt;&lt;slope&gt; ::= {NEGative | POSitive | EITHer | ALTernate}The :TRIGger[:EDGE]:SLOPe command specifies the slope of the edge for the trigger. The SLOPe command is not valid in TV trigger mode. Instead, use :TRIGger:TV:POLarity to set the polarity in TV trigger mode.Query Syntax:TRIGger[:EDGE]:SLOPe?The :TRIGger[:EDGE]:SLOPe? query returns the current trigger slope.Return Format&lt;slope&gt;&lt;NL&gt;&lt;slope&gt; ::= {NEG | POS | EITH | ALT}See AlsoIntroduction to :TRIGger Commands:TRIGger:MODE:TRIGger:TV:POLarityExample Code ' TRIGGER_EDGE_SLOPE - Sets the slope of the edge for the trigger. ' Set the slope to positive. myScope.WriteString ":TRIGGER:EDGE:SLOPE POSITIVE"See complete example programs at: Programming Examples</c><c> :TRIGger[:EDGE]:SOURce:TRIGger[:EDGE] Commands Name:TRIGger[:EDGE]:SOURce � Command Syntax:TRIGger[:EDGE]:SOURce &lt;source&gt;&lt;source&gt; ::= {CHANnel&lt;n&gt; | EXTernal | LINE | WGEN} for the DSO models&lt;source&gt; ::= {CHANnel&lt;n&gt; | DIGital&lt;d&gt; | EXTernal | LINE | WGEN} for the MSO models&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 formatThe :TRIGger[:EDGE]:SOURce command selects the input that produces the trigger.EXTernal � triggers on the rear panel EXT TRIG IN signal.LINE � triggers at the 50% level of the rising or falling edge of the AC power source signal.WGEN � triggers at the 50% level of the rising edge of the waveform generator output signal. This option is not available when the DC or NOISe waveforms are selected.Query Syntax:TRIGger[:EDGE]:SOURce?The :TRIGger[:EDGE]:SOURce? query returns the current source. If all channels are off, the query returns "NONE."Return Format&lt;source&gt;&lt;NL&gt;&lt;source&gt; ::= {CHAN&lt;n&gt; | EXT | LINE | WGEN | NONE} for the DSO models&lt;source&gt; ::= {CHAN&lt;n&gt; | DIG&lt;d&gt; | EXTernal | LINE | WGEN | NONE} for the MSO modelsSee AlsoIntroduction to :TRIGger Commands:TRIGger:MODEExample Code ' TRIGGER_EDGE_SOURCE - Selects the channel that actually produces the ' edge trigger. Any channel can be selected. myScope.WriteString ":TRIGger:EDGE:SOURce CHANnel1"See complete example programs at: Programming Examples</c><c> :TRIGger:FORCeGeneral :TRIGger Commands Name:TRIGger:FORCe � Command Syntax:TRIGger:FORCeThe :TRIGger:FORCe command causes an acquisition to be captured even though the trigger condition has not been met. This command is equivalent to the front panel [Force Trigger] key.See AlsoIntroduction to :TRIGger Commands</c><c> :TRIGger:GLITch:GREaterthan:TRIGger:GLITch Commands Name:TRIGger:GLITch:GREaterthan � Command Syntax:TRIGger:GLITch:GREaterthan &lt;greater_than_time&gt;[&lt;suffix&gt;]&lt;greater_than_time&gt; ::= floating-point number in NR3 format&lt;suffix&gt; ::= {s | ms | us | ns | ps}The :TRIGger:GLITch:GREaterthan command sets the minimum pulse width duration for the selected :TRIGger:GLITch:SOURce.Query Syntax:TRIGger:GLITch:GREaterthan?The :TRIGger:GLITch:GREaterthan? query returns the minimum pulse width duration time for :TRIGger:GLITch:SOURce.Return Format&lt;greater_than_time&gt;&lt;NL&gt;&lt;greater_than_time&gt; ::= floating-point number in NR3 format.See AlsoIntroduction to :TRIGger Commands:TRIGger:GLITch:SOURce:TRIGger:GLITch:QUALifier:TRIGger:MODE</c><c> :TRIGger:GLITch:LESSthan:TRIGger:GLITch Commands Name:TRIGger:GLITch:LESSthan � Command Syntax:TRIGger:GLITch:LESSthan &lt;less_than_time&gt;[&lt;suffix&gt;]&lt;less_than_time&gt; ::= floating-point number in NR3 format&lt;suffix&gt; ::= {s | ms | us | ns | ps}The :TRIGger:GLITch:LESSthan command sets the maximum pulse width duration for the selected :TRIGger:GLITch:SOURce.Query Syntax:TRIGger:GLITch:LESSthan?The :TRIGger:GLITch:LESSthan? query returns the pulse width duration time for :TRIGger:GLITch:SOURce.Return Format&lt;less_than_time&gt;&lt;NL&gt;&lt;less_than_time&gt; ::= floating-point number in NR3 format.See AlsoIntroduction to :TRIGger Commands:TRIGger:GLITch:SOURce:TRIGger:GLITch:QUALifier:TRIGger:MODE</c><c> :TRIGger:GLITch:LEVel:TRIGger:GLITch Commands Name:TRIGger:GLITch:LEVel � Command Syntax:TRIGger:GLITch:LEVel &lt;level_argument&gt;&lt;level_argument&gt; ::= &lt;level&gt;[, &lt;source&gt;]&lt;level&gt; ::= .75 x full-scale voltage from center screen in NR3 format for internal triggers&lt;level&gt; ::= �(external range setting) in NR3 format for external triggers (DSO models)&lt;level&gt; ::= �8 V for digital channels (MSO models)&lt;source&gt; ::= {CHANnel&lt;n&gt; | EXTernal} for DSO models&lt;source&gt; ::= {CHANnel&lt;n&gt; | DIGital&lt;d&gt;} for MSO models&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 formatThe :TRIGger:GLITch:LEVel command sets the trigger level voltage for the active pulse width trigger.Query Syntax:TRIGger:GLITch:LEVel?The :TRIGger:GLITch:LEVel? query returns the trigger level of the current pulse width trigger mode. If all channels are off, the query returns "NONE."Return Format&lt;level_argument&gt;&lt;NL&gt;See AlsoIntroduction to :TRIGger Commands:TRIGger:MODE:TRIGger:GLITch:SOURce:EXTernal:RANGe</c><c> :TRIGger:GLITch:POLarity:TRIGger:GLITch Commands Name:TRIGger:GLITch:POLarity � Command Syntax:TRIGger:GLITch:POLarity &lt;polarity&gt;&lt;polarity&gt; ::= {POSitive | NEGative}The :TRIGger:GLITch:POLarity command sets the polarity for the glitch pulse width trigger.Query Syntax:TRIGger:GLITch:POLarity?The :TRIGger:GLITch:POLarity? query returns the glitch pulse width trigger polarity.Return Format&lt;polarity&gt;&lt;NL&gt;&lt;polarity&gt; ::= {POS | NEG}See AlsoIntroduction to :TRIGger Commands:TRIGger:MODE:TRIGger:GLITch:SOURce</c><c> :TRIGger:GLITch:QUALifier:TRIGger:GLITch Commands Name:TRIGger:GLITch:QUALifier � Command Syntax:TRIGger:GLITch:QUALifier &lt;operator&gt;&lt;operator&gt; ::= {GREaterthan | LESSthan | RANGe}This command sets the mode of operation of the glitch pulse width trigger. The oscilloscope can trigger on a pulse width that is greater than a time value, less than a time value, or within a range of time values.Query Syntax:TRIGger:GLITch:QUALifier?The :TRIGger:GLITch:QUALifier? query returns the glitch pulse width qualifier.Return Format&lt;operator&gt;&lt;NL&gt;&lt;operator&gt; ::= {GRE | LESS | RANG}See AlsoIntroduction to :TRIGger Commands:TRIGger:GLITch:SOURce:TRIGger:MODE</c><c> :TRIGger:GLITch:RANGe:TRIGger:GLITch Commands Name:TRIGger:GLITch:RANGe � Command Syntax:TRIGger:GLITch:RANGe &lt;less_than_time&gt;[suffix], &lt;greater_than_time&gt;[suffix]&lt;less_than_time&gt; ::= (15 ns - 10 seconds) in NR3 format&lt;greater_than_time&gt; ::= (10 ns - 9.99 seconds) in NR3 format[suffix] ::= {s | ms | us | ns | ps}The :TRIGger:GLITch:RANGe command sets the pulse width duration for the selected :TRIGger:GLITch:SOURce. You can enter the parameters in any order � the smaller value becomes the &lt;greater_than_time&gt; and the larger value becomes the &lt;less_than_time&gt;.Query Syntax:TRIGger:GLITch:RANGe?The :TRIGger:GLITch:RANGe? query returns the pulse width duration time for :TRIGger:GLITch:SOURce.Return Format&lt;less_than_time&gt;,&lt;greater_than_time&gt;&lt;NL&gt;See AlsoIntroduction to :TRIGger Commands:TRIGger:GLITch:SOURce:TRIGger:GLITch:QUALifier:TRIGger:MODE</c><c> :TRIGger:GLITch:SOURce:TRIGger:GLITch Commands Name:TRIGger:GLITch:SOURce � Command Syntax:TRIGger:GLITch:SOURce &lt;source&gt;&lt;source&gt; ::= {DIGital&lt;d&gt; | CHANnel&lt;n&gt;}&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 formatThe :TRIGger:GLITch:SOURce command selects the channel that produces the pulse width trigger.Query Syntax:TRIGger:GLITch:SOURce?The :TRIGger:GLITch:SOURce? query returns the current pulse width source. If all channels are off, the query returns "NONE".Return Format&lt;source&gt;&lt;NL&gt;See AlsoIntroduction to :TRIGger Commands:TRIGger:MODE:TRIGger:GLITch:LEVel:TRIGger:GLITch:POLarity:TRIGger:GLITch:QUALifier:TRIGger:GLITch:RANGeExample CodeExample Code</c><c> :TRIGger:HFRejectGeneral :TRIGger Commands Name:TRIGger:HFReject � Command Syntax:TRIGger:HFReject &lt;value&gt;&lt;value&gt; ::= {{0 | OFF} | {1 | ON}}The :TRIGger:HFReject command turns the high frequency reject filter off and on. The high frequency reject filter adds a 50 kHz low-pass filter in the trigger path to remove high frequency components from the trigger waveform. Use this filter to remove high-frequency noise, such as AM or FM broadcast stations, from the trigger path.Query Syntax:TRIGger:HFReject?The :TRIGger:HFReject? query returns the current high frequency reject filter mode.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {0 | 1}See AlsoIntroduction to :TRIGger Commands:TRIGger[:EDGE]:REJect</c><c> :TRIGger:HOLDoffGeneral :TRIGger Commands Name:TRIGger:HOLDoff � Command Syntax:TRIGger:HOLDoff &lt;holdoff_time&gt;&lt;holdoff_time&gt; ::= 60 ns to 10 s in NR3 formatThe :TRIGger:HOLDoff command defines the holdoff time value in seconds. Holdoff keeps a trigger from occurring until after a certain amount of time has passed since the last trigger. This feature is valuable when a waveform crosses the trigger level multiple times during one period of the waveform. Without holdoff, the oscilloscope could trigger on each of the crossings, producing a confusing waveform. With holdoff set correctly, the oscilloscope always triggers on the same crossing. The correct holdoff setting is typically slightly less than one period.Query Syntax:TRIGger:HOLDoff?The :TRIGger:HOLDoff? query returns the holdoff time value for the current trigger mode.Return Format&lt;holdoff_time&gt;&lt;NL&gt;&lt;holdoff_time&gt; ::= the holdoff time value in seconds in NR3 format.See AlsoIntroduction to :TRIGger Commands</c><c> :TRIGger:LEVel:ASETupGeneral :TRIGger Commands Name:TRIGger:LEVel:ASETup � Command Syntax:TRIGger:LEVel:ASETupThe :TRIGger:LEVel:ASETup command automatically sets the trigger levels of all displayed analog channels to their waveforms' 50% values.If AC coupling is used, the trigger levels are set to 0 V.When High and Low (dual) trigger levels are used (as with Rise/Fall Time and Runt triggers, for example), this command has no effect.See Also:TRIGger[:EDGE]:LEVel</c><c> :TRIGger:LEVel:HIGHGeneral :TRIGger Commands Name:TRIGger:LEVel:HIGH � Command Syntax:TRIGger:LEVel:HIGH &lt;level&gt;, &lt;source&gt;&lt;level&gt; ::= 0.75 x full-scale voltage from center screen in NR3 format for internal triggers&lt;source&gt; ::= CHANnel&lt;n&gt;&lt;n&gt; ::= 1 to (# analog channels) in NR1 formatThe :TRIGger:LEVel:HIGH command sets the high trigger voltage level voltage for the specified source.Query Syntax:TRIGger:LEVel:HIGH? &lt;source&gt;The :TRIGger:LEVel:HIGH? query returns the high trigger voltage level for the specified source.Return Format&lt;level&gt;&lt;NL&gt;See AlsoIntroduction to :TRIGger Commands:TRIGger:LEVel:LOW:TRIGger[:EDGE]:SOURce</c><c> :TRIGger:LEVel:LOWGeneral :TRIGger Commands Name:TRIGger:LEVel:LOW � Command Syntax:TRIGger:LEVel:LOW &lt;level&gt;, &lt;source&gt;&lt;level&gt; ::= 0.75 x full-scale voltage from center screen in NR3 format for internal triggers&lt;source&gt; ::= CHANnel&lt;n&gt;&lt;n&gt; ::= 1 to (# analog channels) in NR1 formatThe :TRIGger:LEVel:LOW command sets the low trigger voltage level voltage for the specified source.Query Syntax:TRIGger:LEVel:LOW? &lt;source&gt;The :TRIGger:LEVel:LOW? query returns the low trigger voltage level for the specified source.Return Format&lt;level&gt;&lt;NL&gt;See AlsoIntroduction to :TRIGger Commands:TRIGger:LEVel:HIGH:TRIGger[:EDGE]:SOURce</c><c> :TRIGger:MODEGeneral :TRIGger Commands Name:TRIGger:MODE � Command Syntax:TRIGger:MODE &lt;mode&gt;&lt;mode&gt; ::= {EDGE | GLITch | PATTern | TV}The :TRIGger:MODE command selects the trigger mode (trigger type).Query Syntax:TRIGger:MODE?The :TRIGger:MODE? query returns the current trigger mode. If the :TIMebase:MODE is ROLL or XY, the query returns "NONE".Return Format&lt;mode&gt;&lt;NL&gt;&lt;mode&gt; ::= {EDGE | GLIT | PATT | TV}See AlsoIntroduction to :TRIGger Commands:TRIGger:SWEep:TIMebase:MODEExample Code ' TRIGGER_MODE - Set the trigger mode to EDGE. myScope.WriteString ":TRIGger:MODE EDGE"See complete example programs at: Programming Examples</c><c> :TRIGger:NREJectGeneral :TRIGger Commands Name:TRIGger:NREJect � Command Syntax:TRIGger:NREJect &lt;value&gt;&lt;value&gt; ::= {{0 | OFF} | {1 | ON}}The :TRIGger:NREJect command turns the noise reject filter off and on. When the noise reject filter is on, the trigger circuitry is less sensitive to noise but may require a greater amplitude waveform to trigger the oscilloscope. This command is not valid in TV trigger mode.Query Syntax:TRIGger:NREJect?The :TRIGger:NREJect? query returns the current noise reject filter mode.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {0 | 1}See AlsoIntroduction to :TRIGger Commands</c><c> :TRIGger:PATTern:TRIGger:PATTern Commands Name:TRIGger:PATTern � Command Syntax:TRIGger:PATTern &lt;pattern&gt;&lt;pattern&gt; ::= &lt;string&gt;[,&lt;edge_source&gt;,&lt;edge&gt;]&lt;string&gt; ::= "nn...n" where n ::= {0 | 1 | X | R | F} when &lt;base&gt; = ASCii&lt;string&gt; ::= "0xnn...n" where n ::= {0,..,9 | A,..,F | X | $} when &lt;base&gt; = HEX&lt;edge_source&gt; ::= {CHANnel&lt;n&gt; | NONE} for DSO models&lt;edge_source&gt; ::= {CHANnel&lt;n&gt; | DIGital&lt;d&gt; | NONE} for MSO models&lt;n&gt; ::= 1 to (# of analog channels) in NR1 format&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 format&lt;edge&gt; ::= {POSitive | NEGative}The :TRIGger:PATTern command specifies the channel values to be used in the pattern trigger.In the &lt;string&gt; parameter, each bit corresponds to a channel as described in the following table:Oscilloscope ModelsValue and Mask Bit Assignments4 analog + 8 digital channels (mixed-signal)Bits 0 through 7 - digital channels 0 through 7. Bits 8 through 11 - analog channels 4 through 1.2 analog + 8 digital channels (mixed-signal)Bits 0 through 7 - digital channels 0 through 7. Bits 8 and 9 - analog channels 2 and 1.4 analog channels onlyBits 0 through 3 - analog channels 4 through 1.2 analog channels onlyBits 0 and 1 - analog channels 2 and 1.The format of the &lt;string&gt; parameter depends on the :TRIGger:PATTern:FORMat command setting:When the format is ASCii, the string looks just like the string you see on the oscilloscope's front panel, made up of 0, 1, X (don't care), R (rising edge), and F (falling edge) characters.When the format is HEX, the string begins with "0x" and contains hex digit characters or X (don't care for all four bits in the nibble).With the hex format string, you can use the &lt;edge_source&gt; and &lt;edge&gt; parameters to specify an edge on one of the channels.The optional &lt;edge_source&gt; and &lt;edge&gt; parameters should be sent together or not at all. The edge can be specified in the ASCII &lt;string&gt; parameter. If the edge source and edge parameters are used, they take precedence.You can only specify an edge on one channel. When an edge is specified, the :TRIGger:PATTern:QUALifier does not apply.Query Syntax:TRIGger:PATTern?The :TRIGger:PATTern? query returns the pattern string, edge source, and edge.Return Format&lt;string&gt;,&lt;edge_source&gt;,&lt;edge&gt;&lt;NL&gt;See AlsoIntroduction to :TRIGger Commands:TRIGger:PATTern:FORMat:TRIGger:PATTern:QUALifier:TRIGger:MODE</c><c> :TRIGger:PATTern:FORMat:TRIGger:PATTern Commands Name:TRIGger:PATTern:FORMat � Command Syntax:TRIGger:PATTern:FORMat &lt;base&gt;&lt;base&gt; ::= {ASCii | HEX}The :TRIGger:PATTern:FORMat command sets the entry (and query) number base used by the :TRIGger:PATTern command. The default &lt;base&gt; is ASCii.Query Syntax:TRIGger:PATTern:FORMat?The :TRIGger:PATTern:FORMat? query returns the currently set number base for pattern trigger patterns.Return Format&lt;base&gt;&lt;NL&gt;&lt;base&gt; ::= {ASC | HEX}See AlsoIntroduction to :TRIGger Commands:TRIGger:PATTern</c><c> :TRIGger:PATTern:QUALifier:TRIGger:PATTern Commands Name:TRIGger:PATTern:QUALifier � Command Syntax:TRIGger:PATTern:QUALifier &lt;qualifier&gt;&lt;qualifier&gt; ::= ENTeredThe :TRIGger:PATTern:QUALifier command qualifies when the trigger occurs.In the InfiniiVision 2000 X-Series oscilloscopes, the trigger always occurs when the pattern is entered.Query Syntax:TRIGger:PATTern:QUALifier?The :TRIGger:PATTern:QUALifier? query returns the trigger duration qualifier.Return Format&lt;qualifier&gt;&lt;NL&gt;See AlsoIntroduction to :TRIGger Commands</c><c> :TRIGger:SWEepGeneral :TRIGger Commands Name:TRIGger:SWEep � Command Syntax:TRIGger:SWEep &lt;sweep&gt;&lt;sweep&gt; ::= {AUTO | NORMal}The :TRIGger:SWEep command selects the trigger sweep mode.When AUTO sweep mode is selected, a baseline is displayed in the absence of a signal. If a signal is present but the oscilloscope is not triggered, the unsynchronized signal is displayed instead of a baseline.When NORMal sweep mode is selected and no trigger is present, the instrument does not sweep, and the data acquired on the previous trigger remains on the screen.This feature is called "Mode" on the instrument's front panel.Query Syntax:TRIGger:SWEep?The :TRIGger:SWEep? query returns the current trigger sweep mode.Return Format&lt;sweep&gt;&lt;NL&gt;&lt;sweep&gt; ::= current trigger sweep modeSee AlsoIntroduction to :TRIGger Commands</c><c> :TRIGger:TV:LINE:TRIGger:TV Commands Name:TRIGger:TV:LINE � Command Syntax:TRIGger:TV:LINE &lt;line_number&gt;&lt;line_number&gt; ::= integer in NR1 formatThe :TRIGger:TV:LINE command allows triggering on a specific line of video. The line number limits vary with the standard and mode, as shown in the following table.TV Trigger Line Number Limits:TV StandardModeLFIeld1LFIeld2LALTernateNTSC1 to 2631 to 2621 to 262PAL1 to 313314 to 6251 to 312PAL-M1 to 263264 to 5251 to 262SECAM1 to 313314 to 6251 to 312Query Syntax:TRIGger:TV:LINE?The :TRIGger:TV:LINE? query returns the current TV trigger line number setting.Return Format&lt;line_number&gt;&lt;NL&gt;&lt;line_number&gt;::= integer in NR1 formatSee AlsoIntroduction to :TRIGger Commands:TRIGger:TV:STANdard:TRIGger:TV:MODE</c><c> :TRIGger:TV:MODE:TRIGger:TV Commands Name:TRIGger:TV:MODE � Command Syntax:TRIGger:TV:MODE &lt;mode&gt;&lt;mode&gt; ::= {FIEld1 | FIEld2 | AFIelds | ALINes | LFIeld1 | LFIeld2 | LALTernate}The :TRIGger:TV:MODE command selects the TV trigger mode and field.Old forms for &lt;mode&gt; are accepted:&lt;mode&gt;Old Forms AcceptedFIEld1F1FIEld2F2AFIeldsALLFields, ALLFLDSALINesALLLinesLFIeld1LINEF1, LINEFIELD1LFIeld2LINEF2, LINEFIELD2LALTernateLINEAltQuery Syntax:TRIGger:TV:MODE?The :TRIGger:TV:MODE? query returns the TV trigger mode.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {FIE1 | FIE2 | AFI | ALIN | LFI1 | LFI2 | LALT}See AlsoIntroduction to :TRIGger Commands:TRIGger:TV:STANdard:TRIGger:MODE</c><c> :TRIGger:TV:POLarity:TRIGger:TV Commands Name:TRIGger:TV:POLarity � Command Syntax:TRIGger:TV:POLarity &lt;polarity&gt;&lt;polarity&gt; ::= {POSitive | NEGative}The :TRIGger:TV:POLarity command sets the polarity for the TV trigger.Query Syntax:TRIGger:TV:POLarity?The :TRIGger:TV:POLarity? query returns the TV trigger polarity.Return Format&lt;polarity&gt;&lt;NL&gt;&lt;polarity&gt; ::= {POS | NEG}See AlsoIntroduction to :TRIGger Commands:TRIGger:MODE:TRIGger:TV:SOURce</c><c> :TRIGger:TV:SOURce:TRIGger:TV Commands Name:TRIGger:TV:SOURce � Command Syntax:TRIGger:TV:SOURce &lt;source&gt;&lt;source&gt; ::= {CHANnel&lt;n&gt;}&lt;n&gt; ::= 1 to (# analog channels) in NR1 formatThe :TRIGger:TV:SOURce command selects the channel used to produce the trigger.Query Syntax:TRIGger:TV:SOURce?The :TRIGger:TV:SOURce? query returns the current TV trigger source.Return Format&lt;source&gt;&lt;NL&gt;&lt;source&gt; ::= {CHAN&lt;n&gt;}See AlsoIntroduction to :TRIGger Commands:TRIGger:MODE:TRIGger:TV:POLarityExample CodeExample Code</c><c> :TRIGger:TV:STANdard:TRIGger:TV Commands Name:TRIGger:TV:STANdard � Command Syntax:TRIGger:TV:STANdard &lt;standard&gt;&lt;standard&gt; ::= {NTSC | PALM | PAL | SECam}The :TRIGger:TV:STANdard command selects the video standard:NTSCPALPAL-MSECAMQuery Syntax:TRIGger:TV:STANdard?The :TRIGger:TV:STANdard? query returns the current TV trigger standard setting.Return Format&lt;standard&gt;&lt;NL&gt;&lt;standard&gt; ::= {NTSC | PALM | PAL | SEC}</c><c> :VIEWRoot (:) Commands Name:VIEW � Command Syntax:VIEW &lt;source&gt;&lt;source&gt; ::= {CHANnel&lt;n&gt; | FUNCtion | MATH | SBUS1 | WMEMory&lt;r&gt;} for DSO models&lt;source&gt; ::= {CHANnel&lt;n&gt; | DIGital&lt;d&gt; | POD{1 | 2} | BUS{1 | 2} | FUNCtion | MATH | SBUS1 | WMEMory&lt;r&gt;} for MSO models&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;d&gt; ::= 0 to (# digital channels - 1) in NR1 format&lt;r&gt; ::= 1 to (# ref waveforms) in NR1 formatThe :VIEW command turns on the specified channel, function, or serial decode bus.MATH is an alias for FUNCtion.See AlsoIntroduction to Root (:) Commands:BLANk:CHANnel&lt;n&gt;:DISPlay:DIGital&lt;d&gt;:DISPlay:FUNCtion:DISPlay:POD&lt;n&gt;:DISPlay:WMEMory&lt;r&gt;:DISPlay:STATusExample Code ' VIEW_BLANK - (not executed in this example) ' - VIEW turns on (starts displaying) a channel. ' - BLANK turns off (stops displaying) a channel. ' myScope.WriteString ":BLANk CHANnel1" ' Turn channel 1 off. ' myScope.WriteString ":VIEW CHANnel1" ' Turn channel 1 on.See complete example programs at: Programming Examples</c><c>Introduction to :WAVeform CommandsThe WAVeform subsystem is used to transfer data to a controller from the oscilloscope waveform memories. The queries in this subsystem will only operate when the channel selected by :WAVeform:SOURce is on.Waveform Data and Preamble. The waveform record is actually contained in two portions: the preamble and waveform data. The waveform record must be read from the oscilloscope by the controller using two separate commands, :WAVeform:DATA and :WAVeform:PREamble. The waveform data is the actual data acquired for each point in the specified source. The preamble contains the information for interpreting the waveform data, which includes the number of points acquired, the format of acquired data, and the type of acquired data. The preamble also contains the X and Y increments, origins, and references for the acquired data, so that word and byte data can be translated to time and voltage values.Data Acquisition Types. There are four types of waveform acquisitions that can be selected for analog channels with the :ACQuire:TYPE command: NORMal, AVERage, PEAK, and HRESolution. Digital channels are always acquired using NORMal. When the data is acquired using the :DIGitize command or :RUN command, the data is placed in the channel buffer of the specified source.Once you have acquired data with the :DIGitize command, the instrument is stopped. If the instrument is restarted (via the programming interface or the front panel), or if any instrument setting is changed, the data acquired with the :DIGitize command may be overwritten.You should first acquire the data with the :DIGitize command, then immediately read the data with the :WAVeform:DATA? query before changing any instrument setup.A waveform record consists of either all of the acquired points or a subset of the acquired points. The number of points acquired may be queried using :ACQuire:POINts?.Helpful Hints:The number of points transferred to the computer is controlled using the :WAVeform:POINts command. If :WAVeform:POINts MAXimum is specified and the instrument is not running (stopped), all of the points that are displayed are transferred. This can be as many as 4,000,000 in some operating modes or as many as 8,000,000 for a digital channel on the mixed signal oscilloscope. Fewer points may be specified to speed data transfers and minimize controller analysis time. The :WAVeform:POINts may be varied even after data on a channel is acquired. However, this decimation may result in lost pulses and transitions. The number of points selected for transfer using :WAVeform:POINts must be an even divisor of 1,000 or be set to MAXimum. :WAVeform:POINts determines the increment between time buckets that will be transferred. If POINts = MAXimum, the data cannot be decimated. For example::WAVeform:POINts 1000 � returns time buckets 0, 1, 2, 3, 4 ,.., 999.:WAVeform:POINts 500 � returns time buckets 0, 2, 4, 6, 8 ,.., 998.:WAVeform:POINts 250 � returns time buckets 0, 4, 8, 12, 16 ,.., 996.:WAVeform:POINts 100 � returns time buckets 0, 10, 20, 30, 40 ,.., 990.Analog Channel Data. NORMal DataNormal data consists of the last data point (hit) in each time bucket. This data is transmitted over the programming interface in a linear fashion starting with time bucket 0 and going through time bucket n - 1, where n is the number returned by the :WAVeform:POINts? query. Only the magnitude values of each data point are transmitted. The first voltage value corresponds to the first time bucket on the left side of the screen and the last value corresponds to the next-to-last time bucket on the right side of the screen. Time buckets without data return 0. The time values for each data point correspond to the position of the data point in the data array. These time values are not transmitted.AVERage DataAVERage data consists of the average of the first n hits in a time bucket, where n is the value returned by the :ACQuire:COUNt query. Time buckets that have fewer than n hits return the average of the data they do have. If a time bucket does not have any data in it, it returns 0.This data is transmitted over the interface linearly, starting with time bucket 0 and proceeding through time bucket n-1, where n is the number returned by the :WAVeform:POINts? query. The first value corresponds to a point at the left side of the screen and the last value corresponds to one point away from the right side of the screen. The maximum number of points that can be returned in average mode is 1000 unless ACQuire:COUNt has been set to 1.PEAK DataPeak detect display mode is used to detect glitches for time base settings of 500 us/div and slower. In this mode, the oscilloscope can sample more data than it can store and display. So, when peak detect is turned on, the oscilloscope scans through the extra data, picks up the minimum and maximum for each time bucket, then stores the data in an array. Each time bucket contains two data sample.The array is transmitted over the interface bus linearly, starting with time bucket 0 proceeding through time bucket n-1, where n is the number returned by the :WAVeform:POINts? query. In each time bucket, two values are transmitted, first the minimum, followed by the maximum. The first pair of values corresponds to the time bucket at the leftmost side of the screen. The last pair of values corresponds to the time bucket at the far right side of the screen. In :ACQuire:TYPE PEAK mode, the value returned by the :WAVeform:XINCrement query should be doubled to find the time difference between the min-max pairs.HRESolution DataThe high resolution (smoothing) mode is used to reduce noise at slower sweep speeds where the digitizer samples faster than needed to fill memory for the displayed time range.Data ConversionWord or byte data sent from the oscilloscope must be scaled for useful interpretation. The values used to interpret the data are the X and Y references, X and Y origins, and X and Y increments. These values are read from the waveform preamble. Each channel has its own waveform preamble.In converting a data value to a voltage value, the following formula is used:voltage = [(data value - yreference) * yincrement] + yoriginIf the :WAVeform:FORMat data format is ASCii, the data values are converted internally and sent as floating point values separated by commas.In converting a data value to time, the time value of a data point can be determined by the position of the data point. For example, the fourth data point sent with :WAVeform:XORigin = 16 ns, :WAVeform:XREFerence = 0, and :WAVeform:XINCrement = 2 ns, can be calculated using the following formula:time = [(data point number - xreference) * xincrement] + xoriginThis would result in the following calculation for time bucket 3:time = [(3 - 0) * 2 ns] + 16 ns = 22 nsIn :ACQuire:TYPE PEAK mode, because data is acquired in max-min pairs, modify the previous time formula to the following:time=[(data pair number - xreference) * xincrement * 2] + xoriginData Format for TransferThere are three formats for transferring waveform data over the interface: BYTE, WORD and ASCii (see :WAVeform:FORMat). BYTE, WORD and ASCii formatted waveform records are transmitted using the arbitrary block program data format specified in IEEE 488.2.When you use the block data format, the ASCII character string "#8&lt;DD...D&gt;" is sent prior to sending the actual data. The 8 indicates how many Ds follow. The Ds are ASCII numbers that indicate how many data bytes follow.For example, if 1000 points will be transferred, and the WORD format was specified, the block header "#800001000" would be sent. The 8 indicates that eight length bytes follow, and 00001000 indicates that 1000 binary data bytes follow.Use the :WAVeform:UNSigned command to control whether data values are sent as unsigned or signed integers. This command can be used to match the instrument's internal data type to the data type used by the programming language. This command has no effect if the data format is ASCii.Data Format for Transfer - ASCii formatThe ASCii format (see :WAVeform:FORMat) provides access to the waveform data as real Y-axis values without using Y origin, Y reference, and Y increment to convert the binary data. Values are transferred as ASCii digits in floating point format separated by commas. In ASCii format, holes are represented by the value 9.9e+37. The setting of :WAVeform:BYTeorder and :WAVeform:UNSigned have no effect when the format is ASCii.Data Format for Transfer - WORD formatWORD format (see :WAVeform:FORMat) provides 16-bit access to the waveform data. In the WORD format, the number of data bytes is twice the number of data points. The number of data points is the value returned by the :WAVeform:POINts? query. If the data intrinsically has less than 16 bits of resolution, the data is left-shifted to provide 16 bits of resolution and the least significant bits are set to 0. Currently, the greatest intrinsic resolution of any data is 12 bits, so at least the lowest 4 bits of data will be 0. If there is a hole in the data, the hole is represented by a 16 bit value equal to 0.Use :WAVeform:BYTeorder to determine if the least significant byte or most significant byte is to be transferred first. The :BYTeorder command can be used to alter the transmit sequence to match the storage sequence of an integer in the programming language being used.Data Format for Transfer - BYTE formatThe BYTE format (see :WAVeform:FORMat ) allows 8-bit access to the waveform data. If the data intrinsically has more than 8 bits of resolution (averaged data), the data is right-shifted (truncated) to fit into 8 bits. If there is a hole in the data, the hole is represented by a value of 0. The BYTE-formatted data transfers over the programming interface faster than ASCii or WORD-formatted data, because in ASCii format, as many as 13 bytes per point are transferred, in BYTE format one byte per point is transferred, and in WORD format two bytes per point are transferred.The :WAVeform:BYTeorder command has no effect when the data format is BYTE.Digital Channel Data (MSO models only). The waveform record for digital channels is similar to that of analog channels. The main difference is that the data points represent either DIGital0,..,7 (POD1), DIGital8,..,15 (POD2), or any grouping of digital channels (BUS1 or BUS2).For digital channels, :WAVeform:UNSigned must be set to ON.Digital Channel POD Data FormatData for digital channels is only available in groups of 8 bits (Pod1 = D0 - D7, Pod2 = D8 - D15). The bytes are organized as::WAVeform:SOURceBit 7Bit 6Bit 5Bit 4Bit 3Bit 2Bit 1Bit 0POD1D7D6D5D4D3D2D1D0POD2D15D14D13D12D11D10D9D8If the :WAVeform:FORMat is WORD is WORD, every other data byte will be 0. The setting of :WAVeform:BYTeorder controls which byte is 0.If a digital channel is not displayed, its bit value in the pod data byte is not defined.Digital Channel BUS Data FormatDigital channel BUS definitions can include any or all of the digital channels. Therefore, data is always returned as 16-bit values. :BUS commands are used to select the digital channels for a bus.Reporting the Setup. The following is a sample response from the :WAVeform? query. In this case, the query was issued following a *RST command.:WAV:UNS 1;VIEW MAIN;BYT MSBF;FORM BYTE;POIN +1000;SOUR CHAN1;SOUR:SUBS NONE</c><c> :WAVeform:BYTeorder:WAVeform Commands Name:WAVeform:BYTeorder � Command Syntax:WAVeform:BYTeorder &lt;value&gt;&lt;value&gt; ::= {LSBFirst | MSBFirst}The :WAVeform:BYTeorder command sets the output sequence of the WORD data.MSBFirst � sets the most significant byte to be transmitted first.LSBFirst � sets the least significant byte to be transmitted first.This command affects the transmitting sequence only when :WAVeform:FORMat WORD is selected.The default setting is MSBFirst.Query Syntax:WAVeform:BYTeorder?The :WAVeform:BYTeorder query returns the current output sequence.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {LSBF | MSBF}See AlsoIntroduction to :WAVeform Commands:WAVeform:DATA:WAVeform:FORMat:WAVeform:PREambleExample CodeExample CodeExample Code</c><c> :WAVeform:COUNt:WAVeform Commands Name:WAVeform:COUNt � Query Syntax:WAVeform:COUNt?The :WAVeform:COUNT? query returns the count used to acquire the current waveform. This may differ from current values if the unit has been stopped and its configuration modified. For all acquisition types except average, this value is 1.Return Format&lt;count_argument&gt;&lt;NL&gt;&lt;count_argument&gt; ::= an integer from 1 to 65536 in NR1 formatSee AlsoIntroduction to :WAVeform Commands:ACQuire:COUNt:ACQuire:TYPE</c><c> :WAVeform:DATA:WAVeform Commands Name:WAVeform:DATA � Query Syntax:WAVeform:DATA?The :WAVeform:DATA query returns the binary block of sampled data points transmitted using the IEEE 488.2 arbitrary block data format. The binary data is formatted according to the settings of the :WAVeform:UNSigned, :WAVeform:BYTeorder, :WAVeform:FORMat, and :WAVeform:SOURce commands. The number of points returned is controlled by the :WAVeform:POINts command.In BYTE or WORD waveform formats, these data values have special meaning:0x00 or 0x0000 � Hole. Holes are locations where data has not yet been acquired.Another situation where there can be zeros in the data, incorrectly, is when programming over telnet port 5024. Port 5024 provides a command prompt and is intended for ASCII transfers. Use telnet port 5025 instead.0x01 or 0x0001 � Clipped low. These are locations where the waveform is clipped at the bottom of the oscilloscope display.0xFF or 0xFFFF � Clipped high. These are locations where the waveform is clipped at the top of the oscilloscope display.Return Format&lt;binary block data&gt;&lt;NL&gt;See AlsoFor a more detailed description of the data returned for different acquisition types, see: Introduction to :WAVeform Commands:WAVeform:UNSigned:WAVeform:BYTeorder:WAVeform:FORMat:WAVeform:POINts:WAVeform:PREamble:WAVeform:SOURce:WAVeform:TYPEExample Code ' QUERY_WAVE_DATA - Outputs waveform data that is stored in a buffer. ' Query the oscilloscope for the waveform data. myScope.WriteString ":WAV:DATA?" ' READ_WAVE_DATA - The wave data consists of two parts: the header, ' and the actual waveform data followed by a new line (NL) character. ' The query data has the following format: ' ' &lt;header&gt;&lt;waveform_data&gt;&lt;NL&gt; ' ' Where: ' &lt;header&gt; = #800001000 (This is an example header) ' The "#8" may be stripped off of the header and the remaining ' numbers are the size, in bytes, of the waveform data block. The ' size can vary depending on the number of points acquired for the ' waveform. You can then read that number of bytes from the ' oscilloscope and the terminating NL character. ' Dim lngI As Long Dim lngDataValue As Long varQueryResult = myScope.ReadIEEEBlock(BinaryType_UI1) ' Unsigned integer bytes. For lngI = 0 To UBound(varQueryResult) _ Step (UBound(varQueryResult) / 20) ' 20 points. If intBytesPerData = 2 Then lngDataValue = varQueryResult(lngI) * 256 _ + varQueryResult(lngI + 1) ' 16-bit value. Else lngDataValue = varQueryResult(lngI) ' 8-bit value. End If strOutput = strOutput + "Data point " + _ CStr(lngI / intBytesPerData) + ", " + _ FormatNumber((lngDataValue - lngYReference) _ * sngYIncrement + sngYOrigin) + " V, " + _ FormatNumber(((lngI / intBytesPerData - lngXReference) _ * sngXIncrement + dblXOrigin) * 1000000) + " us" + vbCrLf Next lngI MsgBox "Waveform data:" + vbCrLf + strOutputSee complete example programs at: Programming Examples</c><c> :WAVeform:FORMat:WAVeform Commands Name:WAVeform:FORMat � Command Syntax:WAVeform:FORMat &lt;value&gt;&lt;value&gt; ::= {WORD | BYTE | ASCii}The :WAVeform:FORMat command sets the data transmission mode for waveform data points. This command controls how the data is formatted when sent from the oscilloscope.ASCii formatted data converts the internal integer data values to real Y-axis values. Values are transferred as ASCii digits in floating point notation, separated by commas.ASCII formatted data is transferred ASCii text.WORD formatted data transfers 16-bit data as two bytes. The :WAVeform:BYTeorder command can be used to specify whether the upper or lower byte is transmitted first. The default (no command sent) is that the upper byte transmitted first.BYTE formatted data is transferred as 8-bit bytes.When the :WAVeform:SOURce is the serial decode bus SBUS1, ASCii is the only waveform format allowed.When the :WAVeform:SOURce is one of the digital channel buses (BUS1 or BUS2), ASCii and WORD are the only waveform formats allowed.Query Syntax:WAVeform:FORMat?The :WAVeform:FORMat query returns the current output format for the transfer of waveform data.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= {WORD | BYTE | ASC}See AlsoIntroduction to :WAVeform Commands:WAVeform:BYTeorder:WAVeform:SOURce:WAVeform:DATA:WAVeform:PREambleExample CodeExample Code</c><c> :WAVeform:POINts:WAVeform Commands Name:WAVeform:POINts � Command Syntax:WAVeform:POINts &lt;# points&gt;&lt;# points&gt; ::= {100 | 250 | 500 | 1000 | &lt;points mode&gt;} if waveform points mode is NORMal&lt;# points&gt; ::= {100 | 250 | 500 | 1000 | 2000 | 5000 | 10000 | 20000 | 50000 | 100000 | 200000 | 500000 | 1000000 | 2000000 | 4000000 | 8000000 | &lt;points mode&gt;} if waveform points mode is MAXimum or RAW&lt;points mode&gt; ::= {NORMal | MAXimum | RAW}The &lt;points_mode&gt; option is deprecated. Use the :WAVeform:POINts:MODE command instead.The :WAVeform:POINts command sets the number of waveform points to be transferred with the :WAVeform:DATA? query. This value represents the points contained in the waveform selected with the :WAVeform:SOURce command.For the analog or digital sources, the records that can be transferred depend on the waveform points mode. The maximum number of points returned for math (function) waveforms is determined by the NORMal waveform points mode. See the :WAVeform:POINts:MODE command for more information.Only data visible on the display will be returned.When the :WAVeform:SOURce is the serial decode bus SBUS1, this command is ignored, and all available serial decode bus data is returned.Query Syntax:WAVeform:POINts?The :WAVeform:POINts query returns the number of waveform points to be transferred when using the :WAVeform:DATA? query. Setting the points mode will affect what data is transferred (see the :WAVeform:POINts:MODE command for more information).When the :WAVeform:SOURce is the serial decode bus SBUS1, this query returns the number of messages that were decoded.Return Format&lt;# points&gt;&lt;NL&gt;&lt;# points&gt; ::= {100 | 250 | 500 | 1000 | &lt;maximum # points&gt;} if waveform points mode is NORMal&lt;# points&gt; ::= {100 | 250 | 500 | 1000 | 2000 | 5000 | 10000 | 20000 | 50000 | 100000 | 200000 | 500000 | 1000000 | 2000000 | 4000000 | 8000000 | &lt;maximum # points&gt;} if waveform points mode is MAXimum or RAWIf a full screen of data is not displayed, the number of points returned will not be 1000 or an even divisor of it.See AlsoIntroduction to :WAVeform Commands:ACQuire:POINts:WAVeform:DATA:WAVeform:SOURce:WAVeform:VIEW:WAVeform:PREamble:WAVeform:POINts:MODEExample Code ' WAVE_POINTS - Specifies the number of points to be transferred ' using the ":WAVEFORM:DATA?" query. myScope.WriteString ":WAVEFORM:POINTS 1000"See complete example programs at: Programming Examples</c><c> :WAVeform:POINts:MODE:WAVeform Commands Name:WAVeform:POINts:MODE � Command Syntax:WAVeform:POINts:MODE &lt;points_mode&gt;&lt;points_mode&gt; ::= {NORMal | MAXimum | RAW}The :WAVeform:POINts:MODE command sets the data record to be transferred with the :WAVeform:DATA? query.For the analog or digital sources, there are two different records that can be transferred:The first is the raw acquisition record. The maximum number of points available in this record is returned by the :ACQuire:POINts? query. The raw acquisition record can only be transferred when the oscilloscope is not running and can only be retrieved from the analog or digital sources.The second is referred to as the measurement record and is a 62,500-point (maximum) representation of the raw acquisition record. The measurement record can be retrieved from any source.If the &lt;points_mode&gt; is NORMal the measurement record is retrieved.If the &lt;points_mode&gt; is RAW, the raw acquisition record is used. Under some conditions, such as when the oscilloscope is running, this data record is unavailable.If the &lt;points_mode&gt; is MAXimum, whichever record contains the maximum amount of points is used. Usually, this is the raw acquisition record. But, if the raw acquisition record is unavailable (for example, when the oscilloscope is running), the measurement record may have more data. If data is being retrieved as the oscilloscope is stopped and as the data displayed is changing, the data being retrieved can switch between the measurement and raw acquisition records.Considerations for MAXimum or RAW data retrievalThe instrument must be stopped (see the :STOP command or the :DIGitize command in the root subsystem) in order to return more than the measurement record.:TIMebase:MODE must be set to MAIN.:ACQuire:TYPE must be set to NORMal or HRESolution.MAXimum or RAW will allow up to 100,000 points to be returned. The number of points returned will vary as the instrument's configuration is changed. Use the :WAVeform:POINts? MAXimum query to determine the maximum number of points that can be retrieved at the current settings.Query Syntax:WAVeform:POINts:MODE?The :WAVeform:POINts:MODE? query returns the current points mode. Setting the points mode will affect what data is transferred. See the discussion above.Return Format&lt;points_mode&gt;&lt;NL&gt;&lt;points_mode&gt; ::= {NORMal | MAXimum | RAW}See AlsoIntroduction to :WAVeform Commands:WAVeform:DATA:ACQuire:POINts:WAVeform:VIEW:WAVeform:PREamble:WAVeform:POINts:TIMebase:MODE:ACQuire:TYPE:ACQuire:COUNt</c><c> :WAVeform:PREamble:WAVeform Commands Name:WAVeform:PREamble � Query Syntax:WAVeform:PREamble?The :WAVeform:PREamble query requests the preamble information for the selected waveform source. The preamble data contains information concerning the vertical and horizontal scaling of the data of the corresponding channel.Return Format&lt;preamble_block&gt;&lt;NL&gt;&lt;preamble_block&gt; ::= &lt;format 16-bit NR1&gt;, &lt;type 16-bit NR1&gt;, &lt;points 32-bit NR1&gt;, &lt;count 32-bit NR1&gt;, &lt;xincrement 64-bit floating point NR3&gt;, &lt;xorigin 64-bit floating point NR3&gt;, &lt;xreference 32-bit NR1&gt;, &lt;yincrement 32-bit floating point NR3&gt;, &lt;yorigin 32-bit floating point NR3&gt;, &lt;yreference 32-bit NR1&gt;&lt;format&gt; ::= 0 for BYTE format, 1 for WORD format, 4 for ASCii format; an integer in NR1 format (format set by :WAVeform:FORMat).&lt;type&gt; ::= 2 for AVERage type, 0 for NORMal type, 1 for PEAK detect type; an integer in NR1 format (type set by :ACQuire:TYPE).&lt;count&gt; ::= Average count or 1 if PEAK or NORMal; an integer in NR1 format (count set by :ACQuire:COUNt).See AlsoIntroduction to :WAVeform Commands:ACQuire:COUNt:ACQuire:POINts:ACQuire:TYPE:DIGitize:WAVeform:COUNt:WAVeform:DATA:WAVeform:FORMat:WAVeform:POINts:WAVeform:TYPE:WAVeform:XINCrement:WAVeform:XORigin:WAVeform:XREFerence:WAVeform:YINCrement:WAVeform:YORigin:WAVeform:YREFerenceExample Code ' GET_PREAMBLE - The preamble block contains all of the current ' WAVEFORM settings. It is returned in the form &lt;preamble_block&gt;&lt;NL&gt; ' where &lt;preamble_block&gt; is: ' FORMAT : int16 - 0 = BYTE, 1 = WORD, 4 = ASCII. ' TYPE : int16 - 0 = NORMAL, 1 = PEAK DETECT, 2 = AVERAGE ' POINTS : int32 - number of data points transferred. ' COUNT : int32 - 1 and is always 1. ' XINCREMENT : float64 - time difference between data points. ' XORIGIN : float64 - always the first data point in memory. ' XREFERENCE : int32 - specifies the data point associated with ' x-origin. ' YINCREMENT : float32 - voltage diff between data points. ' YORIGIN : float32 - value is the voltage at center screen. ' YREFERENCE : int32 - specifies the data point where y-origin ' occurs. Dim Preamble() Dim intFormat As Integer Dim intType As Integer Dim lngPoints As Long Dim lngCount As Long Dim dblXIncrement As Double Dim dblXOrigin As Double Dim lngXReference As Long Dim sngYIncrement As Single Dim sngYOrigin As Single Dim lngYReference As Long Dim strOutput As String myScope.WriteString ":WAVEFORM:PREAMBLE?" ' Query for the preamble. Preamble() = myScope.ReadList ' Read preamble information. intFormat = Preamble(0) intType = Preamble(1) lngPoints = Preamble(2) lngCount = Preamble(3) dblXIncrement = Preamble(4) dblXOrigin = Preamble(5) lngXReference = Preamble(6) sngYIncrement = Preamble(7) sngYOrigin = Preamble(8) lngYReference = Preamble(9)See complete example programs at: Programming Examples</c><c> :WAVeform:SEGMented:COUNt:WAVeform Commands Name:WAVeform:SEGMented:COUNt � Query Syntax:WAVeform:SEGMented:COUNt?This command is available when the segmented memory option (Option SGM) is enabled.The :WAVeform:SEGMented:COUNt query returns the number of memory segments in the acquired data. You can use the :WAVeform:SEGMented:COUNt? query while segments are being acquired (although :DIGitize blocks subsequent queries until the full segmented acquisition is complete).The segmented memory acquisition mode is enabled with the :ACQuire:MODE command. The number of segments to acquire is set using the :ACQuire:SEGMented:COUNt command, and data is acquired using the :DIGitize, :SINGle, or :RUN commands.Return Format&lt;count&gt; ::= an integer from 2 to 1000 in NR1 format (count set by :ACQuire:SEGMented:COUNt).See Also:ACQuire:MODE:ACQuire:SEGMented:COUNt:DIGitize:SINGle:RUNIntroduction to :WAVeform CommandsExample CodeExample Code</c><c> :WAVeform:SEGMented:TTAG:WAVeform Commands Name:WAVeform:SEGMented:TTAG � Query Syntax:WAVeform:SEGMented:TTAG?This command is available when the segmented memory option (Option SGM) is enabled.The :WAVeform:SEGMented:TTAG? query returns the time tag of the currently selected segmented memory index. The index is selected using the :ACQuire:SEGMented:INDex command.Return Format&lt;time_tag&gt; ::= in NR3 formatSee Also:ACQuire:SEGMented:INDexIntroduction to :WAVeform CommandsExample CodeExample Code</c><c> :WAVeform:SOURce:WAVeform Commands Name:WAVeform:SOURce � Command Syntax:WAVeform:SOURce &lt;source&gt;&lt;source&gt; ::= {CHANnel&lt;n&gt; | FUNCtion | MATH | WMEMory&lt;r&gt; | SBUS1} for DSO models&lt;source&gt; ::= {CHANnel&lt;n&gt; | POD{1 | 2} | BUS{1 | 2} | FUNCtion | MATH | WMEMory&lt;r&gt; | SBUS1} for MSO models&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;r&gt; ::= {1 | 2}The :WAVeform:SOURce command selects the analog channel, function, digital pod, digital bus, reference waveform, or serial decode bus to be used as the source for the :WAVeform commands.Function capabilities include add, subtract, multiply, and FFT (Fast Fourier Transform) operations.When the :WAVeform:SOURce is the serial decode bus (SBUS1), ASCii is the only waveform format allowed, and the :WAVeform:DATA? query returns a string with timestamps and associated bus decode information.With MSO oscilloscope models, you can choose a POD or BUS as the waveform source. There are some differences between POD and BUS when formatting and getting data from the oscilloscope:When POD1 or POD2 is selected as the waveform source, you can choose the BYTE, WORD, or ASCii formats (see :WAVeform:FORMat).When the WORD format is chosen, every other data byte will be 0. The setting of :WAVeform:BYTeorder controls which byte is 0.When the ASCii format is chosen, the :WAVeform:DATA? query returns a string with unsigned decimal values separated by commas.When BUS1 or BUS2 is selected as the waveform source, you can choose the WORD or ASCii formats (but not BYTE because bus values are always returned as 16-bit values).When the ASCii format is chosen, the :WAVeform:DATA? query returns a string with hexadecimal bus values, for example: 0x1938,0xff38,...Query Syntax:WAVeform:SOURce?The :WAVeform:SOURce? query returns the currently selected source for the WAVeform commands.MATH is an alias for FUNCtion. The :WAVeform:SOURce? Query returns FUNC if the source is FUNCtion or MATH.Return Format&lt;source&gt;&lt;NL&gt;&lt;source&gt; ::= {CHAN&lt;n&gt; | FUNC | WMEM&lt;r&gt; | SBUS1} for DSO models&lt;source&gt; ::= {CHAN&lt;n&gt; | POD{1 | 2} | BUS{1 | 2} | FUNC | WMEM&lt;r&gt; | SBUS1} for MSO models&lt;n&gt; ::= 1 to (# analog channels) in NR1 format&lt;r&gt; ::= {1 | 2}See AlsoIntroduction to :WAVeform Commands:DIGitize:WAVeform:FORMat:WAVeform:BYTeorder:WAVeform:DATA:WAVeform:PREambleExample Code ' WAVEFORM_DATA - To obtain waveform data, you must specify the ' WAVEFORM parameters for the waveform data prior to sending the ' ":WAVEFORM:DATA?" query. Once these parameters have been sent, ' the waveform data and the preamble can be read. ' ' WAVE_SOURCE - Selects the channel to be used as the source for ' the waveform commands. myScope.WriteString ":WAVEFORM:SOURCE CHAN1" ' WAVE_POINTS - Specifies the number of points to be transferred ' using the ":WAVEFORM:DATA?" query. myScope.WriteString ":WAVEFORM:POINTS 1000" ' WAVE_FORMAT - Sets the data transmission mode for the waveform ' data output. This command controls whether data is formatted in ' a word or byte format when sent from the oscilloscope. Dim lngVSteps As Long Dim intBytesPerData As Integer ' Data in range 0 to 65535. myScope.WriteString ":WAVEFORM:FORMAT WORD" lngVSteps = 65536 intBytesPerData = 2 ' Data in range 0 to 255. 'myScope.WriteString ":WAVEFORM:FORMAT BYTE" 'lngVSteps = 256 'intBytesPerData = 1 ' GET_PREAMBLE - The preamble block contains all of the current ' WAVEFORM settings. It is returned in the form &lt;preamble_block&gt;&lt;NL&gt; ' where &lt;preamble_block&gt; is: ' FORMAT : int16 - 0 = BYTE, 1 = WORD, 4 = ASCII. ' TYPE : int16 - 0 = NORMAL, 1 = PEAK DETECT, 2 = AVERAGE ' POINTS : int32 - number of data points transferred. ' COUNT : int32 - 1 and is always 1. ' XINCREMENT : float64 - time difference between data points. ' XORIGIN : float64 - always the first data point in memory. ' XREFERENCE : int32 - specifies the data point associated with ' x-origin. ' YINCREMENT : float32 - voltage diff between data points. ' YORIGIN : float32 - value is the voltage at center screen. ' YREFERENCE : int32 - specifies the data point where y-origin ' occurs. Dim Preamble() Dim intFormat As Integer Dim intType As Integer Dim lngPoints As Long Dim lngCount As Long Dim dblXIncrement As Double Dim dblXOrigin As Double Dim lngXReference As Long Dim sngYIncrement As Single Dim sngYOrigin As Single Dim lngYReference As Long Dim strOutput As String myScope.WriteString ":WAVEFORM:PREAMBLE?" ' Query for the preamble. Preamble() = myScope.ReadList ' Read preamble information. intFormat = Preamble(0) intType = Preamble(1) lngPoints = Preamble(2) lngCount = Preamble(3) dblXIncrement = Preamble(4) dblXOrigin = Preamble(5) lngXReference = Preamble(6) sngYIncrement = Preamble(7) sngYOrigin = Preamble(8) lngYReference = Preamble(9) strOutput = "" 'strOutput = strOutput + "Format = " + CStr(intFormat) + vbCrLf 'strOutput = strOutput + "Type = " + CStr(intType) + vbCrLf 'strOutput = strOutput + "Points = " + CStr(lngPoints) + vbCrLf 'strOutput = strOutput + "Count = " + CStr(lngCount) + vbCrLf 'strOutput = strOutput + "X increment = " + _ ' FormatNumber(dblXIncrement * 1000000) + " us" + vbCrLf 'strOutput = strOutput + "X origin = " + _ ' FormatNumber(dblXOrigin * 1000000) + " us" + vbCrLf 'strOutput = strOutput + "X reference = " + _ ' CStr(lngXReference) + vbCrLf 'strOutput = strOutput + "Y increment = " + _ ' FormatNumber(sngYIncrement * 1000) + " mV" + vbCrLf 'strOutput = strOutput + "Y origin = " + _ ' FormatNumber(sngYOrigin) + " V" + vbCrLf 'strOutput = strOutput + "Y reference = " + _ ' CStr(lngYReference) + vbCrLf strOutput = strOutput + "Volts/Div = " + _ FormatNumber(lngVSteps * sngYIncrement / 8) + _ " V" + vbCrLf strOutput = strOutput + "Offset = " + _ FormatNumber((lngVSteps / 2 - lngYReference) * _ sngYIncrement + sngYOrigin) + " V" + vbCrLf strOutput = strOutput + "Sec/Div = " + _ FormatNumber(lngPoints * dblXIncrement / 10 * _ 1000000) + " us" + vbCrLf strOutput = strOutput + "Delay = " + _ FormatNumber(((lngPoints / 2 - lngXReference) * _ dblXIncrement + dblXOrigin) * 1000000) + " us" + vbCrLf ' QUERY_WAVE_DATA - Outputs waveform data that is stored in a buffer. ' Query the oscilloscope for the waveform data. myScope.WriteString ":WAV:DATA?" ' READ_WAVE_DATA - The wave data consists of two parts: the header, ' and the actual waveform data followed by a new line (NL) character. ' The query data has the following format: ' ' &lt;header&gt;&lt;waveform_data&gt;&lt;NL&gt; ' ' Where: ' &lt;header&gt; = #800001000 (This is an example header) ' The "#8" may be stripped off of the header and the remaining ' numbers are the size, in bytes, of the waveform data block. The ' size can vary depending on the number of points acquired for the ' waveform. You can then read that number of bytes from the ' oscilloscope and the terminating NL character. ' Dim lngI As Long Dim lngDataValue As Long ' Unsigned integer bytes. varQueryResult = myScope.ReadIEEEBlock(BinaryType_UI1) For lngI = 0 To UBound(varQueryResult) _ Step (UBound(varQueryResult) / 20) ' 20 points. If intBytesPerData = 2 Then lngDataValue = varQueryResult(lngI) * 256 _ + varQueryResult(lngI + 1) ' 16-bit value. Else lngDataValue = varQueryResult(lngI) ' 8-bit value. End If strOutput = strOutput + "Data point " + _ CStr(lngI / intBytesPerData) + ", " + _ FormatNumber((lngDataValue - lngYReference) _ * sngYIncrement + sngYOrigin) + " V, " + _ FormatNumber(((lngI / intBytesPerData - lngXReference) _ * sngXIncrement + dblXOrigin) * 1000000) + " us" + vbCrLf Next lngI MsgBox "Waveform data:" + vbCrLf + strOutputSee complete example programs at: Programming Examples</c><c> :WAVeform:SOURce:SUBSource:WAVeform Commands Name:WAVeform:SOURce:SUBSource � Command Syntax:WAVeform:SOURce:SUBSource &lt;subsource&gt;&lt;subsource&gt; ::= {{SUB0 | RX | MOSI} | {SUB1 | TX | MISO}}If the :WAVeform:SOURce is SBUS&lt;n&gt; (serial decode), more than one data set may be available, and this command lets you choose from the available data sets.When using UART serial decode, this option lets you get "TX" data. (TX is an alias for SUB1.) The default, SUB0, specifies "RX" data. (RX is an alias for SUB0.)When using SPI serial decode, this option lets you get "MISO" data. (MISO is an alias for SUB1.) The default, SUB0, specifies "MOSI" data. (MOSI is an alias for SUB0.)If the :WAVeform:SOURce is not SBUS, or the :SBUS&lt;n&gt;:MODE is not UART or SPI, the only valid subsource is SUB0.Query Syntax:WAVeform:SOURce:SUBSource?The :WAVeform:SOURce:SUBSource? query returns the current waveform subsource setting.Return Format&lt;subsource&gt;&lt;NL&gt;&lt;subsource&gt; ::= {SUB0 | SUB1}See AlsoIntroduction to :WAVeform Commands:WAVeform:SOURce</c><c> :WAVeform:TYPE:WAVeform Commands Name:WAVeform:TYPE � Query Syntax:WAVeform:TYPE?The :WAVeform:TYPE? query returns the acquisition mode associated with the currently selected waveform. The acquisition mode is set by the :ACQuire:TYPE command.Return Format&lt;mode&gt;&lt;NL&gt;&lt;mode&gt; ::= {NORM | PEAK | AVER | HRES}If the :WAVeform:SOURce is POD1 or POD2, the type is always NORM.See AlsoIntroduction to :WAVeform Commands:ACQuire:TYPE:WAVeform:DATA:WAVeform:PREamble:WAVeform:SOURce</c><c> :WAVeform:UNSigned:WAVeform Commands Name:WAVeform:UNSigned � Command Syntax:WAVeform:UNSigned &lt;unsigned&gt;&lt;unsigned&gt; ::= {{0 | OFF} | {1 | ON}}The :WAVeform:UNSigned command turns unsigned mode on or off for the currently selected waveform. Use the WAVeform:UNSigned command to control whether data values are sent as unsigned or signed integers. This command can be used to match the instrument's internal data type to the data type used by the programming language. This command has no effect if the data format is ASCii.If :WAVeform:SOURce is set to POD1, POD2, BUS1, or BUS2, WAVeform:UNSigned must be set to ON.Query Syntax:WAVeform:UNSigned?The :WAVeform:UNSigned? query returns the status of unsigned mode for the currently selected waveform.Return Format&lt;unsigned&gt;&lt;NL&gt;&lt;unsigned&gt; ::= {0 | 1}See AlsoIntroduction to :WAVeform Commands:WAVeform:SOURce</c><c> :WAVeform:VIEW:WAVeform Commands Name:WAVeform:VIEW � Command Syntax:WAVeform:VIEW &lt;view&gt;&lt;view&gt; ::= {MAIN}The :WAVeform:VIEW command sets the view setting associated with the currently selected waveform. Currently, the only legal value for the view setting is MAIN.Query Syntax:WAVeform:VIEW?The :WAVeform:VIEW? query returns the view setting associated with the currently selected waveform.Return Format&lt;view&gt;&lt;NL&gt;&lt;view&gt; ::= {MAIN}See AlsoIntroduction to :WAVeform Commands:WAVeform:POINts</c><c> :WAVeform:XINCrement:WAVeform Commands Name:WAVeform:XINCrement � Query Syntax:WAVeform:XINCrement?The :WAVeform:XINCrement? query returns the x-increment value for the currently specified source. This value is the time difference between consecutive data points in seconds.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= x-increment in the current preamble in 64-bit floating point NR3 formatSee AlsoIntroduction to :WAVeform Commands:WAVeform:PREambleExample CodeExample Code</c><c> :WAVeform:XORigin:WAVeform Commands Name:WAVeform:XORigin � Query Syntax:WAVeform:XORigin?The :WAVeform:XORigin? query returns the x-origin value for the currently specified source. XORigin is the X-axis value of the data point specified by the :WAVeform:XREFerence value. In this product, that is always the X-axis value of the first data point (XREFerence = 0).Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= x-origin value in the current preamble in 64-bit floating point NR3 formatSee AlsoIntroduction to :WAVeform Commands:WAVeform:PREamble:WAVeform:XREFerenceExample CodeExample Code</c><c> :WAVeform:XREFerence:WAVeform Commands Name:WAVeform:XREFerence � Query Syntax:WAVeform:XREFerence?The :WAVeform:XREFerence? query returns the x-reference value for the currently specified source. This value specifies the index of the data point associated with the x-origin data value. In this product, the x-reference point is the first point displayed and XREFerence is always 0.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= x-reference value = 0 in 32-bit NR1 formatSee AlsoIntroduction to :WAVeform Commands:WAVeform:PREamble:WAVeform:XORiginExample CodeExample Code</c><c> :WAVeform:YINCrement:WAVeform Commands Name:WAVeform:YINCrement � Query Syntax:WAVeform:YINCrement?The :WAVeform:YINCrement? query returns the y-increment value in volts for the currently specified source. This value is the voltage difference between consecutive data values. The y-increment for digital waveforms is always "1".Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= y-increment value in the current preamble in 32-bit floating point NR3 formatSee AlsoIntroduction to :WAVeform Commands:WAVeform:PREambleExample CodeExample Code</c><c> :WAVeform:YORigin:WAVeform Commands Name:WAVeform:YORigin � Query Syntax:WAVeform:YORigin?The :WAVeform:YORigin? query returns the y-origin value for the currently specified source. This value is the Y-axis value of the data value specified by the :WAVeform:YREFerence value. For this product, this is the Y-axis value of the center of the screen.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= y-origin in the current preamble in 32-bit floating point NR3 formatSee AlsoIntroduction to :WAVeform Commands:WAVeform:PREamble:WAVeform:YREFerenceExample CodeExample Code</c><c> :WAVeform:YREFerence:WAVeform Commands Name:WAVeform:YREFerence � Query Syntax:WAVeform:YREFerence?The :WAVeform:YREFerence? query returns the y-reference value for the currently specified source. This value specifies the data point value where the y-origin occurs. In this product, this is the data point value of the center of the screen. It is undefined if the format is ASCii.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= y-reference value in the current preamble in 32-bit NR1 formatSee AlsoIntroduction to :WAVeform Commands:WAVeform:PREamble:WAVeform:YORiginExample CodeExample Code</c><c>Introduction to :WGEN CommandsThe :WGEN subsystem provides commands to select the waveform generator function and parameters.Reporting the Setup. Use :WGEN? to query setup information for the WGEN subsystem.Return Format. The following is a sample response from the :WGEN? query. In this case, the query was issued following the *RST command.:WGEN:FUNC SIN;OUTP 0;FREQ +1.0000E+03;VOLT +500.0E-03;VOLT:OFFS +0.0E+00;:WGEN:OUTP:LOAD ONEM</c><c> :WGEN:FREQuency:WGEN Commands Name:WGEN:FREQuency � Command Syntax:WGEN:FREQuency &lt;frequency&gt;&lt;frequency&gt; ::= frequency in Hz in NR3 formatFor all waveforms except Noise and DC, the :WGEN:FREQuency command specifies the frequency of the waveform.You can also specify the frequency indirectly using the :WGEN:PERiod command.Query Syntax:WGEN:FREQuency?The :WGEN:FREQuency? query returns the currently set waveform generator frequency.Return Format&lt;frequency&gt;&lt;NL&gt;&lt;frequency&gt; ::= frequency in Hz in NR3 formatSee AlsoIntroduction to :WGEN Commands:WGEN:FUNCtion:WGEN:PERiod</c><c> :WGEN:FUNCtion:WGEN Commands Name:WGEN:FUNCtion � Command Syntax:WGEN:FUNCtion &lt;signal&gt;&lt;signal&gt; ::= {SINusoid | SQUare | RAMP | PULSe | NOISe | DC}The :WGEN:FUNCtion command selects the type of waveform:Waveform TypeCharacteristicsSINusoidUse these commands to set the sine signal parameters::WGEN:FREQuency:WGEN:PERiod:WGEN:VOLTage:WGEN:VOLTage:OFFSet:WGEN:VOLTage:HIGH:WGEN:VOLTage:LOWThe frequency can be adjusted from 100 mHz to 20 MHz.SQUareUse these commands to set the square wave signal parameters::WGEN:FREQuency:WGEN:PERiod:WGEN:VOLTage:WGEN:VOLTage:OFFSet:WGEN:VOLTage:HIGH:WGEN:VOLTage:LOW:WGEN:FUNCtion:SQUare:DCYCleThe frequency can be adjusted from 100 mHz to 10 MHz.The duty cycle can be adjusted from 20% to 80%.RAMPUse these commands to set the ramp signal parameters::WGEN:FREQuency:WGEN:PERiod:WGEN:VOLTage:WGEN:VOLTage:OFFSet:WGEN:VOLTage:HIGH:WGEN:VOLTage:LOW:WGEN:FUNCtion:RAMP:SYMMetryThe frequency can be adjusted from 100 mHz to 100 kHz.Symmetry represents the amount of time per cycle that the ramp waveform is rising and can be adjusted from 0% to 100%.PULSeUse these commands to set the pulse signal parameters::WGEN:FREQuency:WGEN:PERiod:WGEN:VOLTage:WGEN:VOLTage:OFFSet:WGEN:VOLTage:HIGH:WGEN:VOLTage:LOW:WGEN:FUNCtion:PULSe:WIDThThe frequency can be adjusted from 100 mHz to 10 MHz.The pulse width can be adjusted from 20 ns to the period minus 20 ns.DCUse this command to set the DC level::WGEN:VOLTage:OFFSetNOISeUse these commands to set the noise signal parameters::WGEN:VOLTage:WGEN:VOLTage:OFFSet:WGEN:VOLTage:HIGH:WGEN:VOLTage:LOWFor all waveform types, the output amplitude, into 50 Ω, can be adjusted from 10 mVpp to 2.5 Vpp (or from 20 mVpp to 5 Vpp into and open-circuit load).Query Syntax:WGEN:FUNCtion?The :WGEN:FUNCtion? query returns the currently selected signal type.Return Format&lt;signal&gt;&lt;NL&gt;&lt;signal&gt; ::= {SIN | SQU | RAMP | PULS | NOIS | DC}See AlsoIntroduction to :WGEN Commands</c><c> :WGEN:FUNCtion:PULSe:WIDTh:WGEN Commands Name:WGEN:FUNCtion:PULSe:WIDTh � Command Syntax:WGEN:FUNCtion:PULSe:WIDTh &lt;width&gt;&lt;width&gt; ::= pulse width in seconds in NR3 formatFor Pulse waveforms, the :WGEN:FUNCtion:PULSe:WIDTh command specifies the width of the pulse.The pulse width can be adjusted from 20 ns to the period minus 20 ns.Query Syntax:WGEN:FUNCtion:PULSe:WIDTh?The :WGEN:FUNCtion:PULSe:WIDTh? query returns the currently set pulse width.Return Format&lt;width&gt;&lt;NL&gt;&lt;width&gt; ::= pulse width in seconds in NR3 formatSee AlsoIntroduction to :WGEN Commands:WGEN:FUNCtion</c><c> :WGEN:FUNCtion:RAMP:SYMMetry:WGEN Commands Name:WGEN:FUNCtion:RAMP:SYMMetry � Command Syntax:WGEN:FUNCtion:RAMP:SYMMetry &lt;percent&gt;&lt;percent&gt; ::= symmetry percentage from 0% to 100% in NR1 formatFor Ramp waveforms, the :WGEN:FUNCtion:RAMP:SYMMetry command specifies the symmetry of the waveform.Symmetry represents the amount of time per cycle that the ramp waveform is rising.Query Syntax:WGEN:FUNCtion:RAMP:SYMMetry?The :WGEN:FUNCtion:RAMP:SYMMetry? query returns the currently set ramp symmetry.Return Format&lt;percent&gt;&lt;NL&gt;&lt;percent&gt; ::= symmetry percentage from 0% to 100% in NR1 formatSee AlsoIntroduction to :WGEN Commands:WGEN:FUNCtion</c><c> :WGEN:FUNCtion:SQUare:DCYCle:WGEN Commands Name:WGEN:FUNCtion:SQUare:DCYCle � Command Syntax:WGEN:FUNCtion:SQUare:DCYCle &lt;percent&gt;&lt;percent&gt; ::= duty cycle percentage from 20% to 80% in NR1 formatFor Square waveforms, the :WGEN:FUNCtion:SQUare:DCYCle command specifies the square wave duty cycle.Duty cycle is the percentage of the period that the waveform is high.Query Syntax:WGEN:FUNCtion:SQUare:DCYCle?The :WGEN:FUNCtion:SQUare:DCYCle? query returns the currently set square wave duty cycle.Return Format&lt;percent&gt;&lt;NL&gt;&lt;percent&gt; ::= duty cycle percentage from 20% to 80% in NR1 formatSee AlsoIntroduction to :WGEN Commands:WGEN:FUNCtion</c><c> :WGEN:MODulation:AM:DEPTh:WGEN Commands Name:WGEN:MODulation:AM:DEPTh � Command Syntax:WGEN:MODulation:AM:DEPTh &lt;percent&gt;&lt;percent&gt; ::= AM depth percentage from 0% to 100% in NR1 formatThe :WGEN:MODulation:AM:DEPTh command specifies the amount of amplitude modulation.AM Depth refers to the portion of the amplitude range that will be used by the modulation. For example, a depth setting of 80% causes the output amplitude to vary from 10% to 90% (90% � 10% = 80%) of the original amplitude as the modulating signal goes from its minimum to maximum amplitude.Query Syntax:WGEN:MODulation:AM:DEPTh?The :WGEN:MODulation:AM:DEPTh? query returns the AM depth percentage setting.Return Format&lt;percent&gt;&lt;NL&gt;&lt;percent&gt; ::= AM depth percentage from 0% to 100% in NR1 formatSee Also:WGEN:MODulation:AM:FREQuency:WGEN:MODulation:FM:DEViation:WGEN:MODulation:FM:FREQuency:WGEN:MODulation:FSKey:FREQuency:WGEN:MODulation:FSKey:RATE:WGEN:MODulation:FUNCtion:WGEN:MODulation:FUNCtion:RAMP:SYMMetry:WGEN:MODulation:STATe:WGEN:MODulation:TYPE</c><c> :WGEN:MODulation:AM:FREQuency:WGEN Commands Name:WGEN:MODulation:AM:FREQuency � Command Syntax:WGEN:MODulation:AM:FREQuency &lt;frequency&gt;&lt;frequency&gt; ::= modulating waveform frequency in Hz in NR3 formatThe :WGEN:MODulation:AM:FREQuency command specifies the frequency of the modulating signal.Query Syntax:WGEN:MODulation:AM:FREQuency?The :WGEN:MODulation:AM:FREQuency? query returns the frequency of the modulating signal.Return Format&lt;frequency&gt;&lt;NL&gt;&lt;frequency&gt; ::= modulating waveform frequency in Hz in NR3 formatSee Also:WGEN:MODulation:AM:DEPTh:WGEN:MODulation:FM:DEViation:WGEN:MODulation:FM:FREQuency:WGEN:MODulation:FSKey:FREQuency:WGEN:MODulation:FSKey:RATE:WGEN:MODulation:FUNCtion:WGEN:MODulation:FUNCtion:RAMP:SYMMetry:WGEN:MODulation:STATe:WGEN:MODulation:TYPE</c><c> :WGEN:MODulation:FM:DEViation:WGEN Commands Name:WGEN:MODulation:FM:DEViation � Command Syntax:WGEN:MODulation:FM:DEViation &lt;frequency&gt;&lt;frequency&gt; ::= frequency deviation in Hz in NR3 formatThe :WGEN:MODulation:FM:DEViation command specifies the frequency deviation from the original carrier signal frequency.When the modulating signal is at its maximum amplitude, the output frequency is the carrier signal frequency plus the deviation amount, and when the modulating signal is at its minimum amplitude, the output frequency is the carrier signal frequency minus the deviation amount.The frequency deviation cannot be greater than the original carrier signal frequency.Also, the sum of the original carrier signal frequency and the frequency deviation must be less than or equal to the maximum frequency for the selected waveform generator function plus 100 kHz.Query Syntax:WGEN:MODulation:FM:DEViation?The :WGEN:MODulation:FM:DEViation? query returns the frequency deviation setting.Return Format&lt;frequency&gt;&lt;NL&gt;&lt;frequency&gt; ::= frequency deviation in Hz in NR3 formatSee Also:WGEN:MODulation:AM:DEPTh:WGEN:MODulation:AM:FREQuency:WGEN:MODulation:FM:FREQuency:WGEN:MODulation:FSKey:FREQuency:WGEN:MODulation:FSKey:RATE:WGEN:MODulation:FUNCtion:WGEN:MODulation:FUNCtion:RAMP:SYMMetry:WGEN:MODulation:STATe:WGEN:MODulation:TYPE</c><c> :WGEN:MODulation:FM:FREQuency:WGEN Commands Name:WGEN:MODulation:FM:FREQuency � Command Syntax:WGEN:MODulation:FM:FREQuency &lt;frequency&gt;&lt;frequency&gt; ::= modulating waveform frequency in Hz in NR3 formatThe :WGEN:MODulation:FM:FREQuency command specifies the frequency of the modulating signal.Query Syntax:WGEN:MODulation:FM:FREQuency?The :WGEN:MODulation:FM:FREQuency? query returns the frequency of the modulating signal.Return Format&lt;frequency&gt;&lt;NL&gt;&lt;frequency&gt; ::= modulating waveform frequency in Hz in NR3 formatSee Also:WGEN:MODulation:AM:DEPTh:WGEN:MODulation:AM:FREQuency:WGEN:MODulation:FM:DEViation:WGEN:MODulation:FSKey:FREQuency:WGEN:MODulation:FSKey:RATE:WGEN:MODulation:FUNCtion:WGEN:MODulation:FUNCtion:RAMP:SYMMetry:WGEN:MODulation:STATe:WGEN:MODulation:TYPE</c><c> :WGEN:MODulation:FSKey:FREQuency:WGEN Commands Name:WGEN:MODulation:FSKey:FREQuency � Command Syntax:WGEN:MODulation:FSKey:FREQuency &lt;frequency&gt;&lt;frequency&gt; ::= hop frequency in Hz in NR3 formatThe :WGEN:MODulation:FSKey:FREQuency command specifies the "hop frequency".The output frequency "shifts" between the original carrier frequency and this "hop frequency".Query Syntax:WGEN:MODulation:FSKey:FREQuency?The :WGEN:MODulation:FSKey:FREQuency? query returns the "hop frequency" setting.Return Format&lt;frequency&gt;&lt;NL&gt;&lt;frequency&gt; ::= hop frequency in Hz in NR3 formatSee Also:WGEN:MODulation:AM:DEPTh:WGEN:MODulation:AM:FREQuency:WGEN:MODulation:FM:DEViation:WGEN:MODulation:FM:FREQuency:WGEN:MODulation:FSKey:RATE:WGEN:MODulation:FUNCtion:WGEN:MODulation:FUNCtion:RAMP:SYMMetry:WGEN:MODulation:STATe:WGEN:MODulation:TYPE</c><c> :WGEN:MODulation:FSKey:RATE:WGEN Commands Name:WGEN:MODulation:FSKey:RATE � Command Syntax:WGEN:MODulation:FSKey:RATE &lt;rate&gt;&lt;rate&gt; ::= FSK modulation rate in Hz in NR3 formatThe :WGEN:MODulation:FSKey:RATE command specifies the rate at which the output frequency "shifts".The FSK rate specifies a digital square wave modulating signal.Query Syntax:WGEN:MODulation:FSKey:RATE?The :WGEN:MODulation:FSKey:RATE? query returns the FSK rate setting.Return Format&lt;rate&gt;&lt;NL&gt;&lt;rate&gt; ::= FSK modulation rate in Hz in NR3 formatSee Also:WGEN:MODulation:AM:DEPTh:WGEN:MODulation:AM:FREQuency:WGEN:MODulation:FM:DEViation:WGEN:MODulation:FM:FREQuency:WGEN:MODulation:FSKey:FREQuency:WGEN:MODulation:FUNCtion:WGEN:MODulation:FUNCtion:RAMP:SYMMetry:WGEN:MODulation:STATe:WGEN:MODulation:TYPE</c><c> :WGEN:MODulation:FUNCtion:WGEN Commands Name:WGEN:MODulation:FUNCtion � Command Syntax:WGEN:MODulation:FUNCtion &lt;shape&gt;&lt;shape&gt; ::= {SINusoid | SQUare| RAMP}The :WGEN:MODulation:FUNCtion command specifies the shape of the modulating signal.When the RAMP shape is selected, you can specify the amount of time per cycle that the ramp waveform is rising with the :WGEN:MODulation:FUNCtion:RAMP:SYMMetry command.This command applies to AM and FM modulation. (The FSK modulation signal is a square wave shape.)Query Syntax:WGEN:MODulation:FUNCtion?The :WGEN:MODulation:FUNCtion? query returns the specified modulating signal shape.Return Format&lt;shape&gt;&lt;NL&gt;&lt;shape&gt; ::= {SIN | SQU| RAMP}See Also:WGEN:MODulation:AM:DEPTh:WGEN:MODulation:AM:FREQuency:WGEN:MODulation:FM:DEViation:WGEN:MODulation:FM:FREQuency:WGEN:MODulation:FSKey:FREQuency:WGEN:MODulation:FSKey:RATE:WGEN:MODulation:FUNCtion:RAMP:SYMMetry:WGEN:MODulation:STATe:WGEN:MODulation:TYPE</c><c> :WGEN:MODulation:FUNCtion:RAMP:SYMMetry:WGEN Commands Name:WGEN:MODulation:FUNCtion:RAMP:SYMMetry � Command Syntax:WGEN:MODulation:FUNCtion:RAMP:SYMMetry &lt;percent&gt;&lt;percent&gt; ::= symmetry percentage from 0% to 100% in NR1 formatThe :WGEN:MODulation:FUNCtion:RAMP:SYMMetry command specifies the amount of time per cycle that the ramp waveform is rising. The ramp modulating waveform shape is specified with the :WGEN:MODulation:FUNCtion command.Query Syntax:WGEN:MODulation:FUNCtion:RAMP:SYMMetry?The :WGEN:MODulation:FUNCtion:RAMP:SYMMetry? query returns ramp symmetry percentage setting.Return Format&lt;percent&gt;&lt;NL&gt;&lt;percent&gt; ::= symmetry percentage from 0% to 100% in NR1 formatSee Also:WGEN:MODulation:AM:DEPTh:WGEN:MODulation:AM:FREQuency:WGEN:MODulation:FM:DEViation:WGEN:MODulation:FM:FREQuency:WGEN:MODulation:FSKey:FREQuency:WGEN:MODulation:FSKey:RATE:WGEN:MODulation:FUNCtion:WGEN:MODulation:STATe:WGEN:MODulation:TYPE</c><c> :WGEN:MODulation:NOISe:WGEN Commands Name:WGEN:MODulation:NOISe � Command Syntax:WGEN:MODulation:NOISe &lt;percent&gt;&lt;percent&gt; ::= 0 to 100The :WGEN:MODulation:NOISe command adds noise to the currently selected signal. The sum of the amplitude between the original signal and injected noise is limited to the regular amplitude limit (for example, 5 Vpp in 1 MOhm), so the range for &lt;percent&gt; varies according to current amplitude.Note that adding noise affects edge triggering on the waveform generator source as well as the waveform generator sync pulse output signal (which can be sent to TRIG OUT). This is because the trigger comparator is located after the noise source.Query Syntax:WGEN:MODulation:NOISe?The :WGEN:MODulation:NOISe query returns the percent of added noise.Return Format&lt;percent&gt;&lt;NL&gt;&lt;percent&gt; ::= 0 to 100See Also:WGEN:FUNCtion</c><c> :WGEN:MODulation:STATe:WGEN Commands Name:WGEN:MODulation:STATe � Command Syntax:WGEN:MODulation:STATe &lt;setting&gt;&lt;setting&gt; ::= {{OFF | 0} | {ON | 1}}The :WGEN:MODulation:STATe command enables or disables modulated waveform generator output.You can enable modulation for all waveform generator function types except pulse, DC, and noise.Query Syntax:WGEN:MODulation:STATe?The :WGEN:MODulation:STATe? query returns whether the modulated waveform generator output is enabled of disabled.Return Format&lt;setting&gt;&lt;NL&gt;&lt;setting&gt; ::= {0 | 1}See Also:WGEN:MODulation:AM:DEPTh:WGEN:MODulation:AM:FREQuency:WGEN:MODulation:FM:DEViation:WGEN:MODulation:FM:FREQuency:WGEN:MODulation:FSKey:FREQuency:WGEN:MODulation:FSKey:RATE:WGEN:MODulation:FUNCtion:WGEN:MODulation:FUNCtion:RAMP:SYMMetry:WGEN:MODulation:TYPE</c><c> :WGEN:MODulation:TYPE:WGEN Commands Name:WGEN:MODulation:TYPE � Command Syntax:WGEN:MODulation:TYPE &lt;type&gt;&lt;type&gt; ::= {AM | FM | FSK} The :WGEN:MODulation:TYPE command selects the modulation type:AM (amplitude modulation) � the amplitude of the original carrier signal is modified according to the amplitude of the modulating signal.Use the :WGEN:MODulation:AM:FREQuency command to set the modulating signal frequency.Use the :WGEN:MODulation:AM:DEPTh command to specify the amount of amplitude modulation.FM (frequency modulation) � the frequency of the original carrier signal is modified according to the amplitude of the modulating signal.Use the :WGEN:MODulation:FM:FREQuency command to set the modulating signal frequency.Use the :WGEN:MODulation:FM:DEViation command to specify the frequency deviation from the original carrier signal frequency.FSK (frequency-shift keying modulation) � the output frequency "shifts" between the original carrier frequency and a "hop frequency" at the specified FSK rate.The FSK rate specifies a digital square wave modulating signal.Use the :WGEN:MODulation:FSKey:FREQuency command to specify the "hop frequency".Use the :WGEN:MODulation:FSKey:RATE command to specify the rate at which the output frequency "shifts".Query Syntax:WGEN:MODulation:TYPE?The :WGEN:MODulation:TYPE? query returns the selected modulation type.Return Format&lt;type&gt;&lt;NL&gt;&lt;type&gt; ::= {AM | FM | FSK}See Also:WGEN:MODulation:AM:DEPTh:WGEN:MODulation:AM:FREQuency:WGEN:MODulation:FM:DEViation:WGEN:MODulation:FM:FREQuency:WGEN:MODulation:FSKey:FREQuency:WGEN:MODulation:FSKey:RATE:WGEN:MODulation:FUNCtion:WGEN:MODulation:FUNCtion:RAMP:SYMMetry:WGEN:MODulation:STATe</c><c> :WGEN:OUTPut:WGEN Commands Name:WGEN:OUTPut � Command Syntax:WGEN:OUTPut &lt;on_off&gt;&lt;on_off&gt; ::= {{1 | ON} | {0 | OFF}The :WGEN:OUTPut command specifies whether the waveform generator signal output is ON (1) or OFF (0).Query Syntax:WGEN:OUTPut?The :WGEN:OUTPut? query returns the current state of the waveform generator output setting.Return Format&lt;on_off&gt;&lt;NL&gt;&lt;on_off&gt; ::= {1 | 0}See AlsoIntroduction to :WGEN Commands</c><c> :WGEN:OUTPut:LOAD:WGEN Commands Name:WGEN:OUTPut:LOAD � Command Syntax:WGEN:OUTPut:LOAD &lt;impedance&gt;&lt;impedance&gt; ::= {ONEMeg | FIFTy}The :WGEN:OUTPut:LOAD command selects the expected output load impedance.The output impedance of the Gen Out BNC is fixed at 50 ohms. However, the output load selection lets the waveform generator display the correct amplitude and offset levels for the expected output load.If the actual load impedance is different than the selected value, the displayed amplitude and offset levels will be incorrect.Query Syntax:WGEN:OUTPut:LOAD?The :WGEN:OUTPut:LOAD? query returns the current expected output load impedance.Return Format&lt;impedance&gt;&lt;NL&gt;&lt;impedance&gt; ::= {ONEM | FIFT}See AlsoIntroduction to :WGEN Commands</c><c> :WGEN:PERiod:WGEN Commands Name:WGEN:PERiod � Command Syntax:WGEN:PERiod &lt;period&gt;&lt;period&gt; ::= period in seconds in NR3 formatFor all waveforms except Noise and DC, the :WGEN:PERiod command specifies the period of the waveform.You can also specify the period indirectly using the :WGEN:FREQuency command.Query Syntax:WGEN:PERiod?The :WGEN:PERiod? query returns the currently set waveform generator period.Return Format&lt;period&gt;&lt;NL&gt;&lt;period&gt; ::= period in seconds in NR3 formatSee AlsoIntroduction to :WGEN Commands:WGEN:FUNCtion:WGEN:FREQuency</c><c> :WGEN:RST:WGEN Commands Name:WGEN:RST � Command Syntax:WGEN:RSTThe :WGEN:RST command restores the waveform generator factory default settings (1 kHz sine wave, 500 mVpp, 0 V offset).See AlsoIntroduction to :WGEN Commands:WGEN:FUNCtion:WGEN:FREQuency</c><c> :WGEN:VOLTage:WGEN Commands Name:WGEN:VOLTage � Command Syntax:WGEN:VOLTage &lt;amplitude&gt;&lt;amplitude&gt; ::= amplitude in volts in NR3 formatFor all waveforms except DC, the :WGEN:VOLTage command specifies the waveform's amplitude. Use the :WGEN:VOLTage:OFFSet command to specify the offset voltage or DC level.You can also specify the amplitude and offset indirectly using the :WGEN:VOLTage:HIGH and :WGEN:VOLTage:LOW commands. For example, an amplitude of 5 V and an offset of 1 V is the same as a high-level voltage of 4 V and a low-level voltage of -1 V.Query Syntax:WGEN:VOLTage?The :WGEN:VOLTage? query returns the currently specified waveform amplitude.Return Format&lt;amplitude&gt;&lt;NL&gt;&lt;amplitude&gt; ::= amplitude in volts in NR3 formatSee AlsoIntroduction to :WGEN Commands:WGEN:FUNCtion:WGEN:VOLTage:OFFSet:WGEN:VOLTage:HIGH:WGEN:VOLTage:LOW</c><c> :WGEN:VOLTage:HIGH:WGEN Commands Name:WGEN:VOLTage:HIGH � Command Syntax:WGEN:VOLTage:HIGH &lt;high&gt;&lt;high&gt; ::= high-level voltage in volts, in NR3 formatFor all waveforms except DC, the :WGEN:VOLTage:HIGH command specifies the waveform's high-level voltage. Use the :WGEN:VOLTage:LOW command to specify the low-level voltage.You can also specify the high-level and low-level voltages indirectly using the :WGEN:VOLTage and :WGEN:VOLTage:OFFSet commands. For example, a high-level voltage of 4 V and a low-level voltage of -1 V is the same as an amplitude of 5 V and an offset of 1 V.Query Syntax:WGEN:VOLTage:HIGH?The :WGEN:VOLTage:HIGH? query returns the currently specified waveform high-level voltage.Return Format&lt;high&gt;&lt;NL&gt;&lt;high&gt; ::= high-level voltage in volts, in NR3 formatSee AlsoIntroduction to :WGEN Commands:WGEN:FUNCtion:WGEN:VOLTage:LOW:WGEN:VOLTage:WGEN:VOLTage:OFFSet</c><c> :WGEN:VOLTage:LOW:WGEN Commands Name:WGEN:VOLTage:LOW � Command Syntax:WGEN:VOLTage:LOW &lt;low&gt;&lt;low&gt; ::= low-level voltage in volts, in NR3 formatFor all waveforms except DC, the :WGEN:VOLTage:LOW command specifies the waveform's low-level voltage. Use the :WGEN:VOLTage:HIGH command to specify the high-level voltage.You can also specify the high-level and low-level voltages indirectly using the :WGEN:VOLTage and :WGEN:VOLTage:OFFSet commands. For example, a high-level voltage of 4 V and a low-level voltage of -1 V is the same as an amplitude of 5 V and an offset of 1 V.Query Syntax:WGEN:VOLTage:LOW?The :WGEN:VOLTage:LOW? query returns the currently specified waveform low-level voltage.Return Format&lt;low&gt;&lt;NL&gt;&lt;low&gt; ::= low-level voltage in volts, in NR3 formatSee AlsoIntroduction to :WGEN Commands:WGEN:FUNCtion:WGEN:VOLTage:LOW:WGEN:VOLTage:WGEN:VOLTage:OFFSet</c><c> :WGEN:VOLTage:OFFSet:WGEN Commands Name:WGEN:VOLTage:OFFSet � Command Syntax:WGEN:VOLTage:OFFSet &lt;offset&gt;&lt;offset&gt; ::= offset in volts in NR3 formatThe :WGEN:VOLTage:OFFSet command specifies the waveform's offset voltage or the DC level. Use the :WGEN:VOLTage command to specify the amplitude.You can also specify the amplitude and offset indirectly using the :WGEN:VOLTage:HIGH and :WGEN:VOLTage:LOW commands. For example, an amplitude of 5 V and an offset of 1 V is the same as a high-level voltage of 4 V and a low-level voltage of -1 V.Query Syntax:WGEN:VOLTage:OFFSet?The :WGEN:VOLTage:OFFSet? query returns the currently specified waveform offset voltage.Return Format&lt;offset&gt;&lt;NL&gt;&lt;offset&gt; ::= offset in volts in NR3 formatSee AlsoIntroduction to :WGEN Commands:WGEN:FUNCtion:WGEN:VOLTage:WGEN:VOLTage:HIGH:WGEN:VOLTage:LOW</c><c> :WMEMory&lt;r&gt;:CLEar:WMEMory&lt;r&gt; Commands Name:WMEMory&lt;r&gt;:CLEar � Command Syntax:WMEMory&lt;r&gt;:CLEar&lt;r&gt; ::= 1-2 in NR1 formatThe :WMEMory&lt;r&gt;:CLEar command clears the specified reference waveform location.See Also:WMEMory&lt;r&gt; Commands:WMEMory&lt;r&gt;:SAVE:WMEMory&lt;r&gt;:DISPlay</c><c> :WMEMory&lt;r&gt;:DISPlay:WMEMory&lt;r&gt; Commands Name:WMEMory&lt;r&gt;:DISPlay � Command Syntax:WMEMory&lt;r&gt;:DISPlay &lt;on_off&gt;&lt;r&gt; ::= 1-2 in NR1 format&lt;on_off&gt; ::= {{1 | ON} | {0 | OFF}}The :WMEMory&lt;r&gt;:DISPlay command turns the display of the specified reference waveform on or off.There are two reference waveform locations, but only one reference waveform can be displayed at a time. That means, if :WMEMory1:DISPlay is ON, sending the :WMEMory2:DISPlay ON command will automatically set :WMEMory1:DISPlay OFF.Query Syntax:WMEMory&lt;r&gt;:DISPlay?The :WMEMory&lt;r&gt;:DISPlay? query returns the current display setting for the reference waveform.Return Format&lt;on_off&gt;&lt;NL&gt;&lt;on_off&gt; ::= {1 | 0}See Also:WMEMory&lt;r&gt; Commands:WMEMory&lt;r&gt;:CLEar:WMEMory&lt;r&gt;:LABel</c><c> :WMEMory&lt;r&gt;:LABel:WMEMory&lt;r&gt; Commands Name:WMEMory&lt;r&gt;:LABel � Command Syntax:WMEMory&lt;r&gt;:LABel &lt;string&gt;&lt;r&gt; ::= 1-2 in NR1 format&lt;string&gt; ::= quoted ASCII stringLabel strings are 10 characters or less, and may contain any commonly used ASCII characters. Labels with more than 10 characters are truncated to 10 characters. Lower case characters are converted to upper case.The :WMEMory&lt;r&gt;:LABel command sets the reference waveform label to the string that follows.Setting a label for a reference waveform also adds the name to the label list in non-volatile memory (replacing the oldest label in the list).Query Syntax:WMEMory&lt;r&gt;:LABel?The :WMEMory&lt;r&gt;:LABel? query returns the label associated with a particular reference waveform.Return Format&lt;string&gt;&lt;NL&gt;&lt;string&gt; ::= quoted ASCII stringSee Also:WMEMory&lt;r&gt; Commands:WMEMory&lt;r&gt;:DISPlay</c><c> :WMEMory&lt;r&gt;:SAVE:WMEMory&lt;r&gt; Commands Name:WMEMory&lt;r&gt;:SAVE � Command Syntax:WMEMory&lt;r&gt;:SAVE &lt;source&gt;&lt;r&gt; ::= 1-2 in NR1 format&lt;source&gt; ::= {CHANnel&lt;n&gt; | FUNCtion | MATH}&lt;n&gt; ::= 1 to (# analog channels) in NR1 formatThe :WMEMory&lt;r&gt;:SAVE command copies the analog channel or math function waveform to the specified reference waveform location.Only ADD or SUBtract math operations can be saved as reference waveforms.See Also:WMEMory&lt;r&gt; Commands:WMEMory&lt;r&gt;:DISPlay</c><c> :WMEMory&lt;r&gt;:SKEW:WMEMory&lt;r&gt; Commands Name:WMEMory&lt;r&gt;:SKEW � Command Syntax:WMEMory&lt;r&gt;:SKEW &lt;skew&gt;&lt;r&gt; ::= 1-2 in NR1 format&lt;skew&gt; ::= time in seconds in NR3 formatThe :WMEMory&lt;r&gt;:SKEW command sets the skew factor for the specified reference waveform.Query Syntax:WMEMory&lt;r&gt;:SKEW?The :WMEMory&lt;r&gt;:SKEW? query returns the current skew setting for the selected reference waveform.Return Format&lt;skew&gt;&lt;NL&gt;&lt;skew&gt; ::= time in seconds in NR3 formatSee Also:WMEMory&lt;r&gt; Commands:WMEMory&lt;r&gt;:DISPlay:WMEMory&lt;r&gt;:YOFFset:WMEMory&lt;r&gt;:YRANge:WMEMory&lt;r&gt;:YSCale</c><c> :WMEMory&lt;r&gt;:YOFFset:WMEMory&lt;r&gt; Commands Name:WMEMory&lt;r&gt;:YOFFset � Command Syntax:WMEMory&lt;r&gt;:YOFFset &lt;offset&gt; [&lt;suffix&gt;]&lt;r&gt; ::= 1-2 in NR1 format&lt;offset&gt; ::= vertical offset value in NR3 format&lt;suffix&gt; ::= {V | mV}The :WMEMory&lt;r&gt;:YOFFset command sets the value that is represented at center screen for the selected reference waveform.The range of legal values varies with the value set by the :WMEMory&lt;r&gt;:YRANge or :WMEMory&lt;r&gt;:YSCale commands. If you set the offset to a value outside of the legal range, the offset value is automatically set to the nearest legal value. Legal values are affected by the probe attenuation setting.Query Syntax:WMEMory&lt;r&gt;:YOFFset?The :WMEMory&lt;r&gt;:YOFFset? query returns the current offset value for the selected reference waveform.Return Format&lt;offset&gt;&lt;NL&gt;&lt;offset&gt; ::= vertical offset value in NR3 formatSee Also:WMEMory&lt;r&gt; Commands:WMEMory&lt;r&gt;:DISPlay:WMEMory&lt;r&gt;:YRANge:WMEMory&lt;r&gt;:YSCale:WMEMory&lt;r&gt;:SKEW</c><c> :WMEMory&lt;r&gt;:YRANge:WMEMory&lt;r&gt; Commands Name:WMEMory&lt;r&gt;:YRANge � Command Syntax:WMEMory&lt;r&gt;:YRANge &lt;range&gt;[&lt;suffix&gt;]&lt;r&gt; ::= 1-2 in NR1 format&lt;range&gt; ::= vertical full-scale range value in NR3 format&lt;suffix&gt; ::= {V | mV}The :WMEMory&lt;r&gt;:YRANge command defines the full-scale vertical axis of the selected reference waveform.Legal values for the range are copied from the original source waveform (that is, the analog channel or math function waveform that was originally saved as a reference waveform).Query Syntax:WMEMory&lt;r&gt;:YRANge?The :WMEMory&lt;r&gt;:YRANge? query returns the current full-scale range setting for the specified reference waveform.Return Format&lt;range&gt;&lt;NL&gt;&lt;range&gt; ::= vertical full-scale range value in NR3 formatSee Also:WMEMory&lt;r&gt; Commands:WMEMory&lt;r&gt;:DISPlay:WMEMory&lt;r&gt;:YOFFset:WMEMory&lt;r&gt;:SKEW:WMEMory&lt;r&gt;:YSCale</c><c> :WMEMory&lt;r&gt;:YSCale:WMEMory&lt;r&gt; Commands Name:WMEMory&lt;r&gt;:YSCale � Command Syntax:WMEMory&lt;r&gt;:YSCale &lt;scale&gt;[&lt;suffix&gt;]&lt;r&gt; ::= 1-2 in NR1 format&lt;scale&gt; ::= vertical units per division in NR3 format&lt;suffix&gt; ::= {V | mV}The :WMEMory&lt;r&gt;:YSCale command sets the vertical scale, or units per division, of the selected reference waveform.Legal values for the scale are copied from the original source waveform (that is, the analog channel or math function waveform that was originally saved as a reference waveform).Query Syntax:WMEMory&lt;r&gt;:YSCale?The :WMEMory&lt;r&gt;:YSCale? query returns the current scale setting for the specified reference waveform.Return Format&lt;scale&gt;&lt;NL&gt;&lt;scale&gt; ::= vertical units per division in NR3 formatSee Also:WMEMory&lt;r&gt; Commands:WMEMory&lt;r&gt;:DISPlay:WMEMory&lt;r&gt;:YOFFset:WMEMory&lt;r&gt;:YRANge:WMEMory&lt;r&gt;:SKEW</c><c> :SINGleRoot (:) Commands Name:SINGle � Command Syntax:SINGleThe :SINGle command causes the instrument to acquire a single trigger of data. This is the same as pressing the Single key on the front panel.See AlsoIntroduction to Root (:) Commands:RUN:STOP</c><c> :STOPRoot (:) Commands Name:STOP � Command Syntax:STOPThe :STOP command stops the acquisition. This is the same as pressing the Stop key on the front panel.See AlsoIntroduction to Root (:) Commands:RUN:SINGleExample CodeExample Code</c><c> *CLS (Clear Status)Common (*) Commands Name*CLS (Clear Status) � Command Syntax*CLSThe *CLS common command clears the status data structures, the device-defined error queue, and the Request-for-OPC flag.If the *CLS command immediately follows a program message terminator, the output queue and the MAV (message available) bit are cleared.See AlsoIntroduction to Common (*) Commands*STB (Read Status Byte)*ESE (Standard Event Status Enable)*ESR (Standard Event Status Register)*SRE (Service Request Enable):SYSTem:ERRor</c><c> *ESE (Standard Event Status Enable)Common (*) Commands Name*ESE (Standard Event Status Enable) � Command Syntax*ESE &lt;mask_argument&gt;&lt;mask_argument&gt; ::= integer from 0 to 255The *ESE common command sets the bits in the Standard Event Status Enable Register. The Standard Event Status Enable Register contains a mask value for the bits to be enabled in the Standard Event Status Register. A "1" in the Standard Event Status Enable Register enables the corresponding bit in the Standard Event Status Register. A zero disables the bit.Standard Event Status Enable (ESE):BitNameDescriptionWhen Set (1 = High = True), Enables:7PONPower OnEvent when an OFF to ON transition occurs.6URQUser RequestEvent when a front-panel key is pressed.5CMECommand ErrorEvent when a command error is detected.4EXEExecution ErrorEvent when an execution error is detected.3DDEDevice Dependent ErrorEvent when a device-dependent error is detected.2QYEQuery ErrorEvent when a query error is detected.1RQLRequest ControlEvent when the device is requesting control. (Not used.)0OPCOperation CompleteEvent when an operation is complete.Query Syntax*ESE?The *ESE? query returns the current contents of the Standard Event Status Enable Register.Return Format&lt;mask_argument&gt;&lt;NL&gt;&lt;mask_argument&gt; ::= 0,..,255; an integer in NR1 format.See AlsoIntroduction to Common (*) Commands*ESR (Standard Event Status Register)*OPC (Operation Complete)*CLS (Clear Status)</c><c> *ESR (Standard Event Status Register)Common (*) Commands Name*ESR (Standard Event Status Register) � Query Syntax*ESR?The *ESR? query returns the contents of the Standard Event Status Register. When you read the Event Status Register, the value returned is the total bit weights of all of the bits that are high at the time you read the byte. Reading the register clears the Event Status Register.The following table shows bit weight, name, and condition for each bit.Standard Event Status Register (ESR):BitNameDescriptionWhen Set (1 = High = True), Indicates:7PONPower OnAn OFF to ON transition has occurred.6URQUser RequestA front-panel key has been pressed.5CMECommand ErrorA command error has been detected.4EXEExecution ErrorAn execution error has been detected.3DDEDevice Dependent ErrorA device-dependent error has been detected.2QYEQuery ErrorA query error has been detected.1RQLRequest ControlThe device is requesting control. (Not used.)0OPCOperation CompleteOperation is complete.Return Format&lt;status&gt;&lt;NL&gt;&lt;status&gt; ::= 0,..,255; an integer in NR1 format.Reading the Standard Event Status Register clears it. High or 1 indicates the bit is true.See AlsoIntroduction to Common (*) Commands*ESE (Standard Event Status Enable)*OPC (Operation Complete)*CLS (Clear Status):SYSTem:ERRor</c><c> *IDN (Identification Number)Common (*) Commands Name*IDN (Identification Number) � Query Syntax*IDN?The *IDN? query identifies the instrument type and software version.Return FormatAGILENT TECHNOLOGIES,&lt;model&gt;,&lt;serial number&gt;,X.XX.XX &lt;NL&gt;&lt;model&gt; ::= the model number of the instrument&lt;serial number&gt; ::= the serial number of the instrumentX.XX.XX ::= the software revision of the instrumentSee AlsoIntroduction to Common (*) Commands*OPT (Option Identification)</c><c> *OPC (Operation Complete)Common (*) Commands Name*OPC (Operation Complete) � Command Syntax*OPCThe *OPC command sets the operation complete bit in the Standard Event Status Register when all pending device operations have finished.Query Syntax*OPC?The *OPC? query places an ASCII "1" in the output queue when all pending device operations have completed. The interface hangs until this query returns.Return Format&lt;complete&gt;&lt;NL&gt;&lt;complete&gt; ::= 1See AlsoIntroduction to Common (*) Commands*ESE (Standard Event Status Enable)*ESR (Standard Event Status Register)*CLS (Clear Status)</c><c> *OPT (Option Identification)Common (*) Commands Name*OPT (Option Identification) � Query Syntax*OPT?The *OPT? query reports the options installed in the instrument. This query returns a string that identifies the module and its software revision level.Return Format0,0,&lt;license info&gt;&lt;license info&gt; ::= &lt;All field&gt;, &lt;reserved&gt;, &lt;MSO&gt;, &lt;reserved&gt;, &lt;Memory&gt;, &lt;Low Speed Serial&gt;, &lt;Automotive Serial&gt;, &lt;reserved&gt;, &lt;reserved&gt;, &lt;reserved&gt;, &lt;RS-232/UART Serial&gt;, &lt;Segmented Memory&gt;, &lt;Mask Test&gt;, &lt;reserved&gt;, &lt;Bandwidth&gt;, &lt;reserved&gt;, &lt;reserved&gt;, &lt;reserved&gt;, &lt;reserved&gt;, &lt;reserved&gt;, &lt;Educator's Kit&gt;, &lt;Waveform Generator&gt;, &lt;reserved&gt;, &lt;reserved&gt;, &lt;reserved&gt;, &lt;reserved&gt;, &lt;reserved&gt;, &lt;reserved&gt;, &lt;Digital Voltmeter&gt;, &lt;reserved&gt;&lt;All field&gt; ::= {0 | All}&lt;reserved&gt; ::= 0&lt;MSO&gt; ::= {0 | MSO}&lt;Memory&gt; ::= {0 | MEMUP}&lt;Low Speed Serial&gt; ::= {0 | EMBD}&lt;Automotive Serial&gt; ::= {0 | AUTO}&lt;RS-232/UART Serial&gt; ::= {0 | COMP}&lt;Segmented Memory&gt; ::= {0 | SGM}&lt;Mask Test&gt; ::= {0 | MASK}&lt;Bandwidth&gt; ::= {0 | BW10 | BW20}&lt;Educator's Kit&gt; ::= {0 | EDK}&lt;Waveform Generator&gt; ::= {0 | WAVEGEN}&lt;Digital Voltmeter&gt; ::= {0 | DVM}The &lt;MSO&gt; field indicates whether the unit is a mixed-signal oscilloscope.The *OPT? query returns the following:ModuleModule IdNo modules attached0,0,0,0,MSO,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0See AlsoIntroduction to Common (*) Commands*IDN (Identification Number)</c><c> *RCL (Recall)Common (*) Commands Name*RCL (Recall) � Command Syntax*RCL &lt;value&gt;&lt;value&gt; ::= {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9}The *RCL command restores the state of the instrument from the specified save/recall register.See AlsoIntroduction to Common (*) Commands*SAV (Save)</c><c> *RST (Reset)Common (*) Commands Name*RST (Reset) � Command Syntax*RSTThe *RST command places the instrument in a known state. This is the same as pressing [Save/Recall] &gt; Default/Erase &gt; Factory Default on the front panel.When you perform a factory default setup, there are no user settings that remain unchanged. To perform the equivalent of the front panel's [Default Setup] key, where some user settings (like preferences) remain unchanged, use the :SYSTem:PRESet command.Reset conditions are:Acquire MenuModeNormalAveragingOff# Averages8Analog Channel MenuChannel 1OnChannel 2OffVolts/division5.00 VOffset0.00CouplingDCProbe attenuation10:1VernierOffInvertOffBW limitOffImpedance1 M Ohm (cannot be changed)UnitsVoltsSkew0Cursor MenuSourceChannel 1Digital Channel Menu (MSO models only)Channel 0 - 7OffLabelsOffThresholdTTL (1.4 V)Display MenuPersistenceOffGrid20%Quick Meas MenuSourceChannel 1Run Control Scope is runningTime Base MenuMain time/division100 usMain time base delay0.00 sDelay time/division500 nsDelay time base delay0.00 sReferencecenterModemainVernierOffTrigger MenuTypeEdgeModeAutoCouplingdcSourceChannel 1Level0.0 VSlopePositiveHF Reject and noise rejectOffHoldoff40 nsExternal probe attenuation10:1External UnitsVoltsExternal Impedance1 M Ohm (cannot be changed)See AlsoIntroduction to Common (*) Commands:SYSTem:PRESetExample Code ' RESET - This command puts the oscilloscope into a known state. ' This statement is very important for programs to work as expected. ' Most of the following initialization commands are initialized by ' *RST. It is not necessary to reinitialize them unless the default ' setting is not suitable for your application. myScope.WriteString "*RST" ' Reset the oscilloscope to the defaults.See complete example programs at: Programming Examples</c><c> *SAV (Save)Common (*) Commands Name*SAV (Save) � Command Syntax*SAV &lt;value&gt;&lt;value&gt; ::= {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9}The *SAV command stores the current state of the instrument in a save register. The data parameter specifies the register where the data will be saved.See AlsoIntroduction to Common (*) Commands*RCL (Recall)</c><c> *SRE (Service Request Enable)Common (*) Commands Name*SRE (Service Request Enable) � Command Syntax*SRE &lt;mask&gt;&lt;mask&gt; ::= integer with values defined in the following table.The *SRE command sets the bits in the Service Request Enable Register. The Service Request Enable Register contains a mask value for the bits to be enabled in the Status Byte Register. A one in the Service Request Enable Register enables the corresponding bit in the Status Byte Register. A zero disables the bit.Service Request Enable Register (SRE):BitNameDescriptionWhen Set (1 = High = True), Enables:7OPEROperation Status RegisterInterrupts when enabled conditions in the Operation Status Register (OPER) occur.6------(Not used.)5ESBEvent Status BitInterrupts when enabled conditions in the Standard Event Status Register (ESR) occur.4MAVMessage AvailableInterrupts when messages are in the Output Queue.3------(Not used.)2MSGMessageInterrupts when an advisory has been displayed on the oscilloscope.1USRUser EventInterrupts when enabled user event conditions occur.0TRGTriggerInterrupts when a trigger occurs.Query Syntax*SRE?The *SRE? query returns the current value of the Service Request Enable Register.Return Format&lt;mask&gt;&lt;NL&gt;&lt;mask&gt; ::= sum of all bits that are set, 0,..,255; an integer in NR1 formatSee AlsoIntroduction to Common (*) Commands*STB (Read Status Byte)*CLS (Clear Status)</c><c> *STB (Read Status Byte)Common (*) Commands Name*STB (Read Status Byte) � Query Syntax*STB?The *STB? query returns the current value of the instrument's status byte. The MSS (Master Summary Status) bit is reported on bit 6 instead of the RQS (request service) bit. The MSS indicates whether or not the device has at least one reason for requesting service.Return Format&lt;value&gt;&lt;NL&gt;&lt;value&gt; ::= 0,..,255; an integer in NR1 formatStatus Byte Register (STB):BitNameDescriptionWhen Set (1 = High = True), Indicates:7OPEROperation Status RegisterAn enabled condition in the Operation Status Register (OPER) has occurred.6RQSRequest ServiceWhen polled, that the device is requesting service.MSSMaster Summary StatusWhen read (by *STB?), whether the device has a reason for requesting service.5ESBEvent Status BitAn enabled condition in the Standard Event Status Register (ESR) has occurred.4MAVMessage AvailableThere are messages in the Output Queue.3------(Not used, always 0.)2MSGMessageAn advisory has been displayed on the oscilloscope.1USRUser EventAn enabled user event condition has occurred.0TRGTriggerA trigger has occurred.To read the instrument's status byte with RQS reported on bit 6, use the interface Serial Poll.See AlsoIntroduction to Common (*) Commands*SRE (Service Request Enable)</c><c> *TRG (Trigger)Common (*) Commands Name*TRG (Trigger) � Command Syntax*TRGThe *TRG command has the same effect as the :DIGitize command with no parameters.See AlsoIntroduction to Common (*) Commands:DIGitize:RUN:STOP</c><c> *TST (Self Test)Common (*) Commands Name*TST (Self Test) � Query Syntax*TST?The *TST? query performs a self-test on the instrument. The result of the test is placed in the output queue. A zero indicates the test passed and a non-zero indicates the test failed. If the test fails, refer to the troubleshooting section of the Service Guide.Return Format&lt;result&gt;&lt;NL&gt;&lt;result&gt; ::= 0 or non-zero value; an integer in NR1 formatSee AlsoIntroduction to Common (*) Commands</c><c> *WAI (Wait To Continue)Common (*) Commands Name*WAI (Wait To Continue) � Command Syntax*WAIThe *WAI command has no function in the oscilloscope, but is parsed for compatibility with other instruments.See AlsoIntroduction to Common (*) Commands</c></HierarchySearchSerializer>