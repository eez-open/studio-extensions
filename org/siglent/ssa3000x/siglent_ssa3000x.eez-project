{
  "settings": {
    "general": {      
      "projectVersion": "v3",
      "projectType": "iext",
      "scpiDocFolder": "doc"
    },
    "build": {
      "configurations": [
        {
          "name": "SSA3000X",
          "description": "SSA3000X series spectrum analyzer has a frequency range from 9 kHz up to 3.2 GHz, it is light\nweight and small size, with an user friendly interface, concise style of display, reliable measurement\nprecision and plenty of RF measurement functions. Applicable to research and development, education,\nproduction, maintenance and other related fields, that meets a wider range of application requirements."
        }
      ],
      "files": [],
      "destinationFolder": "."
    }
  },
  "extensionDefinitions": [
    {
      "name": "SSA3031X",
      "description": "The Siglent SSA3021X is a compact and light weight Spectrum Analyzer with premium performance for portable applications. The use of digital IF (intermediate frequency) technology guarantees reliability and performance to meet the most demanding RF applications.\n\nThe very large display (25.65 cm / 10.1\") of the Siglent SSA3021X Spectrum Analyzer provides a resolution of 1024x600 pixels allowing a very good overview of all its comfortable functions like measurements, marker and peak table, auto tune and coupling. These functions enable the analyzer to acquire signals and match parameters automatically, compared to the manual process necessary with a traditional analyzer.\n\nThe Siglent Spectrum Analyzers have a sophisticated and easy to use user interface offering multiple functions for all tasks. The menu navigation is very intuitive and all functions and parameters are easy to locate thanks to the graphical interface.",
      "buildConfiguration": "SSA3000X",
      "image": "doc/images/ssa3021x.jpg",
      "extensionName": "siglent_ssa3031x",
      "idn": "Siglent Technologies,SSA3031X",
      "idfName": "Siglent SSA3031X",
      "idfShortName": "SSA3031X",
      "idfFirmwareVersion": "(unknown)",
      "idfGuid": "845dca00-af2b-4ed8-d535-fe8f2192b108",
      "idfRevisionNumber": "0.1.0",
      "idfDescription": "Spectrum analyzer from 9 kHz to 2.1 GHz",
      "idfSupportedModels": "SSA3031X",
      "idfRevisionComments": "No comment",
      "idfAuthor": "Envox",
      "sdlFriendlyName": "SIGLENT SSA3031X"
    },
    {
      "name": "SSA3032X",
      "description": "The Siglent SSA3032X is a compact and light weight Spectrum Analyzer with premium performance for portable applications. The use of digital IF (intermediate frequency) technology guarantees reliability and performance to meet the most demanding RF applications.\n\nThe very large display (25.65 cm / 10.1\") of the Siglent SSA3032X Spectrum Analyzer provides a resolution of 1024x600 pixels allowing a very good overview of all its comfortable functions like measurements, marker and peak table, auto tune and coupling. These functions enable the analyzer to acquire signals and match parameters automatically, compared to the manual process necessary with a traditional analyzer.\n\nThe Siglent Spectrum Analyzers have a sophisticated and easy to use user interface offering multiple functions for all tasks. The menu navigation is very intuitive and all functions and parameters are easy to locate thanks to the graphical interface.",
      "buildConfiguration": "SSA3000X",
      "image": "doc/images/ssa3022x.png",
      "extensionName": "siglent_ssa3032x",
      "idn": "Siglent Technologies,SSA3032X",
      "idfName": "Siglent SSA3032X",
      "idfShortName": "SSA3032X",
      "idfFirmwareVersion": "1.2.9.1",
      "idfGuid": "59fad881-ba8b-4565-b2e4-ea672ff833a7",
      "idfRevisionNumber": "0.1.0",
      "idfDescription": "Spectrum analyzer from 9 kHz to 2.1 GHz",
      "idfSupportedModels": "SSA3032X",
      "idfRevisionComments": "No comment",
      "idfAuthor": "Envox",
      "sdlFriendlyName": "SIGLENT SSA3032X"
    }
  ],
  "scpi": {
    "subsystems": [
      {
        "name": "IEEE Common Commands",
        "helpLink": "01-SSA3000X Common commands.html",
        "commands": [
          {
            "name": "*CLS",
            "helpLink": "01-SSA3000X Common commands.html#_scpi_CLS",
            "parameters": [],
            "response": {}
          },
          {
            "name": "*ESE",
            "helpLink": "01-SSA3000X Common commands.html#_scpi_ESE",
            "parameters": [
              {
                "name": "value",
                "type": [
                  {
                    "type": "nr1"
                  }
                ],
                "isOptional": false
              }
            ],
            "response": {}
          },
          {
            "name": "*ESE?",
            "helpLink": "01-SSA3000X Common commands.html#_scpi_ESE2",
            "parameters": [],
            "response": {
              "type": "nr1"
            }
          },
          {
            "name": "*ESR?",
            "helpLink": "01-SSA3000X Common commands.html#_scpi_ESR",
            "parameters": [],
            "response": {
              "type": "nr1"
            }
          },
          {
            "name": "*IDN?",
            "helpLink": "01-SSA3000X Common commands.html#_scpi_IDN",
            "parameters": [],
            "response": {
              "type": "quoted-string"
            }
          },
          {
            "name": "*OPC",
            "helpLink": "01-SSA3000X Common commands.html#_scpi_OPC",
            "parameters": [],
            "response": {}
          },
          {
            "name": "*OPC?",
            "helpLink": "01-SSA3000X Common commands.html#_scpi_OPC2",
            "parameters": [],
            "response": {
              "type": "boolean"
            }
          },
          {
            "name": "*RST",
            "helpLink": "01-SSA3000X Common commands.html#_scpi_RST",
            "parameters": [],
            "response": {}
          },
          {
            "name": "*SRE",
            "helpLink": "01-SSA3000X Common commands.html#_scpi_SRE",
            "parameters": [
              {
                "name": "value",
                "type": [
                  {
                    "type": "nr1"
                  }
                ],
                "isOptional": false
              }
            ],
            "response": {}
          },
          {
            "name": "*SRE?",
            "helpLink": "01-SSA3000X Common commands.html#_scpi_SRE2",
            "parameters": [],
            "response": {
              "type": "nr1"
            }
          },
          {
            "name": "*STB",
            "helpLink": "01-SSA3000X Common commands.html#_scpi_STB",
            "parameters": [],
            "response": {}
          },
          {
            "name": "*WAI",
            "helpLink": "01-SSA3000X Common commands.html#_scpi_WAI",
            "parameters": [],
            "response": {}
          }
        ]
      },
      {
        "name": "System Subsystem",
        "helpLink": "02-SSA3000X System commands.html",
        "commands": [
          {
            "name": ":HCOPy:SDUMp:DATA?",
            "helpLink": "02-SSA3000X System commands.html#_scpi_HCOP_SDUM",
            "parameters": [],
            "response": {
              "type": "non-standard-data-block"
            }
          },
          {
            "name": ":SYSTem:COMMunicate:LAN:GATeway",
            "helpLink": "02-SSA3000X System commands.html#_scpi_SYST_COMM_LAN_GAT",
            "parameters": [
              {
                "name": "gateway",
                "type": [
                  {
                    "type": "quoted-string"
                  }
                ],
                "isOptional": false
              }
            ],
            "response": {}
          },
          {
            "name": ":SYSTem:COMMunicate:LAN:GATeway?",
            "helpLink": "02-SSA3000X System commands.html#_scpi_SYST_COMM_LAN_GAT2",
            "parameters": [],
            "response": {
              "type": "quoted-string"
            }
          },
          {
            "name": ":SYSTem:COMMunicate:LAN:IPADdress",
            "helpLink": "02-SSA3000X System commands.html#_scpi_SYST_COMM_LAN_IPAD",
            "parameters": [
              {
                "name": "address",
                "type": [
                  {
                    "type": "quoted-string"
                  }
                ],
                "isOptional": false
              }
            ],
            "response": {}
          },
          {
            "name": ":SYSTem:COMMunicate:LAN:IPADdress?",
            "helpLink": "02-SSA3000X System commands.html#_scpi_SYST_COMM_LAN_IPAD2",
            "parameters": [],
            "response": {
              "type": "quoted-string"
            }
          },
          {
            "name": ":SYSTem:COMMunicate:LAN:SMASk",
            "helpLink": "02-SSA3000X System commands.html#_scpi_SYST_COMM_LAN_SMAS",
            "parameters": [
              {
                "name": "mask",
                "type": [
                  {
                    "type": "quoted-string"
                  }
                ],
                "isOptional": false
              }
            ],
            "response": {}
          },
          {
            "name": ":SYSTem:COMMunicate:LAN:SMASk?",
            "helpLink": "02-SSA3000X System commands.html#_scpi_SYST_COMM_LAN_SMAS2",
            "parameters": [],
            "response": {
              "type": "quoted-string"
            }
          },
          {
            "name": ":SYSTem:COMMunicate:LAN:TYPE",
            "helpLink": "02-SSA3000X System commands.html#_scpi_SYST_COMM_LAN_TYPE",
            "parameters": [],
            "response": {}
          },
          {
            "name": ":SYSTem:COMMunicate:LAN:TYPE?",
            "helpLink": "02-SSA3000X System commands.html#_scpi_SYST_COMM_LAN_TYPE2",
            "parameters": [],
            "response": {
              "type": "discrete",
              "enumeration": "lan_type"
            }
          },
          {
            "name": ":SYSTem:CONFigure:SYSTem?",
            "helpLink": "02-SSA3000X System commands.html#_scpi_SYST_CON",
            "parameters": [],
            "response": {
              "type": "arbitrary-ascii"
            }
          },
          {
            "name": ":SYSTem:DATE",
            "helpLink": "02-SSA3000X System commands.html#_scpi_SYST_DATE",
            "parameters": [
              {
                "name": "date",
                "type": [
                  {
                    "type": "nr1"
                  }
                ],
                "isOptional": false
              }
            ],
            "response": {}
          },
          {
            "name": ":SYSTem:DATE?",
            "helpLink": "02-SSA3000X System commands.html#_scpi_SYST_DATE2",
            "parameters": [],
            "response": {
              "type": "arbitrary-ascii"
            }
          },
          {
            "name": ":SYSTem:FDEFault",
            "helpLink": "02-SSA3000X System commands.html#_scpi_SYST_FDEF",
            "parameters": [],
            "response": {}
          },
          {
            "name": ":SYSTem:LANGuage",
            "helpLink": "02-SSA3000X System commands.html#_scpi_SYST_LANG",
            "parameters": [],
            "response": {}
          },
          {
            "name": ":SYSTem:LKEY",
            "helpLink": "02-SSA3000X System commands.html#_scpi_SYST_LKEY",
            "parameters": [
              {
                "name": "license key",
                "type": [
                  {
                    "type": "quoted-string"
                  }
                ],
                "isOptional": false
              },
              {
                "name": "option",
                "type": [
                  {
                    "type": "discrete",
                    "enumeration": "system_options"
                  }
                ],
                "isOptional": false
              }
            ],
            "response": {}
          },
          {
            "name": ":SYSTem:OPTions?",
            "helpLink": "02-SSA3000X System commands.html#_scpi_SYST_OPT",
            "parameters": [],
            "response": {
              "type": "discrete",
              "enumeration": "system_options"
            }
          },
          {
            "name": ":SYSTem:PON:TYPE",
            "helpLink": "02-SSA3000X System commands.html#_scpi_SYST_PON",
            "parameters": [],
            "response": {}
          },
          {
            "name": ":SYSTem:PON:TYPE?",
            "helpLink": "02-SSA3000X System commands.html#_scpi_SYST_PON2",
            "parameters": [],
            "response": {
              "type": "discrete",
              "enumeration": "pon_type"
            }
          },
          {
            "name": ":SYSTem:PRESet",
            "helpLink": "02-SSA3000X System commands.html#_scpi_SYST_PRES",
            "parameters": [],
            "response": {}
          },
          {
            "name": ":SYSTem:PRESet:TYPE",
            "helpLink": "02-SSA3000X System commands.html#_scpi_SYST_PRES_TYPE",
            "parameters": [],
            "response": {}
          },
          {
            "name": ":SYSTem:PRESet:TYPE?",
            "helpLink": "02-SSA3000X System commands.html#_scpi_SYST_PRES_TYPE2",
            "parameters": [],
            "response": {
              "type": "discrete",
              "enumeration": "pon_type"
            }
          },
          {
            "name": ":SYSTem:RESTart",
            "helpLink": "02-SSA3000X System commands.html#_scpi_SYST_REST",
            "parameters": [],
            "response": {}
          },
          {
            "name": ":SYSTem:TIME",
            "helpLink": "02-SSA3000X System commands.html#_scpi_SYST_TIME",
            "parameters": [
              {
                "name": "time",
                "type": [
                  {
                    "type": "nr1"
                  }
                ],
                "isOptional": false
              }
            ],
            "response": {}
          },
          {
            "name": ":SYSTem:TIME?",
            "helpLink": "02-SSA3000X System commands.html#_scpi_SYST_TIME2",
            "parameters": [],
            "response": {
              "type": "arbitrary-ascii"
            }
          }
        ]
      },
      {
        "name": "Instrument Subsystem",
        "helpLink": "03-SSA3000X Instrument Subsystem.html",
        "commands": [
          {
            "name": ":INSTrument:MEASure",
            "helpLink": "03-SSA3000X Instrument Subsystem.html#_scpi_INST_MEA",
            "parameters": [],
            "response": {}
          },
          {
            "name": ":INSTrument:MEASure?",
            "helpLink": "03-SSA3000X Instrument Subsystem.html#_scpi_INST_MEA2",
            "parameters": [],
            "response": {
              "type": "discrete",
              "enumeration": "inst_mode"
            }
          },
          {
            "name": ":INSTrument[:SELect]",
            "helpLink": "03-SSA3000X Instrument Subsystem.html#_scpi_INST_SEL",
            "parameters": [],
            "response": {}
          },
          {
            "name": ":INSTrument[:SELect]?",
            "helpLink": "03-SSA3000X Instrument Subsystem.html#_scpi_INST_SEL2",
            "parameters": [],
            "response": {
              "type": "discrete",
              "enumeration": "inst_select"
            }
          }
        ]
      },
      {
        "name": "Initiate Subsystem",
        "helpLink": "04-SSA3000X Initiate Subsystem.html",
        "commands": [
          {
            "name": ":INITiate:CONTinuous",
            "helpLink": "04-SSA3000X Initiate Subsystem.html#_scpi_INIT_CON",
            "parameters": [],
            "response": {}
          },
          {
            "name": ":INITiate:CONTinuous?",
            "helpLink": "04-SSA3000X Initiate Subsystem.html#_scpi_INIT_CON2",
            "parameters": [],
            "response": {
              "type": "boolean"
            }
          },
          {
            "name": ":INITiate[:IMMediate]",
            "helpLink": "04-SSA3000X Initiate Subsystem.html#_scpi_INIT_IMM",
            "parameters": [],
            "response": {}
          }
        ]
      }
    ],
    "enums": [
      {
        "name": "lan_type",
        "members": [
          {
            "name": "STATIC"
          },
          {
            "name": "DHCP"
          }
        ]
      },
      {
        "name": "pon_type",
        "members": [
          {
            "name": "DTF"
          },
          {
            "name": "Last"
          },
          {
            "name": "User"
          }
        ]
      },
      {
        "name": "inst_mode",
        "members": [
          {
            "name": "ACPR"
          },
          {
            "name": "CHPower"
          },
          {
            "name": "OBW"
          },
          {
            "name": "OFF"
          },
          {
            "name": "SPECtrogram"
          },
          {
            "name": "TOI"
          },
          {
            "name": "TPOWer"
          }
        ]
      },
      {
        "name": "inst_select",
        "members": [
          {
            "name": "CAT"
          },
          {
            "name": "SA"
          }
        ]
      },
      {
        "name": "system_options",
        "members": [
          {
            "name": "CAT"
          },
          {
            "name": "EMI"
          },
          {
            "name": "Meas"
          },
          {
            "name": "TG"
          }
        ]
      }
    ]
  },
  "shortcuts": {
    "shortcuts": [
      {
        "id": "761518c3-f42d-414b-eae7-648b78a25a59",
        "name": "Fcenter",
        "action": {
          "type": "javascript",
          "data": "var defaultValues = {\n    centerFrequency: '1e6'\n};\n\nvar values = await input({\n    title: \"Enter Center Frequency\",\n    fields: [\n        { \n            name: \"centerFrequency\",\n            displayName: \"Center frequency\",\n            type: \"number\"\n        }\n    ]\n}, defaultValues);\n\nif (!values || isNaN(values.centerFrequency)) {\n    return;\n}\n    \nconnection.acquire();    \nconnection.command(`:FREQuency:CENTer ${values.centerFrequency}`);\nconnection.release();\n\nconsole.log(values);"
        },
        "keybinding": "",
        "showInToolbar": true,
        "toolbarButtonPosition": 4,
        "toolbarButtonColor": "#727b84",
        "requiresConfirmation": false
      },
      {
        "id": "bcaf826c-d401-4494-8fe4-0c54702cd700",
        "name": "Fspan",
        "action": {
          "type": "javascript",
          "data": "var defaultValues = {\n    spanFrequency: '1e6'\n};\n\nvar values = await input({\n    title: \"Enter Frequency Span\",\n    fields: [\n        { \n            name: \"spanFrequency\",\n            displayName: \"Frequency Span\",\n            type: \"number\"\n        }\n    ]\n}, defaultValues);\n\nif (!values || isNaN(values.spanFrequency)) {\n    return;\n}\n    \nconnection.acquire();    \nconnection.command(`:FREQuency:SPAN ${values.spanFrequency}`);\nconnection.release();\n\nconsole.log(values);"
        },
        "keybinding": "",
        "showInToolbar": true,
        "toolbarButtonPosition": 5,
        "toolbarButtonColor": "#727b84",
        "requiresConfirmation": false
      },
      {
        "id": "c7f80a5f-33b8-4536-f7a8-cc09c308a679",
        "name": "Fstart",
        "action": {
          "type": "javascript",
          "data": "var defaultValues = {\n    startFrequency: '0'\n};\n\nvar values = await input({\n    title: \"Enter Start Frequency\",\n    fields: [\n        { \n            name: \"startFrequency\",\n            displayName: \"Start frequency\",\n            type: \"number\"\n        }\n    ]\n}, defaultValues);\n\nif (!values || isNaN(values.startFrequency)) {\n    return;\n}\n    \nconnection.acquire();    \nconnection.command(`:FREQuency:STARt ${values.startFrequency}`);\nconnection.release();\n\nconsole.log(values);"
        },
        "keybinding": "",
        "showInToolbar": true,
        "toolbarButtonPosition": 2,
        "toolbarButtonColor": "#727b84",
        "requiresConfirmation": false
      },
      {
        "id": "479473e5-fdb3-4b27-9c0b-5245374af4e8",
        "name": "Fstop",
        "action": {
          "type": "javascript",
          "data": "var defaultValues = {\n    stopFrequency: '3.2e9'\n};\n\nvar values = await input({\n    title: \"Enter Stop Frequency\",\n    fields: [\n        { \n            name: \"stopFrequency\",\n            displayName: \"Stop frequency\",\n            type: \"number\"\n        }\n    ]\n}, defaultValues);\n\nif (!values || isNaN(values.stopFrequency)) {\n    return;\n}\n    \nconnection.acquire();    \nconnection.command(`:FREQuency:STOP ${values.stopFrequency}`);\nconnection.release();\n\nconsole.log(values);"
        },
        "keybinding": "",
        "showInToolbar": true,
        "toolbarButtonPosition": 3,
        "toolbarButtonColor": "#727b84",
        "requiresConfirmation": false
      },
      {
        "id": "e817f022-82ef-4933-9813-84454e09c6e8",
        "name": "RBW",
        "action": {
          "type": "javascript",
          "data": "var defaultValues = {\r\n    RBW: \"1KHz\"\r\n};\r\n\r\nvar values = await input({\r\n    title: \"Enter Resolution Band Width\",\r\n    fields: [\r\n        { \r\n            name: \"RBW\",\r\n            type: \"enum\",\r\n            enumItems: [\r\n                {\r\n                    id: \"10Hz\",\r\n                    label: \"10 Hz\"\r\n                },\r\n                {\r\n                    id: \"30Hz\",\r\n                    label: \"30 Hz\"\r\n                },\r\n                {\r\n                    id: \"100Hz\",\r\n                    label: \"100 Hz\"\r\n                },\r\n                {\r\n                    id: \"300Hz\",\r\n                    label: \"300 Hz\"\r\n                },\r\n                {\r\n                    id: \"1KHz\",\r\n                    label: \"1 KHz\"\r\n                },\r\n                {\r\n                    id: \"3KHz\",\r\n                    label: \"3 KHz\"\r\n                },\r\n                {\r\n                    id: \"10KHz\",\r\n                    label: \"10 KHz\"\r\n                },\r\n                {\r\n                    id: \"30KHz\",\r\n                    label: \"30 KHz\"\r\n                },                \r\n                {\r\n                    id: \"100KHz\",\r\n                    label: \"100 KHz\"\r\n                },\r\n                {\r\n                    id: \"300KHz\",\r\n                    label: \"300 KHz\"\r\n                },                \r\n                {\r\n                    id: \"1MHz\",\r\n                    label: \"1 MHz\"\r\n                }                \r\n            ]\r\n        }\r\n    ]\r\n}, defaultValues);\r\n\r\nif (!values) {\r\n    return;\r\n}\r\n    \r\nconnection.acquire();    \r\nconnection.command(`:SENSe:BWIDth ${values.RBW}`);\r\nconnection.release();\r\n\r\nconsole.log(values);"
        },
        "keybinding": "",
        "showInToolbar": true,
        "toolbarButtonPosition": 6,
        "toolbarButtonColor": "#7BC3D4",
        "requiresConfirmation": false
      },
      {
        "id": "bad65c4e-a761-46d4-a0d4-87fdb7ab7f6b",
        "name": "Att",
        "action": {
          "type": "javascript",
          "data": "var defaultValues = {\n    att: '20'\n};\n\nvar values = await input({\n    title: \"Enter Attenuation in dB\",\n    fields: [\n        { \n            name: \"att\",\n            displayName: \"Attenuator\",\n            type: \"number\",\n            validators: [validators.rangeInclusive(0, 51)]            \n        }\n    ]\n}, defaultValues);\n\nif (!values || isNaN(values.att)) {\n    return;\n}\n    \nconnection.acquire();    \nconnection.command(`:SENSe:POWer:ATTenuation ${values.att}`);\nconnection.release();\n\nconsole.log(values);"
        },
        "keybinding": "",
        "showInToolbar": true,
        "toolbarButtonPosition": 7,
        "toolbarButtonColor": "#C1D751",
        "requiresConfirmation": false
      },
      {
        "id": "1e5c57be-ffa8-4cfd-b9c2-0876a448ede4",
        "name": "Detector",
        "action": {
          "type": "javascript",
          "data": "var defaultValues = {\r\n    detector: \"Positive\"\r\n};\r\n\r\nvar values = await input({\r\n    title: \"Select the Detector\",\r\n    fields: [\r\n        { \r\n            name: \"detector\",\r\n            type: \"enum\",\r\n            enumItems: [\r\n                {\r\n                    id: \"Positive\",\r\n                    label: \"Pos Peak\"\r\n                },\r\n                {\r\n                    id: \"Negative\",\r\n                    label: \"Neg Peak\"\r\n                },\r\n                {\r\n                    id: \"Sample\",\r\n                    label: \"Sample\"\r\n                },\r\n                {\r\n                    id: \"Normal\",\r\n                    label: \"Normal\"\r\n                },\r\n                {\r\n                    id: \"Average\",\r\n                    label: \"Average\"\r\n                },\r\n             \r\n            ]\r\n        }\r\n    ]\r\n}, defaultValues);\r\n\r\nif (!values) {\r\n    return;\r\n}\r\n    \r\nconnection.acquire();    \r\nconnection.command(`:SENSe:DETector:TRACe1 ${values.detector}`);\r\nconnection.release();\r\n\r\nconsole.log(values);"
        },
        "keybinding": "",
        "showInToolbar": true,
        "toolbarButtonPosition": 8,
        "toolbarButtonColor": "#EE8C3E",
        "requiresConfirmation": false
      },
      {
        "id": "79a1559c-a7fb-4c9a-eaa1-4e6a9cec5bf9",
        "name": "Screenshot",
        "action": {
          "type": "scpi-commands",
          "data": "HCOPy:SDUMp:DATA?"
        },
        "keybinding": "",
        "showInToolbar": true,
        "toolbarButtonPosition": 1,
        "toolbarButtonColor": "#E665A0",
        "requiresConfirmation": false
      }
    ]
  }
}